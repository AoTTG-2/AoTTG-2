name: Actions üòé

on:
  pull_request: {}
  push: { branches: [development] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE2 }}

jobs:
  
  requestManualActivationFile:
    name: Request manual activation file üîë
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.1.4f1
    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Request manual activation file
      - uses: webbertakken/unity-request-manual-activation-file@v1.1
        id: getManualLicenseFile
        with:
          unityVersion: ${{ matrix.unityVersion }}

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - uses: actions/upload-artifact@v1
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  requestActivation:
    name: Request activation ‚úî
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2

  #activateAndThenReturnLicense:
  #  name: returnLicense üéà
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: webbertakken/unity-activate@v1.2
  #    - uses: webbertakken/unity-return-license@v1
  
  testRunnerInEditMode:
    name: Test in editmode üìù
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: test-project/Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          testMode: editmode
          unityVersion: 2020.1.4f1

      # Upload artifact
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (edit mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  testRunnerInPlayMode:
    name: Test in playmode üì∫
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          testMode: playmode
          unityVersion: 2020.1.4f1

      # Upload artifact
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (play mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  testRunnerInAllModes:
    name: Test all modes ‚ú®
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: test-project/Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          testMode: all
          unityVersion: 2020.1.4f1

      # Upload artifacts
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  #
  # Complete advanced workflow
  #

  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.1.4f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          unityVersion: ${{ matrix.unityVersion }}
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: webbertakken/unity-builder@v0.10
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build
