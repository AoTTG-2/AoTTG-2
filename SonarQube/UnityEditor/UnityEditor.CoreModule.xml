<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEditor.CoreModule</name>
    </assembly>
    <member name="T:UnityEditor.ActionOnDotNetUnhandledException">
      <summary>
        <para>The behavior in case of unhandled .NET exception.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ActionOnDotNetUnhandledException.Crash">
      <summary>
        <para>Crash in case of unhandled .NET exception (Crash Report will be generated).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ActionOnDotNetUnhandledException.SilentExit">
      <summary>
        <para>Silent exit in case of unhandled .NET exception (no Crash Report generated).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Advertisements.AdvertisementSettings">
      <summary>
        <para>Editor API for the Unity Services editor feature. Normally UnityAds is enabled from the Services window, but if writing your own editor extension, this API can be used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.enabled">
      <summary>
        <para>Global boolean for enabling or disabling the advertisement feature.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.initializeOnStartup">
      <summary>
        <para>Controls if the advertisement system should be initialized immediately on startup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.testMode">
      <summary>
        <para>Controls if testing advertisements are used instead of production advertisements.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.GetGameId(UnityEngine.RuntimePlatform)">
      <summary>
        <para>Gets the game identifier specified for a runtime platform.</para>
      </summary>
      <param name="platform"></param>
      <returns>
        <para>The platform specific game identifier.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.GetPlatformGameId(System.String)">
      <summary>
        <para>Gets the game identifier specified for a runtime platform.</para>
      </summary>
      <param name="platformName"></param>
      <returns>
        <para>The platform specific game identifier.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.IsPlatformEnabled(UnityEngine.RuntimePlatform)">
      <summary>
        <para>Returns whether a specific platform is enabled.</para>
      </summary>
      <param name="platform">The platform to check.</param>
      <returns>
        <para>Boolean for the platform.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetGameId(UnityEngine.RuntimePlatform,System.String)">
      <summary>
        <para>Sets the game identifier for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="gameId"></param>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetPlatformEnabled(UnityEngine.RuntimePlatform,System.Boolean)">
      <summary>
        <para>Enable the specific platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetPlatformGameId(System.String,System.String)">
      <summary>
        <para>Sets the game identifier for the specified platform.</para>
      </summary>
      <param name="platformName"></param>
      <param name="gameId"></param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshBuilder">
      <summary>
        <para>Navigation mesh builder interface.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AI.NavMeshBuilder.isRunning">
      <summary>
        <para>Returns true if an asynchronous build is still running. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMesh">
      <summary>
        <para>Build the Navmesh. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMeshAsync">
      <summary>
        <para>Build the Navmesh Asyncronously. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMeshForMultipleScenes(System.String[])">
      <summary>
        <para>Builds the combined navmesh for the contents of multiple Scenes. (UnityEditor)</para>
      </summary>
      <param name="paths">Array of paths to Scenes that are used for building the navmesh.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.Cancel">
      <summary>
        <para>Cancel Navmesh construction. (UnityEditor) See Also: NavMeshBuilder.BuildNavMeshAsync</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.Cancel(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Cancels an asynchronous update of the specified NavMesh data. (UnityEngine) See Also: NavMeshBuilder.UpdateNavMeshDataAsync.</para>
      </summary>
      <param name="data">The data associated with asynchronous updating.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.ClearAllNavMeshes">
      <summary>
        <para>Clear all Navmeshes. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.CollectSourcesInStage(UnityEngine.Bounds,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,UnityEngine.SceneManagement.Scene,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Collects renderers or physics colliders, and terrains within a volume. (UnityEditor)</para>
      </summary>
      <param name="includedWorldBounds">The queried objects must overlap these bounds to be included in the results.</param>
      <param name="includedLayerMask">Specifies which layers are included in the query.</param>
      <param name="geometry">Which type of geometry to collect - e.g. physics colliders.</param>
      <param name="defaultArea">Area type to assign to results, unless modified by NavMeshMarkup.</param>
      <param name="markups">List of markups which allows finer control over how objects are collected.</param>
      <param name="stageProxy">Results are selected only from the stage to which this scene belongs.</param>
      <param name="results">List where results are stored, the list is cleared at the beginning of the call.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.CollectSourcesInStage(UnityEngine.Transform,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,UnityEngine.SceneManagement.Scene,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Collects renderers or physics colliders, and terrains within a transform hierarchy. (UnityEditor)</para>
      </summary>
      <param name="root">If not null, consider only root and its children in the query; if null, includes everything loaded.</param>
      <param name="includedLayerMask">Specifies which layers are included in the query.</param>
      <param name="geometry">Which type of geometry to collect - e.g. physics colliders.</param>
      <param name="defaultArea">Area type to assign to results, unless modified by NavMeshMarkup.</param>
      <param name="markups">List of markups which allows finer control over how objects are collected.</param>
      <param name="stageProxy">Results are selected only from the stage to which this scene belongs.</param>
      <param name="results">List where results are stored, the list is cleared at the beginning of the call.</param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshEditorHelpers">
      <summary>
        <para>NavMesh utility functionality effective only in the Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshEditorHelpers.DrawBuildDebug(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildDebugFlags)">
      <summary>
        <para>Displays in the Editor the precise intermediate data used during the build process of the specified NavMesh.</para>
      </summary>
      <param name="navMeshData">NavMesh object for which debug data has been deliberately collected during the build process.</param>
      <param name="flags">Bitmask that designates the types of data to show at one time.</param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshVisualizationSettings">
      <summary>
        <para>Represents the visualization state of the navigation debug graphics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AI.NavMeshVisualizationSettings.showNavigation">
      <summary>
        <para>A count of how many users requesting navigation debug graphics to be enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Analytics.AnalyticsSettings">
      <summary>
        <para>Editor API for the Unity Services editor feature. Normally Analytics is enabled from the Services window, but if writing your own editor extension, this API can be used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.configUrl">
      <summary>
        <para>Set the Analytics config end point.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.deviceStatsEnabledInBuild">
      <summary>
        <para>Reports whether device stats are enabled at runtime.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.enabled">
      <summary>
        <para>If set to true, this Boolean field enables the Analytics feature in Unity. It disables the feature if it is set to false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.eventUrl">
      <summary>
        <para>Set the Analytics event end point.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.initializeOnStartup">
      <summary>
        <para>Controls whether Unity initializes Analytics immediately on startup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.testMode">
      <summary>
        <para>Set to true for testing Analytics integration only within the Editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Analytics.AnalyticsSettings.OnRequireInBuildHandler(UnityEditor.Analytics.AnalyticsSettings/RequireInBuildDelegate)">
      <summary>
        <para>Dispatches whenever a platform build starts. Use this event to enable Analytics in a platform build.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEditor.Analytics.AnalyticsSettings.RequireInBuildDelegate">
      <summary>
        <para>Defines the delegate signature to handle AnalyticsSettings.RequireInBuildDelegate events.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Analytics.PerformanceReportingSettings">
      <summary>
        <para>Normally performance reporting is enabled from the Services window, but if writing your own editor extension, this API can be used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.PerformanceReportingSettings.enabled">
      <summary>
        <para>This Boolean field causes the performance reporting feature in Unity to be enabled if true, or disabled if false.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Android.IPostGenerateGradleAndroidProject">
      <summary>
        <para>Implement this interface to receive a callback after the Android Gradle project is generated. Inherited from UnityEditor.Build.IOrderedCallback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Android.IPostGenerateGradleAndroidProject.OnPostGenerateGradleAndroidProject(System.String)">
      <summary>
        <para>Implement this function to receive a callback after the Android Gradle project is generated and before building begins. It is not called when doing an Internal build.</para>
      </summary>
      <param name="path">The path to the root of the Gradle project. Note: when exporting the project, this parameter holds the path to the folder specified for export.</param>
    </member>
    <member name="T:UnityEditor.AndroidArchitecture">
      <summary>
        <para>Android CPU architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.All">
      <summary>
        <para>All architectures.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.ARM64">
      <summary>
        <para>64-bit ARM architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.ARMv7">
      <summary>
        <para>32-bit ARM architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.None">
      <summary>
        <para>Invalid architecture.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBlitType">
      <summary>
        <para>Describes the method for how content is displayed on the screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Always">
      <summary>
        <para>Always render offscreen and blit to the backbuffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Auto">
      <summary>
        <para>Automatically determine the most appropriate method for drawing to the screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Never">
      <summary>
        <para>Never render offscreen and blit to the backbuffer. Always render directly to the backbuffer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBuildSystem">
      <summary>
        <para>Type of Android build system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.ADT">
      <summary>
        <para>Export ADT (legacy) project. This option is obsolete and no longer supported - please use AndroidBuildSystem.Gradle export instead.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.Gradle">
      <summary>
        <para>Build APK using Gradle or export Gradle project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.Internal">
      <summary>
        <para>Build APK using internal build system.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBuildType">
      <summary>
        <para>Build configurations for the generated project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Debug">
      <summary>
        <para>Build configuration set to Debug for the generated project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Development">
      <summary>
        <para>Build configuration set to Development for the generated project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Release">
      <summary>
        <para>Build configuration set to Release for the generated project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidETC2Fallback">
      <summary>
        <para>This enumeration has values for different qualities to decompress ETC2 textures on Android devices that don't support the ETC2 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality16Bit">
      <summary>
        <para>Textures are decompressed to a suitable 16-bit format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality32Bit">
      <summary>
        <para>Textures are decompressed to the TextureFormat.RGBA32 format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality32BitDownscaled">
      <summary>
        <para>Textures are decompressed to the TextureFormat.RGBA32 format and downscaled to half of the original texture width and height.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidETC2FallbackOverride">
      <summary>
        <para>This enumeration has values for different qualities to decompress an ETC2 texture on Android devices that don't support the ETC2 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality16Bit">
      <summary>
        <para>Texture is decompressed to a suitable 16-bit format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality32Bit">
      <summary>
        <para>Texture is decompressed to the TextureFormat.RGBA32 format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality32BitDownscaled">
      <summary>
        <para>Texture is decompressed to the TextureFormat.RGBA32 format and downscaled to half of the original texture width and height.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.UseBuildSettings">
      <summary>
        <para>Use the value defined in Player build settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidGamepadSupportLevel">
      <summary>
        <para>Gamepad support level for Android TV.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.RequiresGamepad">
      <summary>
        <para>Requires a gamepad for gameplay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.SupportsDPad">
      <summary>
        <para>Game is fully operational with a D-pad, no gamepad needed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.SupportsGamepad">
      <summary>
        <para>Works with a gamepad, but does not require it.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidMinification">
      <summary>
        <para>How to minify the java code of your binary.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.Gradle">
      <summary>
        <para>Use experimental internal gradle minification.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.None">
      <summary>
        <para>Use no minification.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.Proguard">
      <summary>
        <para>Use proguard minification.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidPreferredInstallLocation">
      <summary>
        <para>Preferred application install location.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.Auto">
      <summary>
        <para>Let the OS decide, app doesn't have any preferences.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.ForceInternal">
      <summary>
        <para>Force installation into internal memory. Needed for things like Live Wallpapers.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.PreferExternal">
      <summary>
        <para>Prefer external, if possible. Install to internal otherwise.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidSdkVersions">
      <summary>
        <para>API levels that can be specified in scripts. Note that the lowest API level here strictly corresponds to the lowest supported API level, however these values should not be used to determine the highest supported API level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel16">
      <summary>
        <para>Android 4.1, "Jelly Bean", API level 16.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel17">
      <summary>
        <para>Android 4.2, "Jelly Bean", API level 17.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel18">
      <summary>
        <para>Android 4.3, "Jelly Bean", API level 18.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel19">
      <summary>
        <para>Android 4.4, "KitKat", API level 19.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel21">
      <summary>
        <para>Android 5.0, "Lollipop", API level 21.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel22">
      <summary>
        <para>Android 5.1, "Lollipop", API level 22.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel23">
      <summary>
        <para>Android 6.0, "Marshmallow", API level 23.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel24">
      <summary>
        <para>Android 7.0, "Nougat", API level 24.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel25">
      <summary>
        <para>Android 7.1, "Nougat", API level 25.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel26">
      <summary>
        <para>Android 8.0, "Oreo", API level 26.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel27">
      <summary>
        <para>Android 8.1, "Oreo", API level 27.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel28">
      <summary>
        <para>Android 9.0, "Pie", API level 28.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel29">
      <summary>
        <para>Android 10.0, API level 29.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel30">
      <summary>
        <para>Android 11.0, API level 30.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevelAuto">
      <summary>
        <para>Sets the target API level automatically, according to the latest installed SDK on your computer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidShowActivityIndicatorOnLoading">
      <summary>
        <para>Application should show ActivityIndicator when loading.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.DontShow">
      <summary>
        <para>Don't Show.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.InversedLarge">
      <summary>
        <para>Inversed Large.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.InversedSmall">
      <summary>
        <para>Inversed Small.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.Large">
      <summary>
        <para>Large.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.Small">
      <summary>
        <para>Small.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidSplashScreenScale">
      <summary>
        <para>Android splash screen scale modes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.Center">
      <summary>
        <para>Center.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.ScaleToFill">
      <summary>
        <para>Scale to fill.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.ScaleToFit">
      <summary>
        <para>Scale to fit.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidTargetDevice">
      <summary>
        <para>Target Android device architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevice.ARMv7">
      <summary>
        <para>ARMv7 only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevice.FAT">
      <summary>
        <para>All supported architectures.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimBool">
      <summary>
        <para>Lerp from 0 - 1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.AnimBool.faded">
      <summary>
        <para>Retuns the float value of the tween.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(System.Boolean)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(System.Boolean,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.Fade(System.Single,System.Single)">
      <summary>
        <para>Returns a value between from and to depending on the current value of the bools animation.</para>
      </summary>
      <param name="from">Value to lerp from.</param>
      <param name="to">Value to lerp to.</param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.GetValue">
      <summary>
        <para>Type specific implementation of BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Current value.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimFloat">
      <summary>
        <para>An animated float value.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.#ctor(System.Single)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.#ctor(System.Single,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.GetValue">
      <summary>
        <para>Type specific implementation of BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Current Value.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimQuaternion">
      <summary>
        <para>An animated Quaternion value.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.#ctor(UnityEngine.Quaternion)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.#ctor(UnityEngine.Quaternion,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.GetValue">
      <summary>
        <para>Type specific implementation of BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Current Value.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimVector3">
      <summary>
        <para>An animated Vector3 value.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor(UnityEngine.Vector3)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor(UnityEngine.Vector3,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="value">Start Value.</param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.GetValue">
      <summary>
        <para>Type specific implementation of BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Current Value.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.BaseAnimValue`1">
      <summary>
        <para>Abstract base class for Animated Values.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.isAnimating">
      <summary>
        <para>Is the value currently animating.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimatedValues.BaseAnimValue_1.speed">
      <summary>
        <para>Speed of the tween.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.target">
      <summary>
        <para>Target to tween towards.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.value">
      <summary>
        <para>Current value of the animation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimatedValues.BaseAnimValue_1.valueChanged">
      <summary>
        <para>Callback while the value is changing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.BeginAnimating(T,T)">
      <summary>
        <para>Begin an animation moving from the start value to the target value.</para>
      </summary>
      <param name="newTarget">Target value.</param>
      <param name="newStart">Start value.</param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.GetValue">
      <summary>
        <para>Abstract function to be overridden in derived types. Should return the current value of the animated value.</para>
      </summary>
      <returns>
        <para>Current Value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.StopAnim(T)">
      <summary>
        <para>Stop the animation and assign the given value.</para>
      </summary>
      <param name="newValue">Value to assign.</param>
    </member>
    <member name="T:UnityEditor.AnimatedValues.BaseAnimValueNonAlloc`1">
      <summary>
        <para>Abstract base class that provides an allocation free version of BaseAnimValue.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationClipCurveData">
      <summary>
        <para>An AnimationClipCurveData object contains all the information needed to identify a specific curve in an AnimationClip. The curve animates a specific property of a component  material attached to a game object  animated bone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.curve">
      <summary>
        <para>The actual animation curve.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.path">
      <summary>
        <para>The path of the game object / bone being animated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.propertyName">
      <summary>
        <para>The name of the property being animated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.type">
      <summary>
        <para>The type of the component / material being animated.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationMode">
      <summary>
        <para>AnimationMode is used by the AnimationWindow to store properties modified
      by the AnimationClip playback.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.animatedPropertyColor">
      <summary>
        <para>The color used to show that a property is currently being animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.candidatePropertyColor">
      <summary>
        <para>The color used to show that an animated property has been modified.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.recordedPropertyColor">
      <summary>
        <para>The color used to show that an animated property automatically records changes in the animation clip.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.AddEditorCurveBinding(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Marks a property defined by an EditorCurveBinding as currently being animated.</para>
      </summary>
      <param name="gameObject">The GameObject being modified.</param>
      <param name="binding">The binding for the property being modified.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.AddPropertyModification(UnityEditor.EditorCurveBinding,UnityEditor.PropertyModification,System.Boolean)">
      <summary>
        <para>Marks a property as currently being animated.</para>
      </summary>
      <param name="binding">Description of the animation clip curve being modified.</param>
      <param name="modification">Object property being modified.</param>
      <param name="keepPrefabOverride">Indicates whether to retain modifications when the targeted object is an instance of a Prefab.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.BeginSampling">
      <summary>
        <para>Initialise the start of the animation clip sampling.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.EndSampling">
      <summary>
        <para>Finish the sampling of the animation clip.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.InAnimationMode">
      <summary>
        <para>Checks whether the Editor is in Animation mode.</para>
      </summary>
      <param name="driver">An AnimationModeDriver object that tests if AnimationMode has been locked specifically for this driver.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.InAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Checks whether the Editor is in Animation mode.</para>
      </summary>
      <param name="driver">An AnimationModeDriver object that tests if AnimationMode has been locked specifically for this driver.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.IsPropertyAnimated(UnityEngine.Object,System.String)">
      <summary>
        <para>Checks whether the specified property is in Animation mode and is being animated.</para>
      </summary>
      <param name="target">The object to determine if it contained the animation.</param>
      <param name="propertyPath">The name of the animation to search for.</param>
      <returns>
        <para>Whether the property search is found or not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationMode.SampleAnimationClip(UnityEngine.GameObject,UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Samples the AnimationClip for the GameObject and also records modified properties when in Animation mode.</para>
      </summary>
      <param name="gameObject">The root GameObject for the animation.</param>
      <param name="clip">The AnimationClip to sample.</param>
      <param name="time">The time at which to sample.</param>
      <returns>
        <para>Returns true when the Editor is in Animation mode. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationMode.SamplePlayableGraph">
      <summary>
        <para>Samples the specified output index of a PlayableGraph and also records modified properties when in Animation mode.</para>
      </summary>
      <param name="graph">The PlayableGraph to sample.</param>
      <param name="index">The output index to sample in the Playable Graph.</param>
      <param name="time">The time at which to sample.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StartAnimationMode">
      <summary>
        <para>Starts the Animation mode.</para>
      </summary>
      <param name="driver">Specify an AnimationModeDriver object to lock the AnimationMode to a driver.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StartAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Starts the Animation mode.</para>
      </summary>
      <param name="driver">Specify an AnimationModeDriver object to lock the AnimationMode to a driver.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StopAnimationMode">
      <summary>
        <para>Stops the Animation mode and reverts any properties that were animated while in Animation mode.</para>
      </summary>
      <param name="driver">An AnimationModeDriver object must be specified if one was specified when the Animation mode was started (StartAnimationMode.)</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StopAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Stops the Animation mode and reverts any properties that were animated while in Animation mode.</para>
      </summary>
      <param name="driver">An AnimationModeDriver object must be specified if one was specified when the Animation mode was started (StartAnimationMode.)</param>
    </member>
    <member name="T:UnityEditor.AnimationModeDriver">
      <summary>
        <para>AnimationMode uses AnimationModeDriver to identify the animation driver.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorCondition">
      <summary>
        <para>Condition that is used to determine if a transition must be taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.mode">
      <summary>
        <para>The mode of the condition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.parameter">
      <summary>
        <para>The name of the parameter used in the condition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.threshold">
      <summary>
        <para>The AnimatorParameter's threshold value for the condition to be true.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorConditionMode">
      <summary>
        <para>The mode of the condition.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Equals">
      <summary>
        <para>The condition is true when parameter value is equal to the threshold.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Greater">
      <summary>
        <para>The condition is true when parameter value is greater than the threshold.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.If">
      <summary>
        <para>The condition is true when the parameter value is true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.IfNot">
      <summary>
        <para>The condition is true when the parameter value is false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Less">
      <summary>
        <para>The condition is true when the parameter value is less than the threshold.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.NotEqual">
      <summary>
        <para>The condition is true when the parameter value is not equal to the threshold.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorController">
      <summary>
        <para>The Animator Controller controls animation through layers with state machines, controlled by parameters.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorController.layers">
      <summary>
        <para>The layers in the controller.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorController.parameters">
      <summary>
        <para>Parameters are used to communicate between scripting and the controller. They are used to drive transitions and blendtrees for example.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddEffectiveStateMachineBehaviour(System.Type,UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Adds a state machine behaviour class of type stateMachineBehaviourType to the AnimatorState for layer layerIndex. This function should be used when you are dealing with synchronized layer and would like to add a state machine behaviour on a synchronized layer. C# Users can use a generic version.</para>
      </summary>
      <param name="stateMachineBehaviourType"></param>
      <param name="state"></param>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddEffectiveStateMachineBehaviour(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="state"></param>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddLayer(System.String)">
      <summary>
        <para>Utility function to add a layer to the controller.</para>
      </summary>
      <param name="name">The name of the Layer.</param>
      <param name="layer">The layer to add.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddLayer(UnityEditor.Animations.AnimatorControllerLayer)">
      <summary>
        <para>Utility function to add a layer to the controller.</para>
      </summary>
      <param name="name">The name of the Layer.</param>
      <param name="layer">The layer to add.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddMotion(UnityEngine.Motion)">
      <summary>
        <para>Utility function that creates a new state  with the motion in it.</para>
      </summary>
      <param name="motion">The Motion that will be in the AnimatorState.</param>
      <param name="layerIndex">The layer where the Motion will be added.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddMotion(UnityEngine.Motion,System.Int32)">
      <summary>
        <para>Utility function that creates a new state  with the motion in it.</para>
      </summary>
      <param name="motion">The Motion that will be in the AnimatorState.</param>
      <param name="layerIndex">The layer where the Motion will be added.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddParameter(System.String,UnityEngine.AnimatorControllerParameterType)">
      <summary>
        <para>Utility function to add a parameter to the controller.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="type">The type of the parameter.</param>
      <param name="paramater">The parameter to add.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddParameter(UnityEngine.AnimatorControllerParameter)">
      <summary>
        <para>Utility function to add a parameter to the controller.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="type">The type of the parameter.</param>
      <param name="paramater">The parameter to add.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPath(System.String)">
      <summary>
        <para>Creates an AnimatorController at the given path.</para>
      </summary>
      <param name="path">The path where the AnimatorController asset will be created.</param>
      <returns>
        <para>The created AnimationController or null if an error occured.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPathWithClip(System.String,UnityEngine.AnimationClip)">
      <summary>
        <para>Creates an AnimatorController at the given path, and automatically create an AnimatorLayer  with an AnimatorStateMachine that will add a State with the AnimationClip in it.</para>
      </summary>
      <param name="path">The path where the AnimatorController will be created.</param>
      <param name="clip">The default clip that will be played by the AnimatorController.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateBlendTreeInController(System.String,UnityEditor.Animations.BlendTree&amp;)">
      <summary>
        <para>Creates a BlendTree in a new AnimatorState.</para>
      </summary>
      <param name="name">The name of the BlendTree.</param>
      <param name="tree">The created BlendTree.</param>
      <param name="layerIndex">The index where the BlendTree will be created.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateBlendTreeInController(System.String,UnityEditor.Animations.BlendTree&amp;,System.Int32)">
      <summary>
        <para>Creates a BlendTree in a new AnimatorState.</para>
      </summary>
      <param name="name">The name of the BlendTree.</param>
      <param name="tree">The created BlendTree.</param>
      <param name="layerIndex">The index where the BlendTree will be created.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateStateMachineBehaviour(UnityEditor.MonoScript)">
      <summary>
        <para>This function will create a StateMachineBehaviour instance based on the class define in this script.</para>
      </summary>
      <param name="script">MonoScript class to instantiate.</param>
      <returns>
        <para>Returns instance id of created object, returns 0 if something is not valid.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.FindStateMachineBehaviourContext(UnityEngine.StateMachineBehaviour)">
      <summary>
        <para>Use this function to retrieve the owner of this behaviour.</para>
      </summary>
      <param name="behaviour">The State Machine Behaviour to get context for.</param>
      <returns>
        <para>Returns the State Machine Behaviour edition context.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetBehaviours">
      <summary>
        <para>Returns all StateMachineBehaviour that match type T or are derived from T.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveBehaviours(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Gets the effective state machine behaviour list for the AnimatorState. Behaviours are either stored in the AnimatorStateMachine or in the AnimatorLayer's ovverrides. Use this function to get Behaviour list that is effectively used.</para>
      </summary>
      <param name="state">The AnimatorState which we want the Behaviour list.</param>
      <param name="layerIndex">The layer that is queried.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveMotion(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Gets the effective Motion for the AnimatorState. The Motion is either stored in the AnimatorStateMachine or in the AnimatorLayer's ovverrides. Use this function to get the Motion that is effectively used.</para>
      </summary>
      <param name="state">The AnimatorState which we want the Motion.</param>
      <param name="layerIndex">The layer that is queried.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Gets the effective Motion for the AnimatorState. The Motion is either stored in the AnimatorStateMachine or in the AnimatorLayer's ovverrides. Use this function to get the Motion that is effectively used.</para>
      </summary>
      <param name="state">The AnimatorState which we want the Motion.</param>
      <param name="layerIndex">The layer that is queried.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.MakeUniqueLayerName(System.String)">
      <summary>
        <para>Creates a unique name for the layers.</para>
      </summary>
      <param name="name">The desired name of the AnimatorLayer.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.MakeUniqueParameterName(System.String)">
      <summary>
        <para>Creates a unique name for the parameter.</para>
      </summary>
      <param name="name">The desired name of the AnimatorParameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.RemoveLayer(System.Int32)">
      <summary>
        <para>Utility function to remove a layer from the controller.</para>
      </summary>
      <param name="index">The index of the AnimatorLayer.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.RemoveParameter(System.Int32)">
      <summary>
        <para>Utility function to remove a parameter from the controller.</para>
      </summary>
      <param name="index">The index of the AnimatorParameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveBehaviours">
      <summary>
        <para>Sets the effective state machine Behaviour list for the AnimatorState. The Behaviour list is either stored in the AnimatorStateMachine or in the AnimatorLayer's ovverrides. Use this function to set the Behaviour list that is effectively used.</para>
      </summary>
      <param name="state">The AnimatorState which we want to set the Behaviour list.</param>
      <param name="layerIndex">The layer to set the Behaviour list.</param>
      <param name="behaviours">The Behaviour list that will be set.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion)">
      <summary>
        <para>Sets the effective Motion for the AnimatorState. The Motion is either stored in the AnimatorStateMachine or in the AnimatorLayer's ovverrides. Use this function to set the Motion that is effectively used.</para>
      </summary>
      <param name="state">The AnimatorState which we want to set the Motion.</param>
      <param name="motion">The Motion that will be set.</param>
      <param name="layerIndex">The layer to set the Motion.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion,System.Int32)">
      <summary>
        <para>Sets the effective Motion for the AnimatorState. The Motion is either stored in the AnimatorStateMachine or in the AnimatorLayer's ovverrides. Use this function to set the Motion that is effectively used.</para>
      </summary>
      <param name="state">The AnimatorState which we want to set the Motion.</param>
      <param name="motion">The Motion that will be set.</param>
      <param name="layerIndex">The layer to set the Motion.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorControllerLayer">
      <summary>
        <para>The Animation Layer contains a state machine that controls animations of a model or part of it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.avatarMask">
      <summary>
        <para>The AvatarMask that is used to mask the animation on the given layer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.blendingMode">
      <summary>
        <para>The blending mode used by the layer. It is not taken into account for the first layer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.defaultWeight">
      <summary>
        <para>The default blending weight that the layers has. It is not taken into account for the first layer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.iKPass">
      <summary>
        <para>When active, the layer will have an IK pass when evaluated. It will trigger an OnAnimatorIK callback.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.name">
      <summary>
        <para>The name of the layer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.stateMachine">
      <summary>
        <para>The state machine for the layer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.syncedLayerAffectsTiming">
      <summary>
        <para>When active, the layer will take control of the duration of the Synced Layer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.syncedLayerIndex">
      <summary>
        <para>Specifies the index of the Synced Layer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.GetOverrideBehaviours(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Gets the override behaviour list for the state on the given layer.</para>
      </summary>
      <param name="state">The state which we want to get the behaviour list.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.GetOverrideMotion(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Gets the override motion for the state on the given layer.</para>
      </summary>
      <param name="state">The state which we want to get the motion.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.SetOverrideBehaviours">
      <summary>
        <para>Sets the override behaviour list for the state on the given layer.</para>
      </summary>
      <param name="state">The state which we want to set the behaviour list.</param>
      <param name="behaviours">The behaviour list that will be set.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.SetOverrideMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion)">
      <summary>
        <para>Sets the override motion for the state on the given layer.</para>
      </summary>
      <param name="state">The state which we want to set the motion.</param>
      <param name="motion">The motion that will be set.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorLayerBlendingMode">
      <summary>
        <para>Specifies how the layer is blended with the previous layers.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorLayerBlendingMode.Additive">
      <summary>
        <para>Animations are added to the previous layers.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorLayerBlendingMode.Override">
      <summary>
        <para>Animations overrides to the previous layers.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorState">
      <summary>
        <para>States are the basic building blocks of a state machine. Each state contains a Motion ( AnimationClip or BlendTree) which will play while the character is in that state. When an event in the game triggers a state transition, the character will be left in a new state whose animation sequence will then take over.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.behaviours">
      <summary>
        <para>The Behaviour list assigned to this state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffset">
      <summary>
        <para>Offset at which the animation loop starts. Useful for synchronizing looped animations.
Units is normalized time.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffsetParameter">
      <summary>
        <para>The animator controller parameter that drives the cycle offset value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffsetParameterActive">
      <summary>
        <para>Define if the cycle offset value is driven by an Animator controller parameter or by the value set in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.iKOnFeet">
      <summary>
        <para>Should Foot IK be respected for this state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirror">
      <summary>
        <para>Should the state be mirrored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirrorParameter">
      <summary>
        <para>The animator controller parameter that drives the mirror value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirrorParameterActive">
      <summary>
        <para>Define if the mirror value is driven by an Animator controller parameter or by the value set in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.motion">
      <summary>
        <para>The motion assigned to this state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.nameHash">
      <summary>
        <para>The hashed name of the state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speed">
      <summary>
        <para>The default speed of the motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speedParameter">
      <summary>
        <para>The animator controller parameter that drives the speed value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speedParameterActive">
      <summary>
        <para>Define if the speed value is driven by an Animator controller parameter or by the value set in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.tag">
      <summary>
        <para>A tag can be used to identify a state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.timeParameter">
      <summary>
        <para>If timeParameterActive is true, the value of this Parameter will be used instead of normalized time.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.timeParameterActive">
      <summary>
        <para>If true, use value of given Parameter as normalized time.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.transitions">
      <summary>
        <para>The transitions that are going out of the state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.writeDefaultValues">
      <summary>
        <para>Whether or not the AnimatorStates writes back the default values for properties that are not animated by its Motion.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddExitTransition">
      <summary>
        <para>Utility function to add an outgoing transition to the exit of the state's parent state machine.</para>
      </summary>
      <param name="defaultExitTime">If true, the exit time will be the equivalent of 0.25 second.</param>
      <returns>
        <para>The Animations.AnimatorStateTransition that was added.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddExitTransition(System.Boolean)">
      <summary>
        <para>Utility function to add an outgoing transition to the exit of the state's parent state machine.</para>
      </summary>
      <param name="defaultExitTime">If true, the exit time will be the equivalent of 0.25 second.</param>
      <returns>
        <para>The Animations.AnimatorStateTransition that was added.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddStateMachineBehaviour(System.Type)">
      <summary>
        <para>Adds a state machine behaviour class of type stateMachineBehaviourType to the AnimatorState. C# Users can use a generic version.</para>
      </summary>
      <param name="stateMachineBehaviourType"></param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddStateMachineBehaviour">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Utility function to add an outgoing transition to the destination state.</para>
      </summary>
      <param name="defaultExitTime">If true, the exit time will be the equivalent of 0.25 second.</param>
      <param name="destinationState">The destination state.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorState,System.Boolean)">
      <summary>
        <para>Utility function to add an outgoing transition to the destination state.</para>
      </summary>
      <param name="defaultExitTime">If true, the exit time will be the equivalent of 0.25 second.</param>
      <param name="destinationState">The destination state.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to add an outgoing transition to the destination state machine.</para>
      </summary>
      <param name="defaultExitTime">If true, the exit time will be the equivalent of 0.25 second.</param>
      <param name="destinationStateMachine">The destination state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateMachine,System.Boolean)">
      <summary>
        <para>Utility function to add an outgoing transition to the destination state machine.</para>
      </summary>
      <param name="defaultExitTime">If true, the exit time will be the equivalent of 0.25 second.</param>
      <param name="destinationStateMachine">The destination state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Utility function to add an outgoing transition.</para>
      </summary>
      <param name="transition">The transition to add.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.RemoveTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Utility function to remove a transition from the state.</para>
      </summary>
      <param name="transition">Transition to remove.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorStateMachine">
      <summary>
        <para>A graph controlling the interaction of states. Each state references a motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.anyStatePosition">
      <summary>
        <para>The position of the AnyState node.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.anyStateTransitions">
      <summary>
        <para>The list of AnyState transitions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.behaviours">
      <summary>
        <para>The Behaviour list assigned to this state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.defaultState">
      <summary>
        <para>The state that the state machine will be in when it starts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.entryPosition">
      <summary>
        <para>The position of the entry node.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.entryTransitions">
      <summary>
        <para>The list of entry transitions in the state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.exitPosition">
      <summary>
        <para>The position of the exit node.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.parentStateMachinePosition">
      <summary>
        <para>The position of the parent state machine node. Only valid when in a hierachic state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.stateMachines">
      <summary>
        <para>The list of sub state machines.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.states">
      <summary>
        <para>The list of states.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddAnyStateTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Utility function to add an AnyState transition to the specified state or statemachine.</para>
      </summary>
      <param name="destinationState">The destination state.</param>
      <param name="destinationStateMachine">The destination statemachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddAnyStateTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to add an AnyState transition to the specified state or statemachine.</para>
      </summary>
      <param name="destinationState">The destination state.</param>
      <param name="destinationStateMachine">The destination statemachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddEntryTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Utility function to add an incoming transition to the exit of it's parent state machine.</para>
      </summary>
      <param name="destinationState">The destination Animations.AnimatorState state.</param>
      <param name="destinationStateMachine">The destination Animations.AnimatorStateMachine state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddEntryTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to add an incoming transition to the exit of it's parent state machine.</para>
      </summary>
      <param name="destinationState">The destination Animations.AnimatorState state.</param>
      <param name="destinationStateMachine">The destination Animations.AnimatorStateMachine state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(System.String)">
      <summary>
        <para>Utility function to add a state to the state machine.</para>
      </summary>
      <param name="name">The name of the new state.</param>
      <param name="position">The position of the state node.</param>
      <returns>
        <para>The AnimatorState that was created for this state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Utility function to add a state to the state machine.</para>
      </summary>
      <param name="name">The name of the new state.</param>
      <param name="position">The position of the state node.</param>
      <returns>
        <para>The AnimatorState that was created for this state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(UnityEditor.Animations.AnimatorState,UnityEngine.Vector3)">
      <summary>
        <para>Utility function to add a state to the state machine.</para>
      </summary>
      <param name="state">The state to add.</param>
      <param name="position">The position of the state node.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(System.String)">
      <summary>
        <para>Utility function to add a state machine to the state machine.</para>
      </summary>
      <param name="name">The name of the new state machine.</param>
      <param name="position">The position of the state machine node.</param>
      <returns>
        <para>The newly created Animations.AnimatorStateMachine state machine.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Utility function to add a state machine to the state machine.</para>
      </summary>
      <param name="name">The name of the new state machine.</param>
      <param name="position">The position of the state machine node.</param>
      <returns>
        <para>The newly created Animations.AnimatorStateMachine state machine.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(UnityEditor.Animations.AnimatorStateMachine,UnityEngine.Vector3)">
      <summary>
        <para>Utility function to add a state machine to the state machine.</para>
      </summary>
      <param name="stateMachine">The state machine to add.</param>
      <param name="position">The position of the state machine node.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineBehaviour(System.Type)">
      <summary>
        <para>Adds a state machine behaviour class of type stateMachineBehaviourType to the AnimatorStateMachine. C# Users can use a generic version.</para>
      </summary>
      <param name="stateMachineBehaviourType"></param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineBehaviour">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineExitTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to add an outgoing transition from the source state machine to the exit of it's parent state machine.</para>
      </summary>
      <param name="sourceStateMachine">The source state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to add an outgoing transition from the source state machine to the destination.</para>
      </summary>
      <param name="sourceStateMachine">The source state machine.</param>
      <param name="destinationStateMachine">The destination state machine.</param>
      <param name="destinationState">The destination state.</param>
      <returns>
        <para>The Animations.AnimatorTransition transition that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to add an outgoing transition from the source state machine to the destination.</para>
      </summary>
      <param name="sourceStateMachine">The source state machine.</param>
      <param name="destinationStateMachine">The destination state machine.</param>
      <param name="destinationState">The destination state.</param>
      <returns>
        <para>The Animations.AnimatorTransition transition that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Utility function to add an outgoing transition from the source state machine to the destination.</para>
      </summary>
      <param name="sourceStateMachine">The source state machine.</param>
      <param name="destinationStateMachine">The destination state machine.</param>
      <param name="destinationState">The destination state.</param>
      <returns>
        <para>The Animations.AnimatorTransition transition that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.GetStateMachineTransitions(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Gets the list of all outgoing state machine transitions from given state machine.</para>
      </summary>
      <param name="sourceStateMachine">The source state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.MakeUniqueStateMachineName(System.String)">
      <summary>
        <para>Makes a unique state machine name in the context of the parent state machine.</para>
      </summary>
      <param name="name">Desired name for the state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.MakeUniqueStateName(System.String)">
      <summary>
        <para>Makes a unique state name in the context of the parent state machine.</para>
      </summary>
      <param name="name">Desired name for the state.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveAnyStateTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Utility function to remove an AnyState transition from the state machine.</para>
      </summary>
      <param name="transition">The AnyStat transition to remove.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveEntryTransition(UnityEditor.Animations.AnimatorTransition)">
      <summary>
        <para>Utility function to remove an entry transition from the state machine.</para>
      </summary>
      <param name="transition">The transition to remove.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveState(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Utility function to remove a state from the state machine.</para>
      </summary>
      <param name="state">The state to remove.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveStateMachine(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Utility function to remove a state machine from its parent state machine.</para>
      </summary>
      <param name="stateMachine">The state machine to remove.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorTransition)">
      <summary>
        <para>Utility function to remove an outgoing transition from source state machine.</para>
      </summary>
      <param name="transition">The transition to remove.</param>
      <param name="sourceStateMachine">The source state machine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.SetStateMachineTransitions(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorTransition[])">
      <summary>
        <para>Sets the list of all outgoing state machine transitions from given state machine.</para>
      </summary>
      <param name="stateMachine">The source state machine.</param>
      <param name="transitions">The outgoing transitions.</param>
      <param name="sourceStateMachine"></param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorStateTransition">
      <summary>
        <para>Transitions define when and how the state machine switch from one state to another. AnimatorStateTransition always originate from an Animator State (or AnyState) and have timing parameters.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.canTransitionToSelf">
      <summary>
        <para>Set to true to allow or disallow transition to self during AnyState transition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.duration">
      <summary>
        <para>The duration of the transition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.exitTime">
      <summary>
        <para>If AnimatorStateTransition.hasExitTime is true, exitTime represents the exact time at which the transition can take effect.

This is represented in normalized time, so for example an exit time of 0.75 means that on the first frame where 75% of the animation has played, the Exit Time condition will be true. On the next frame, the condition will be false.

For looped animations, transitions with exit times smaller than 1 will be evaluated every loop, so you can use this to time your transition with the proper timing in the animation, every loop.

Transitions with exit times greater than one will be evaluated only once, so they can be used to exit at a specific time, after a fixed number of loops. For example, a transition with an exit time of 3.5 will be evaluated once, after three and a half loops.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.hasExitTime">
      <summary>
        <para>When active the transition will have an exit time condition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.hasFixedDuration">
      <summary>
        <para>Determines whether the duration of the transition is reported in a fixed duration in seconds or as a normalized time.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.interruptionSource">
      <summary>
        <para>Which AnimatorState transitions can interrupt the Transition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.offset">
      <summary>
        <para>The time at which the destination state will start.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.orderedInterruption">
      <summary>
        <para>The Transition can be interrupted by a transition that has a higher priority.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateTransition.#ctor">
      <summary>
        <para>Creates a new animator state transition.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorTransition">
      <summary>
        <para>Transitions define when and how the state machine switch from on state to another. AnimatorTransition always originate from a StateMachine or a StateMachine entry. They do not define timing parameters.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransition.#ctor">
      <summary>
        <para>Creates a new animator transition.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorTransitionBase">
      <summary>
        <para>Base class for animator transitions. Transitions define when and how the state machine switches from one state to another.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.conditions">
      <summary>
        <para>Animations.AnimatorCondition conditions that need to be met for a transition to happen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.destinationState">
      <summary>
        <para>The destination state of the transition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.destinationStateMachine">
      <summary>
        <para>The destination state machine of the transition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.isExit">
      <summary>
        <para>Is the transition destination the exit of the current state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.mute">
      <summary>
        <para>Mutes the transition. The transition will never occur.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.solo">
      <summary>
        <para>Mutes all other transitions in the source state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransitionBase.AddCondition(UnityEditor.Animations.AnimatorConditionMode,System.Single,System.String)">
      <summary>
        <para>Utility function to add a condition to a transition.</para>
      </summary>
      <param name="mode">The Animations.AnimatorCondition mode of the condition.</param>
      <param name="threshold">The threshold value of the condition.</param>
      <param name="parameter">The name of the parameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransitionBase.RemoveCondition(UnityEditor.Animations.AnimatorCondition)">
      <summary>
        <para>Utility function to remove a condition from the transition.</para>
      </summary>
      <param name="condition">The condition to remove.</param>
    </member>
    <member name="T:UnityEditor.Animations.BlendTree">
      <summary>
        <para>Blend trees are used to blend continuously animation between their childs. They can either be 1D or 2D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendParameter">
      <summary>
        <para>Parameter that is used to compute the blending weight of the childs in 1D blend trees or on the X axis of a 2D blend tree.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendParameterY">
      <summary>
        <para>Parameter that is used to compute the blending weight of the childs on the Y axis of a 2D blend tree.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendType">
      <summary>
        <para>The Blending type can be either 1D or different types of 2D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.children">
      <summary>
        <para>A copy of the list of the blend tree child motions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.maxThreshold">
      <summary>
        <para>Sets the maximum threshold that will be used by the ChildMotion. Only used when useAutomaticThresholds is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.minThreshold">
      <summary>
        <para>Sets the minimum threshold that will be used by the ChildMotion. Only used when useAutomaticThresholds is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.useAutomaticThresholds">
      <summary>
        <para>When active, the children's thresholds are automatically spread between 0 and 1.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion)">
      <summary>
        <para>Utility function to add a child motion to a blend trees.</para>
      </summary>
      <param name="motion">The motion to add as child.</param>
      <param name="position">The position of the child. When using 2D blend trees.</param>
      <param name="threshold">The threshold of the child. When using 1D blend trees.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion,UnityEngine.Vector2)">
      <summary>
        <para>Utility function to add a child motion to a blend trees.</para>
      </summary>
      <param name="motion">The motion to add as child.</param>
      <param name="position">The position of the child. When using 2D blend trees.</param>
      <param name="threshold">The threshold of the child. When using 1D blend trees.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion,System.Single)">
      <summary>
        <para>Utility function to add a child motion to a blend trees.</para>
      </summary>
      <param name="motion">The motion to add as child.</param>
      <param name="position">The position of the child. When using 2D blend trees.</param>
      <param name="threshold">The threshold of the child. When using 1D blend trees.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.CreateBlendTreeChild(System.Single)">
      <summary>
        <para>Utility function to add a child blend tree to a blend tree.</para>
      </summary>
      <param name="position">The position of the child. When using 2D blend trees.</param>
      <param name="threshold">The threshold of the child. When using 1D blend trees.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.CreateBlendTreeChild(UnityEngine.Vector2)">
      <summary>
        <para>Utility function to add a child blend tree to a blend tree.</para>
      </summary>
      <param name="position">The position of the child. When using 2D blend trees.</param>
      <param name="threshold">The threshold of the child. When using 1D blend trees.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.RemoveChild(System.Int32)">
      <summary>
        <para>Utility function to remove the child of a blend tree.</para>
      </summary>
      <param name="index">The index of the blend tree to remove.</param>
    </member>
    <member name="T:UnityEditor.Animations.BlendTreeType">
      <summary>
        <para>The type of blending algorithm that the blend tree uses.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.Direct">
      <summary>
        <para>Direct control of blending weight for each node.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.FreeformCartesian2D">
      <summary>
        <para>Best used when your motions do not represent different directions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.FreeformDirectional2D">
      <summary>
        <para>This blend type is used when your motions represent different directions, however you can have multiple motions in the same direction, for example "walk forward" and "run forward".</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.Simple1D">
      <summary>
        <para>Basic blending using a single parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.SimpleDirectional2D">
      <summary>
        <para>Best used when your motions represent different directions, such as "walk forward", "walk backward", "walk left", and "walk right", or "aim up", "aim down", "aim left", and "aim right".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildAnimatorState">
      <summary>
        <para>Structure that represents a state in the context of its parent state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorState.position">
      <summary>
        <para>The position the the state node in the context of its parent state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorState.state">
      <summary>
        <para>The state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildAnimatorStateMachine">
      <summary>
        <para>Structure that represents a state machine in the context of its parent state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorStateMachine.position">
      <summary>
        <para>The position the the state machine node in the context of its parent state machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorStateMachine.stateMachine">
      <summary>
        <para>The state machine.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildMotion">
      <summary>
        <para>Structure that represents a motion in the context of its parent blend tree.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.cycleOffset">
      <summary>
        <para>Normalized time offset of the child.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.directBlendParameter">
      <summary>
        <para>The parameter used by the child when used in a BlendTree of type BlendTreeType.Direct.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.mirror">
      <summary>
        <para>Mirror of the child.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.motion">
      <summary>
        <para>The motion itself.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.position">
      <summary>
        <para>The position of the child. Used in 2D blend trees.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.threshold">
      <summary>
        <para>The threshold of the child. Used in 1D blend trees.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.timeScale">
      <summary>
        <para>The relative speed of the child.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.CurveFilterOptions">
      <summary>
        <para>The keyframe reduction settings for compressing animation curves.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.floatError">
      <summary>
        <para>The amount the float animation curve is allowed to deviate from its original curve. This amount is expressed as a percentage: a positive value between 0 and 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.keyframeReduction">
      <summary>
        <para>Whether to apply keyframe reduction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.positionError">
      <summary>
        <para>The amount the position animation curve is allowed to deviate from its original curve. This amount is expressed as a percentage: a positive value between 0 and 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.rotationError">
      <summary>
        <para>The amount the rotation animation curve is allowed to deviate from its original curve. This amount is expressed as a number of degrees. It should be a positive value between 0 and 180.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.scaleError">
      <summary>
        <para>The amount the scale animation curve is allowed to deviate from its original curve. This amount is expressed as a percentage: a positive value between 0 and 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.unrollRotation">
      <summary>
        <para>Whether to apply rotation unrolling. This option is enabled by default.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.GameObjectRecorder">
      <summary>
        <para>Records the changing properties of a GameObject as the Scene runs and saves the information into an AnimationClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.currentTime">
      <summary>
        <para>Returns the current time of the recording. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.isRecording">
      <summary>
        <para>Returns true when the recorder is recording. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.root">
      <summary>
        <para>The GameObject root of the animated hierarchy. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.Bind(UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Binds a GameObject's property as defined by EditorCurveBinding.</para>
      </summary>
      <param name="binding">The binding definition.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindAll(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Adds bindings for all of target's properties, and also for all the target's children if recursive is true.</para>
      </summary>
      <param name="target">.root or any of its children.</param>
      <param name="recursive">Binds also all the target's children properties when set to true.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.Component)">
      <summary>
        <para>Adds bindings for all the properties of component.</para>
      </summary>
      <param name="component">The component to bind.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.GameObject,System.Type,System.Boolean)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="target"></param>
      <param name="componentType"></param>
      <param name="recursive"></param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="target"></param>
      <param name="componentType"></param>
      <param name="recursive"></param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponentsOfType(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Adds bindings for all the properties of the first component of type T found in target, and also for all the target's children if recursive is true.</para>
      </summary>
      <param name="target">.root or any of its children.</param>
      <param name="recursive">Binds also the target's children transform properties when set to true.</param>
      <param name="componentType">Type of the component.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponentsOfType(UnityEngine.GameObject,System.Type,System.Boolean)">
      <summary>
        <para>Adds bindings for all the properties of the first component of type T found in target, and also for all the target's children if recursive is true.</para>
      </summary>
      <param name="target">.root or any of its children.</param>
      <param name="recursive">Binds also the target's children transform properties when set to true.</param>
      <param name="componentType">Type of the component.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.#ctor(UnityEngine.GameObject)">
      <summary>
        <para>Create a new GameObjectRecorder.</para>
      </summary>
      <param name="root">The root GameObject for the animated hierarchy.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.#ctor">
      <summary>
        <para>TODO.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.GetBindings">
      <summary>
        <para>Returns an array of all the bindings added to the recorder.</para>
      </summary>
      <returns>
        <para>Array of bindings.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.ResetRecording">
      <summary>
        <para>Reset the recording.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip)">
      <summary>
        <para>Saves recorded animation to a destination clip.</para>
      </summary>
      <param name="clip">The destination clip. If this clip has animation curves, they will be removed.</param>
      <param name="fps">The frames per second (FPS) for the clip. If no value is specified, by default, this method uses 60 FPS.</param>
      <param name="filterOptions">The filtering options for processing the animation curves when saved to the destination clip. If no options are specified, by default, this method filters out irrelevant keys by applying a light compression of 0.5 for positionError, rotationError, scaleError and floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Saves recorded animation to a destination clip.</para>
      </summary>
      <param name="clip">The destination clip. If this clip has animation curves, they will be removed.</param>
      <param name="fps">The frames per second (FPS) for the clip. If no value is specified, by default, this method uses 60 FPS.</param>
      <param name="filterOptions">The filtering options for processing the animation curves when saved to the destination clip. If no options are specified, by default, this method filters out irrelevant keys by applying a light compression of 0.5 for positionError, rotationError, scaleError and floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip,System.Single,UnityEditor.Animations.CurveFilterOptions)">
      <summary>
        <para>Saves recorded animation to a destination clip.</para>
      </summary>
      <param name="clip">The destination clip. If this clip has animation curves, they will be removed.</param>
      <param name="fps">The frames per second (FPS) for the clip. If no value is specified, by default, this method uses 60 FPS.</param>
      <param name="filterOptions">The filtering options for processing the animation curves when saved to the destination clip. If no options are specified, by default, this method filters out irrelevant keys by applying a light compression of 0.5 for positionError, rotationError, scaleError and floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.TakeSnapshot(System.Single)">
      <summary>
        <para>Forwards the animation by dt seconds, then record the values of the added bindings.</para>
      </summary>
      <param name="dt">Delta time.</param>
    </member>
    <member name="T:UnityEditor.Animations.StateMachineBehaviourContext">
      <summary>
        <para>This class contains all the owner's information for this State Machine Behaviour.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.animatorController">
      <summary>
        <para>The Animations.AnimatorController that owns this state machine behaviour.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.animatorObject">
      <summary>
        <para>The object that owns this state machine behaviour. Could be an Animations.AnimatorState or Animations.AnimatorStateMachine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.layerIndex">
      <summary>
        <para>The animator's layer index that owns this state machine behaviour.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.TransitionInterruptionSource">
      <summary>
        <para>Which AnimatorState transitions can interrupt the Transition.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.Destination">
      <summary>
        <para>The Transition can be interrupted by transitions in the destination AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.DestinationThenSource">
      <summary>
        <para>The Transition can be interrupted by transitions in the source or the destination AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.None">
      <summary>
        <para>The Transition cannot be interrupted. Formely know as Atomic.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.Source">
      <summary>
        <para>The Transition can be interrupted by transitions in the source AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.SourceThenDestination">
      <summary>
        <para>The Transition can be interrupted by transitions in the source or the destination AnimatorState.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationUtility">
      <summary>
        <para>Editor utility functions for modifying animation clips.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.onCurveWasModified">
      <summary>
        <para>Called when an animation curve, in an animation clip, is modified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationUtility.CalculateTransformPath(UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
        <para>Retrieves the path from the root transform to the target transform.</para>
      </summary>
      <param name="targetTransform"></param>
      <param name="root"></param>
      <returns>
        <para>Returns a string representing the path in the transform hierarchy.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimationUtility.CurveModifiedType">
      <summary>
        <para>Describes the type of modification that caused OnCurveWasModified to fire.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip)">
      <summary>
        <para>Retrieves all curves from a specific animation clip.</para>
      </summary>
      <param name="clip"></param>
      <param name="includeCurveData"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip,System.Boolean)">
      <summary>
        <para>Retrieves all curves from a specific animation clip.</para>
      </summary>
      <param name="clip"></param>
      <param name="includeCurveData"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimatableBindings(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Retrieves the animatable bindings for a specific GameObject.</para>
      </summary>
      <param name="targetObject"></param>
      <param name="root"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimatedObject(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Retrieves the animated object that the binding points to.</para>
      </summary>
      <param name="root"></param>
      <param name="binding"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.Animation)">
      <summary>
        <para>Retrieves an array of animation clips associated with a GameObject or component.</para>
      </summary>
      <param name="component"></param>
      <param name="gameObject"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves an array of animation clips associated with a GameObject or component.</para>
      </summary>
      <param name="component"></param>
      <param name="gameObject"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationEvents(UnityEngine.AnimationClip)">
      <summary>
        <para>Retrieves all animation events associated with an animation clip.</para>
      </summary>
      <param name="clip"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetCurveBindings(UnityEngine.AnimationClip)">
      <summary>
        <para>Retrieves the float curve bindings in an animation clip.</para>
      </summary>
      <param name="clip"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,System.String,System.Type,System.String)">
      <summary>
        <para>Retrieves the float curve that the binding points to.</para>
      </summary>
      <param name="clip"></param>
      <param name="relativePath"></param>
      <param name="type"></param>
      <param name="propertyName"></param>
      <param name="binding"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Retrieves the float curve that the binding points to.</para>
      </summary>
      <param name="clip"></param>
      <param name="relativePath"></param>
      <param name="type"></param>
      <param name="propertyName"></param>
      <param name="binding"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetFloatValue(UnityEngine.GameObject,System.String,System.Type,System.String,System.Single&amp;)">
      <summary>
        <para>Retrieves the current float value by sampling a curve value on a specific GameObject.</para>
      </summary>
      <param name="root"></param>
      <param name="relativePath"></param>
      <param name="type"></param>
      <param name="propertyName"></param>
      <param name="data"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetGenerateMotionCurves(UnityEngine.AnimationClip)">
      <summary>
        <para>Retrives whether the animation clip is set to generate root motion curves.</para>
      </summary>
      <param name="clip">AnimationClip to query.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyBroken(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Retrieves the broken tangent flag for a specfic keyframe.</para>
      </summary>
      <param name="curve">Curve to query.</param>
      <param name="index">Keyframe index.</param>
      <returns>
        <para>Broken flag at specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Retrieves the left tangent mode of the keyframe at a specific index.</para>
      </summary>
      <param name="curve">Curve to query.</param>
      <param name="index">Keyframe index.</param>
      <returns>
        <para>Returns the tangent mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Retrieves the right tangent mode of the keyframe at a specific index.</para>
      </summary>
      <param name="curve">Curve to query.</param>
      <param name="index">Keyframe index.</param>
      <returns>
        <para>Returns the tangent mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Retrieves the object reference curve that the binding points to.</para>
      </summary>
      <param name="clip"></param>
      <param name="binding"></param>
      <returns>
        <para>Returns an array of keyframes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurveBindings(UnityEngine.AnimationClip)">
      <summary>
        <para>Retrieves the object reference curve bindings stored in the animation clip.</para>
      </summary>
      <param name="clip"></param>
    </member>
    <member name="T:UnityEditor.AnimationUtility.OnCurveWasModified">
      <summary>
        <para>Triggered when an animation curve, in an animation clip, has been modified.</para>
      </summary>
      <param name="clip"></param>
      <param name="binding"></param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAdditiveReferencePose(UnityEngine.AnimationClip,UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Sets the additive reference pose from referenceClip at time for animation clip clip.</para>
      </summary>
      <param name="clip">The animation clip to use.</param>
      <param name="referenceClip">The animation clip containing the reference pose.</param>
      <param name="time">The time that when the reference pose occurs in referenceClip.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAnimationClips(UnityEngine.Animation,UnityEngine.AnimationClip[])">
      <summary>
        <para>Sets the array of animation clips to be referenced in the Animation component.</para>
      </summary>
      <param name="animation"></param>
      <param name="clips"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAnimationEvents(UnityEngine.AnimationClip,UnityEngine.AnimationEvent[])">
      <summary>
        <para>Replaces all animation events in the animation clip.</para>
      </summary>
      <param name="clip"></param>
      <param name="events"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEngine.AnimationCurve)">
      <summary>
        <para>Adds, modifies, or removes an editor float curve in an animation clip.</para>
      </summary>
      <param name="clip">The animation clip to modify.</param>
      <param name="binding">The binding that defines the path and the properties of the curve.</param>
      <param name="curve">The curve to add. Set to null to remove the curve.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetEditorCurves(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding[],UnityEngine.AnimationCurve[])">
      <summary>
        <para>Adds, modifies, or removes multiple editor float curves in an animation clip.</para>
      </summary>
      <param name="clip">The animation clip to modify.</param>
      <param name="binding">The binding that defines the path and the properties of each curve.</param>
      <param name="curves">The curves to add. Setting curves in the array to null will remove these curves from the clip.</param>
      <param name="bindings"></param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetGenerateMotionCurves(UnityEngine.AnimationClip,System.Boolean)">
      <summary>
        <para>Sets whether the animation clip generates root motion curves.</para>
      </summary>
      <param name="clip">AnimationClip to change.</param>
      <param name="value">Set to true to enable generation of root motion curves.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyBroken(UnityEngine.AnimationCurve,System.Int32,System.Boolean)">
      <summary>
        <para>Change the specified keyframe broken tangent flag.</para>
      </summary>
      <param name="curve">The curve to modify.</param>
      <param name="index">Keyframe index.</param>
      <param name="broken">Broken flag.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility/TangentMode)">
      <summary>
        <para>Change the specified keyframe tangent mode.</para>
      </summary>
      <param name="curve">The curve to modify.</param>
      <param name="index">Keyframe index.</param>
      <param name="tangentMode">Tangent mode.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility/TangentMode)">
      <summary>
        <para>Change the specified keyframe tangent mode.</para>
      </summary>
      <param name="curve">The curve to modify.</param>
      <param name="index">Keyframe index.</param>
      <param name="tangentMode">Tangent mode.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEditor.ObjectReferenceKeyframe[])">
      <summary>
        <para>Adds, modifies, or removes an object reference curve in an animation clip.</para>
      </summary>
      <param name="clip">The animation clip to modify.</param>
      <param name="binding">The bindings that define the paths and the properties of each curve.</param>
      <param name="keyframes">Array of Object reference values over time. Setting this to null will remove the curve.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurves(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding[],UnityEditor.ObjectReferenceKeyframe[][])">
      <summary>
        <para>Adds, modifies, or removes object references curve in an animation clip.</para>
      </summary>
      <param name="clip">The animation clip to modify.</param>
      <param name="bindings">The bindings that define the paths and the properties of each curve.</param>
      <param name="keyframes">Array of Object reference arrays, one per binding.</param>
    </member>
    <member name="T:UnityEditor.AnimationUtility.TangentMode">
      <summary>
        <para>Tangent constraints on Keyframe.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Auto">
      <summary>
        <para>The tangents are automatically set to make the curve go smoothly through the key.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.ClampedAuto">
      <summary>
        <para>The tangents are automatically set to make the curve go smoothly through the key.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Constant">
      <summary>
        <para>The curve retains a constant value between two keys.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Free">
      <summary>
        <para>The tangent can be freely set by dragging the tangent handle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Linear">
      <summary>
        <para>The tangent points towards the neighboring key.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationWindow">
      <summary>
        <para>Use the AnimationWindow class to select and edit Animation clips.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.animationClip">
      <summary>
        <para>The animation clip selected in the Animation window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.canPreview">
      <summary>
        <para>True if Animation window can enable preview mode. False otherwise. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.canRecord">
      <summary>
        <para>True if Animation window can enable recording mode. False otherwise. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.frame">
      <summary>
        <para>The frame number at which the Animation window playhead is located.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.playing">
      <summary>
        <para>This property toggles animation playback in the Animation window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.previewing">
      <summary>
        <para>This property toggles previewing in the Animation window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.recording">
      <summary>
        <para>This property toggles recording in the Animation window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.time">
      <summary>
        <para>The time value at which the Animation window playhead is located.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ApiCompatibilityLevel">
      <summary>
        <para>.NET API compatibility level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_2_0">
      <summary>
        <para>.NET 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_2_0_Subset">
      <summary>
        <para>.NET 2.0 Subset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_4_6">
      <summary>
        <para>.NET 4.6.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Micro">
      <summary>
        <para>Micro profile, used by Mono scripting backend on iOS, tvOS, and Android if stripping level is set to "Use micro mscorlib".</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Standard_2_0">
      <summary>
        <para>Profile that targets the .NET Standard 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Web">
      <summary>
        <para>Web profile, formerly used only by Samsung TV.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AppleMobileArchitecture">
      <summary>
        <para>Apple Mobile CPU architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.ARM64">
      <summary>
        <para>64-bit ARM architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.ARMv7">
      <summary>
        <para>32-bit ARM architecture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.Universal">
      <summary>
        <para>All architectures.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ArrayUtility">
      <summary>
        <para>Helpers for builtin arrays.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Add(T[]&amp;,T)">
      <summary>
        <para>Appends item to the end of array.</para>
      </summary>
      <param name="array"></param>
      <param name="item"></param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.AddRange(T[]&amp;,T[])">
      <summary>
        <para>Appends items to the end of array.</para>
      </summary>
      <param name="array"></param>
      <param name="items"></param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.ArrayEquals(T[],T[])">
      <summary>
        <para>Compares two arrays.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
      <returns>
        <para>True if both have the same number of elements and the contents are equal.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.ArrayReferenceEquals(T[],T[])">
      <summary>
        <para>Compares two array references.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
      <returns>
        <para>True if both have the same number of elements and are the same instances.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Clear(T[]&amp;)">
      <summary>
        <para>Clears the array.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Contains(T[],T)">
      <summary>
        <para>Determines if the array contains the item.</para>
      </summary>
      <param name="array"></param>
      <param name="item"></param>
      <returns>
        <para>True if item is in array, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.FindIndex(T[],System.Predicate`1&lt;T&gt;)">
      <summary>
        <para>Find the index of the first element that satisfies the predicate.</para>
      </summary>
      <param name="array"></param>
      <param name="match"></param>
      <returns>
        <para>The zero-based index of the first occurrence of the element, if found; otherwise, �1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.IndexOf(T[],T)">
      <summary>
        <para>Index of first element with value value.</para>
      </summary>
      <param name="array"></param>
      <param name="value"></param>
      <returns>
        <para>The zero-based index of the element, if found; otherwise -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Insert(T[]&amp;,System.Int32,T)">
      <summary>
        <para>Inserts item item at position index.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.LastIndexOf(T[],T)">
      <summary>
        <para>Index of the last element with value value.</para>
      </summary>
      <param name="array"></param>
      <param name="value"></param>
      <returns>
        <para>The zero-based index of the element, if found; otherwise -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Remove(T[]&amp;,T)">
      <summary>
        <para>Removes item from array.</para>
      </summary>
      <param name="array"></param>
      <param name="item"></param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.RemoveAt(T[]&amp;,System.Int32)">
      <summary>
        <para>Remove element at position index.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="T:UnityEditor.AscentCalculationMode">
      <summary>
        <para>Method used for calculating a font's ascent.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.FaceAscender">
      <summary>
        <para>Ascender method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.FaceBoundingBox">
      <summary>
        <para>Bounding box method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.Legacy2x">
      <summary>
        <para>Legacy bounding box method.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AspectRatio">
      <summary>
        <para>Aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect16by10">
      <summary>
        <para>16:10 aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect16by9">
      <summary>
        <para>16:9 aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect4by3">
      <summary>
        <para>4:3 aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect5by4">
      <summary>
        <para>5:4 aspect ratio.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.AspectOthers">
      <summary>
        <para>Undefined aspect ratios.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssemblyReloadEvents">
      <summary>
        <para>This class has event dispatchers for assembly reload events.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.AssemblyReloadEvents.afterAssemblyReload(UnityEditor.AssemblyReloadEvents/AssemblyReloadCallback)">
      <summary>
        <para>This event is dispatched just after Unity have reloaded all assemblies.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.AssemblyReloadEvents.beforeAssemblyReload(UnityEditor.AssemblyReloadEvents/AssemblyReloadCallback)">
      <summary>
        <para>This event is dispatched just before Unity reloads all assemblies.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEditor.AssemblyReloadEvents.AssemblyReloadCallback">
      <summary>
        <para>Delegate used for assembly reload events.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetBundleBuild">
      <summary>
        <para>AssetBundle building map entry.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.addressableNames">
      <summary>
        <para>Addressable name used to load an asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetBundleName">
      <summary>
        <para>AssetBundle name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetBundleVariant">
      <summary>
        <para>AssetBundle variant.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetNames">
      <summary>
        <para>Asset names which belong to the given AssetBundle.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetDatabase">
      <summary>
        <para>An Interface for accessing assets and performing operations on assets.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageCancelled(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Callback raised whenever a package import is cancelled by the user.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageCompleted(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Callback raised whenever a package import successfully completes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageFailed(UnityEditor.AssetDatabase/ImportPackageFailedCallback)">
      <summary>
        <para>Callback raised whenever a package import failed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageStarted(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Callback raised whenever a package import starts.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEditor.AssetDatabase.onImportPackageItemsCompleted">
      <summary>
        <para>Callback raised whenever a package import successfully completes that lists the items selected to be imported.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Adds objectToAdd to an existing asset at path.</para>
      </summary>
      <param name="objectToAdd">Object to add to the existing asset.</param>
      <param name="path">Filesystem path to the asset.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Adds objectToAdd to an existing asset identified by assetObject.</para>
      </summary>
      <param name="objectToAdd"></param>
      <param name="assetObject"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AllowAutoRefresh">
      <summary>
        <para>Decrements an internal counter which Unity uses to determine whether to allow automatic AssetDatabase refreshing behavior.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AssetPathToGUID(System.String)">
      <summary>
        <para>Get the GUID for the asset at path.</para>
      </summary>
      <param name="path">Filesystem path for the asset.</param>
      <returns>
        <para>GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanConnectToCacheServer(System.String,System.UInt16)">
      <summary>
        <para>Checks the availability of the Cache Server.</para>
      </summary>
      <param name="ip">The IP address of the Cache Server.</param>
      <param name="port">The Port number of the Cache Server.</param>
      <returns>
        <para>Returns true when Editor can connect to the Cache Server. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,System.String&amp;)">
      <summary>
        <para>Query whether an Asset file can be opened for editing in version control and is not exclusively locked by another user or otherwise unavailable.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being available for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered available for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query which of the provided Asset files can be opened for editing in version control and are not remotely locked or otherwise unavailable.</para>
      </summary>
      <param name="assetOrMetaFilePaths">Paths to Assets or their .meta files, relative to the project folder.</param>
      <param name="outNotEditablePaths">Destination list of non-editable Asset paths.</param>
      <param name="statusQueryOptions">Specifies how Unity should query the version control system. The default value is StatusQueryOptions.UseCachedIfPossible.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ClearImporterOverride(System.String)">
      <summary>
        <para>Clears the importer override for the asset.</para>
      </summary>
      <param name="path">Asset path.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ClearLabels(UnityEngine.Object)">
      <summary>
        <para>Removes all labels attached to an asset.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CloseCacheServerConnection">
      <summary>
        <para>Closes an active cache server connection. If no connection is active, then it does nothing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Contains(UnityEngine.Object)">
      <summary>
        <para>Is object an asset?</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Contains(System.Int32)">
      <summary>
        <para>Is object an asset?</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CopyAsset(System.String,System.String)">
      <summary>
        <para>Duplicates the asset at path and stores it at newPath.</para>
      </summary>
      <param name="path">Filesystem path of the source asset.</param>
      <param name="newPath">Filesystem path of the new asset to create.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CreateAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Creates a new asset at path.</para>
      </summary>
      <param name="asset">Object to use in creating the asset.</param>
      <param name="path">Filesystem path for the new asset.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CreateFolder(System.String,System.String)">
      <summary>
        <para>Create a new folder.</para>
      </summary>
      <param name="parentFolder">The name of the parent folder.</param>
      <param name="newFolderName">The name of the new folder.</param>
      <returns>
        <para>The GUID of the newly created folder.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DeleteAsset(System.String)">
      <summary>
        <para>Deletes the specified asset or folder.</para>
      </summary>
      <param name="path">Project relative path of the asset or folder to be deleted.</param>
      <returns>
        <para>Returns true if the asset has been successfully removed, false if it doesn't exist or couldn't be removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DeleteAssets(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Lets you delete multiple assets or folders at once with performance benefits under version control.</para>
      </summary>
      <param name="paths">Project relative paths of the assets or folders to be deleted.</param>
      <param name="outFailedPaths">Project relative paths which could not be deleted.</param>
      <returns>
        <para>Returns true if all assets in paths have successfully been deleted, false if any of the specified paths don't exist or couldn't be removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DisallowAutoRefresh">
      <summary>
        <para>Increments an internal counter which Unity uses to determine whether to allow automatic AssetDatabase refreshing behavior.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String)">
      <summary>
        <para>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</para>
      </summary>
      <param name="assetPathNames"></param>
      <param name="fileName"></param>
      <param name="flags"></param>
      <param name="assetPathName"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String)">
      <summary>
        <para>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</para>
      </summary>
      <param name="assetPathNames"></param>
      <param name="fileName"></param>
      <param name="flags"></param>
      <param name="assetPathName"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String,UnityEditor.ExportPackageOptions)">
      <summary>
        <para>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</para>
      </summary>
      <param name="assetPathNames"></param>
      <param name="fileName"></param>
      <param name="flags"></param>
      <param name="assetPathName"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String,UnityEditor.ExportPackageOptions)">
      <summary>
        <para>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</para>
      </summary>
      <param name="assetPathNames"></param>
      <param name="fileName"></param>
      <param name="flags"></param>
      <param name="assetPathName"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExtractAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Creates an external Asset from an object (such as a Material) by extracting it from within an imported asset (such as an FBX file).</para>
      </summary>
      <param name="asset">The sub-asset to extract.</param>
      <param name="newPath">The file path of the new Asset.</param>
      <returns>
        <para>An empty string if Unity has successfully extracted the Asset, or an error message if not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.FindAssets(System.String)">
      <summary>
        <para>Search the asset database using the search filter string.</para>
      </summary>
      <param name="filter">The filter string can contain search data.  See below for details about this string.</param>
      <param name="searchInFolders">The folders where the search will start.</param>
      <returns>
        <para>Array of matching asset. Note that GUIDs will be returned.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.FindAssets(System.String,System.String[])">
      <summary>
        <para>Search the asset database using the search filter string.</para>
      </summary>
      <param name="filter">The filter string can contain search data.  See below for details about this string.</param>
      <param name="searchInFolders">The folders where the search will start.</param>
      <returns>
        <para>Array of matching asset. Note that GUIDs will be returned.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.</para>
      </summary>
      <param name="assetPaths">The paths to the assets that should be reserialized. If omitted, will reserialize all assets in the project.</param>
      <param name="options">Specify whether you want to reserialize the assets themselves, their .meta files, or both. If omitted, defaults to both.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.</para>
      </summary>
      <param name="assetPaths">The paths to the assets that should be reserialized. If omitted, will reserialize all assets in the project.</param>
      <param name="options">Specify whether you want to reserialize the assets themselves, their .meta files, or both. If omitted, defaults to both.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.</para>
      </summary>
      <param name="assetPaths">The paths to the assets that should be reserialized. If omitted, will reserialize all assets in the project.</param>
      <param name="options">Specify whether you want to reserialize the assets themselves, their .meta files, or both. If omitted, defaults to both.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GenerateUniqueAssetPath(System.String)">
      <summary>
        <para>Creates a new unique path for an asset.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAllAssetBundleNames">
      <summary>
        <para>Return all the AssetBundle names in the asset database.</para>
      </summary>
      <returns>
        <para>Array of asset bundle names.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetBundleDependencies(System.String,System.Boolean)">
      <summary>
        <para>Given an assetBundleName, returns the list of AssetBundles that it depends on.</para>
      </summary>
      <param name="assetBundleName">The name of the AssetBundle for which dependencies are required.</param>
      <param name="recursive">If false, returns only AssetBundles which are direct dependencies of the input; if true, includes all indirect dependencies of the input.</param>
      <returns>
        <para>The names of all AssetBundles that the input depends on.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(System.String)">
      <summary>
        <para>Returns the hash of all the dependencies of an asset.</para>
      </summary>
      <param name="path">Path to the asset.</param>
      <param name="guid">GUID of the asset.</param>
      <returns>
        <para>Aggregate hash.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(UnityEditor.GUID)">
      <summary>
        <para>Returns the hash of all the dependencies of an asset.</para>
      </summary>
      <param name="path">Path to the asset.</param>
      <param name="guid">GUID of the asset.</param>
      <returns>
        <para>Aggregate hash.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetOrScenePath(UnityEngine.Object)">
      <summary>
        <para>Returns the path name relative to the project folder where the asset is stored.</para>
      </summary>
      <param name="assetObject"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPath(System.Int32)">
      <summary>
        <para>Returns the path name relative to the project folder where the asset is stored.</para>
      </summary>
      <param name="instanceID">The instance ID of the asset.</param>
      <param name="assetObject">A reference to the asset.</param>
      <returns>
        <para>The asset path name, or null, or an empty string if the asset does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPath(UnityEngine.Object)">
      <summary>
        <para>Returns the path name relative to the project folder where the asset is stored.</para>
      </summary>
      <param name="instanceID">The instance ID of the asset.</param>
      <param name="assetObject">A reference to the asset.</param>
      <returns>
        <para>The asset path name, or null, or an empty string if the asset does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathFromTextMetaFilePath(System.String)">
      <summary>
        <para>Gets the path to the asset file associated with a text .meta file.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundle(System.String)">
      <summary>
        <para>Returns an array containing the paths of all assets marked with the specified Asset Bundle name.</para>
      </summary>
      <param name="assetBundleName"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName(System.String,System.String)">
      <summary>
        <para>Get the Asset paths for all Assets tagged with assetBundleName and
                named assetName.</para>
      </summary>
      <param name="assetBundleName"></param>
      <param name="assetName"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAvailableImporterTypes(System.String)">
      <summary>
        <para>Gets the importer types associated with a given Asset type.</para>
      </summary>
      <param name="path">The Asset path.</param>
      <returns>
        <para>Returns an array of importer types that can handle the specified Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCachedIcon(System.String)">
      <summary>
        <para>Retrieves an icon for the asset at the given asset path.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerAddress">
      <summary>
        <para>Gets the IP address of the Cache Server in Editor Settings.</para>
      </summary>
      <returns>
        <para>Returns the IP address of the Cache Server in Editor Settings. Returns empty string if IP address is not set in Editor settings.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerEnableDownload">
      <summary>
        <para>Gets the Cache Server Download option from Editor Settings.</para>
      </summary>
      <returns>
        <para>Returns true when Download from the Cache Server is enabled. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerEnableUpload">
      <summary>
        <para>Gets the Cache Server Upload option from Editor Settings.</para>
      </summary>
      <returns>
        <para>Returns true when Upload to the Cache Server is enabled. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerNamespacePrefix">
      <summary>
        <para>Gets the Cache Server Namespace prefix set in Editor Settings.</para>
      </summary>
      <returns>
        <para>Returns the Namespace prefix for the Cache Server.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerPort">
      <summary>
        <para>Gets the Port number of the Cache Server in Editor Settings.</para>
      </summary>
      <returns>
        <para>Returns the Port number of the Cache Server in Editor Settings. Returns 0 if Port number is not set in Editor Settings.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCurrentCacheServerIp">
      <summary>
        <para>Gets the IP address of the Cache Server currently in use by the Editor.</para>
      </summary>
      <returns>
        <para>Returns a string representation of the current Cache Server IP address.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String)">
      <summary>
        <para>Returns an array of all the assets that are dependencies of the asset at the specified pathName.

Note: GetDependencies() gets the Assets that are referenced by other Assets. For example, a Scene could contain many GameObjects with a Material attached to them. In this case,  GetDependencies() will return the path to the Material Assets, but not the GameObjects as those are not Assets on your disk.</para>
      </summary>
      <param name="pathName">The path to the asset for which dependencies are required.</param>
      <param name="recursive">Controls whether this method recursively checks and returns all dependencies including indirect dependencies (when set to true), or whether it only returns direct dependencies (when set to false).</param>
      <returns>
        <para>The paths of all assets that the input depends on.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String,System.Boolean)">
      <summary>
        <para>Returns an array of all the assets that are dependencies of the asset at the specified pathName.

Note: GetDependencies() gets the Assets that are referenced by other Assets. For example, a Scene could contain many GameObjects with a Material attached to them. In this case,  GetDependencies() will return the path to the Material Assets, but not the GameObjects as those are not Assets on your disk.</para>
      </summary>
      <param name="pathName">The path to the asset for which dependencies are required.</param>
      <param name="recursive">Controls whether this method recursively checks and returns all dependencies including indirect dependencies (when set to true), or whether it only returns direct dependencies (when set to false).</param>
      <returns>
        <para>The paths of all assets that the input depends on.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[])">
      <summary>
        <para>Returns an array of the paths of assets that are dependencies of all the assets in the list of pathNames that you provide.

Note: GetDependencies() gets the Assets that are referenced by other Assets. For example, a Scene could contain many GameObjects with a Material attached to them. In this case,  GetDependencies() will return the path to the Material Assets, but not the GameObjects as those are not Assets on your disk.</para>
      </summary>
      <param name="pathNames">The path to the assets for which dependencies are required.</param>
      <param name="recursive">Controls whether this method recursively checks and returns all dependencies including indirect dependencies (when set to true), or whether it only returns direct dependencies (when set to false).</param>
      <returns>
        <para>The paths of all assets that the input depends on.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[],System.Boolean)">
      <summary>
        <para>Returns an array of the paths of assets that are dependencies of all the assets in the list of pathNames that you provide.

Note: GetDependencies() gets the Assets that are referenced by other Assets. For example, a Scene could contain many GameObjects with a Material attached to them. In this case,  GetDependencies() will return the path to the Material Assets, but not the GameObjects as those are not Assets on your disk.</para>
      </summary>
      <param name="pathNames">The path to the assets for which dependencies are required.</param>
      <param name="recursive">Controls whether this method recursively checks and returns all dependencies including indirect dependencies (when set to true), or whether it only returns direct dependencies (when set to false).</param>
      <returns>
        <para>The paths of all assets that the input depends on.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleName(System.String)">
      <summary>
        <para>Returns the name of the AssetBundle that a given asset belongs to.</para>
      </summary>
      <param name="assetPath">The asset's path.</param>
      <returns>
        <para>Returns the name of the AssetBundle that a given asset belongs to. See the method description for more details.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleVariantName(System.String)">
      <summary>
        <para>Returns the name of the AssetBundle Variant that a given asset belongs to.</para>
      </summary>
      <param name="assetPath">The asset's path.</param>
      <returns>
        <para>Returns the name of the AssetBundle Variant that a given asset belongs to. See the method description for more details.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImporterOverride(System.String)">
      <summary>
        <para>Returns the type of the override importer.</para>
      </summary>
      <param name="path">Asset path.</param>
      <returns>
        <para>Importer type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetLabels(UnityEngine.Object)">
      <summary>
        <para>Returns all labels attached to a given asset.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetMainAssetTypeAtPath(System.String)">
      <summary>
        <para>Returns the type of the main asset object at assetPath.</para>
      </summary>
      <param name="assetPath">Filesystem path of the asset to load.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetSubFolders(System.String)">
      <summary>
        <para>Given a path to a directory in the Assets folder, relative to the project folder, this method will return an array of all its subdirectories.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTextMetaDataPathFromAssetPath(System.String)">
      <summary>
        <para>Gets the path to the text .meta file associated with an asset.</para>
      </summary>
      <param name="path">The path to the asset.</param>
      <returns>
        <para>The path to the .meta text file or empty string if the file does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTextMetaFilePathFromAssetPath(System.String)">
      <summary>
        <para>Gets the path to the text .meta file associated with an asset.</para>
      </summary>
      <param name="path">The path to the asset.</param>
      <returns>
        <para>The path to the .meta text file or empty string if the file does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTypeFromPathAndFileID(System.String,System.Int64)">
      <summary>
        <para>Gets an object's type from an Asset path and a local file identifier.</para>
      </summary>
      <param name="assetPath">The Asset's path.</param>
      <param name="localIdentifierInFile">The object's local file identifier.</param>
      <returns>
        <para>The object's type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetUnusedAssetBundleNames">
      <summary>
        <para>Return all the unused assetBundle names in the asset database.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.GlobalArtifactDependencyVersion">
      <summary>
        <para>Changes during Refresh if anything has changed that can invalidate any artifact.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.GlobalArtifactProcessedVersion">
      <summary>
        <para>Changes whenever a new artifact is added to the artifact database.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDFromAssetPath(System.String)">
      <summary>
        <para>Get the GUID for the asset at path.</para>
      </summary>
      <param name="path">Filesystem path for the asset. All paths are relative to the project folder.</param>
      <returns>
        <para>The GUID of the asset. An all-zero GUID denotes an invalid asset path.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(System.String)">
      <summary>
        <para>Gets the corresponding asset path for the supplied GUID, or an empty string if the GUID can't be found.</para>
      </summary>
      <param name="guid">The GUID of an asset.</param>
      <returns>
        <para>Path of the asset relative to the project folder.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(UnityEditor.GUID)">
      <summary>
        <para>Gets the corresponding asset path for the supplied GUID, or an empty string if the GUID can't be found.</para>
      </summary>
      <param name="guid">The GUID of an asset.</param>
      <returns>
        <para>Path of the asset relative to the project folder.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String)">
      <summary>
        <para>Import asset at path.</para>
      </summary>
      <param name="path"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String,UnityEditor.ImportAssetOptions)">
      <summary>
        <para>Import asset at path.</para>
      </summary>
      <param name="path"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportPackage(System.String,System.Boolean)">
      <summary>
        <para>Imports package at packagePath into the current project.</para>
      </summary>
      <param name="packagePath"></param>
      <param name="interactive"></param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.ImportPackageCallback">
      <summary>
        <para>Delegate to be called from AssetDatabase.ImportPackage callbacks. packageName is the name of the package that raised the callback.</para>
      </summary>
      <param name="packageName"></param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.ImportPackageFailedCallback">
      <summary>
        <para>Delegate to be called from AssetDatabase.ImportPackage callbacks. packageName is the name of the package that raised the callback. errorMessage is the reason for the failure.</para>
      </summary>
      <param name="packageName"></param>
      <param name="errorMessage"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsCacheServerEnabled">
      <summary>
        <para>Checks whether the Cache Server is enabled in Project Settings.</para>
      </summary>
      <returns>
        <para>Returns true when the Cache Server is enabled. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsConnectedToCacheServer">
      <summary>
        <para>Checks connection status of the Cache Server.</para>
      </summary>
      <returns>
        <para>Returns true when Editor is connected to the Cache Server. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsForeignAsset(UnityEngine.Object)">
      <summary>
        <para>Determines whether the Asset is a foreign Asset.</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsForeignAsset(System.Int32)">
      <summary>
        <para>Determines whether the Asset is a foreign Asset.</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAsset(UnityEngine.Object)">
      <summary>
        <para>Is asset a main asset in the project window?</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAsset(System.Int32)">
      <summary>
        <para>Is asset a main asset in the project window?</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAssetAtPathLoaded(System.String)">
      <summary>
        <para>Returns true if the main asset object at assetPath is loaded in memory.</para>
      </summary>
      <param name="assetPath">Filesystem path of the asset to load.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an asset's metadata (.meta) file is open for edit in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose metadata status you wish to query.</param>
      <param name="message">Returns a reason for the asset metadata not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset's metadata is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an asset's metadata (.meta) file is open for edit in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose metadata status you wish to query.</param>
      <param name="message">Returns a reason for the asset metadata not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset's metadata is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Query whether an asset's metadata (.meta) file is open for edit in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose metadata status you wish to query.</param>
      <param name="message">Returns a reason for the asset metadata not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset's metadata is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Query whether an asset's metadata (.meta) file is open for edit in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose metadata status you wish to query.</param>
      <param name="message">Returns a reason for the asset metadata not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset's metadata is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsNativeAsset(UnityEngine.Object)">
      <summary>
        <para>Determines whether the Asset is a native Asset.</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsNativeAsset(System.Int32)">
      <summary>
        <para>Determines whether the Asset is a native Asset.</para>
      </summary>
      <param name="obj"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&amp;)">
      <summary>
        <para>Query whether an Asset file is open for editing in version control.</para>
      </summary>
      <param name="assetObject">Object representing the asset whose status you wish to query.</param>
      <param name="assetOrMetaFilePath">Path to the asset file or its .meta file on disk, relative to project folder.</param>
      <param name="message">Returns a reason for the asset not being open for edit.</param>
      <param name="statusOptions">Options for how the version control system should be queried. These options can effect the speed and accuracy of the query. Default is StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>True if the asset is considered open for edit by the selected version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Query which of the provided Asset files are open for editing in version control.</para>
      </summary>
      <param name="assetOrMetaFilePaths">Paths to Assets or their .meta files, relative to the project folder.</param>
      <param name="outNotEditablePaths">Destination list of non-editable Asset paths.</param>
      <param name="statusQueryOptions">Specifies how Unity should query the version control system. The default value is StatusQueryOptions.UseCachedIfPossible.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsSubAsset(UnityEngine.Object)">
      <summary>
        <para>Does the asset form part of another asset?</para>
      </summary>
      <param name="obj">The asset Object to query.</param>
      <param name="instanceID">Instance ID of the asset Object to query.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsSubAsset(System.Int32)">
      <summary>
        <para>Does the asset form part of another asset?</para>
      </summary>
      <param name="obj">The asset Object to query.</param>
      <param name="instanceID">Instance ID of the asset Object to query.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsValidFolder(System.String)">
      <summary>
        <para>Given a path to a folder, returns true if it exists, false otherwise.</para>
      </summary>
      <param name="path">The path to the folder.</param>
      <returns>
        <para>Returns true if the folder exists.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAllAssetRepresentationsAtPath(System.String)">
      <summary>
        <para>Returns all sub Assets at assetPath.</para>
      </summary>
      <param name="assetPath"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAllAssetsAtPath(System.String)">
      <summary>
        <para>Returns an array of all Assets at assetPath.</para>
      </summary>
      <param name="assetPath">Filesystem path to the asset.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAssetAtPath(System.String,System.Type)">
      <summary>
        <para>Returns the first asset object of type type at given path assetPath.</para>
      </summary>
      <param name="assetPath">Path of the asset to load.</param>
      <param name="type">Data type of the asset.</param>
      <returns>
        <para>The asset matching the parameters.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadMainAssetAtPath(System.String)">
      <summary>
        <para>Returns the main asset object at assetPath.

The "main" Asset is the Asset at the root of a hierarchy (such as a Maya file which may contain multiples meshes and GameObjects).</para>
      </summary>
      <param name="assetPath">Filesystem path of the asset to load.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MakeEditable(System.String)">
      <summary>
        <para>Makes a file open for editing in version control.</para>
      </summary>
      <param name="path">Specifies the path to a file relative to the project root.</param>
      <returns>
        <para>true if Unity successfully made the file editable in the version control system. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MakeEditable(System.String[],System.String,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Makes a list of files open for editing in version control.</para>
      </summary>
      <param name="paths">Specifies an array of file paths relative to the project root.</param>
      <param name="prompt">Dialog prompt to show to the user, if a version control operation needs to be done. If null (default), no prompt is shown.</param>
      <param name="outNotEditablePaths">Output list of file paths that could not be made editable.</param>
      <returns>
        <para>true if Unity successfully made all files editable in the version control system.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAsset(System.String,System.String)">
      <summary>
        <para>Move an asset file (or folder) from one folder to another.</para>
      </summary>
      <param name="oldPath">The path where the asset currently resides.</param>
      <param name="newPath">The path which the asset should be moved to.</param>
      <returns>
        <para>An empty string if the asset has been successfully moved, otherwise an error message.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAssetsToTrash(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Lets you move multiple assets or folders to trash at once with performance benefits under version control.</para>
      </summary>
      <param name="paths">Project relative paths of the assets or folders to be deleted.</param>
      <param name="outFailedPaths">Project relative paths which could not be deleted.</param>
      <returns>
        <para>Returns true if all assets in paths have successfully been deleted, false if any of the specified paths don't exist or couldn't be removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAssetToTrash(System.String)">
      <summary>
        <para>Moves the specified asset  or folder to the OS trash.</para>
      </summary>
      <param name="path">Project relative path of the asset or folder to be deleted.</param>
      <returns>
        <para>Returns true if the asset has been successfully removed, false if it doesn't exist or couldn't be removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32)">
      <summary>
        <para>Opens the asset with associated application.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="lineNumber"></param>
      <param name="columnNumber"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32)">
      <summary>
        <para>Opens the asset with associated application.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="lineNumber"></param>
      <param name="columnNumber"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Opens the asset with associated application.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="lineNumber"></param>
      <param name="columnNumber"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object)">
      <summary>
        <para>Opens the asset with associated application.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="lineNumber"></param>
      <param name="columnNumber"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Opens the asset with associated application.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="lineNumber"></param>
      <param name="columnNumber"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32,System.Int32)">
      <summary>
        <para>Opens the asset with associated application.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="lineNumber"></param>
      <param name="columnNumber"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object[])">
      <summary>
        <para>Opens the asset(s) with associated application(s).</para>
      </summary>
      <param name="objects"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Refresh()">
      <summary>
        <para>Import any changed assets.</para>
      </summary>
      <param name="options"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Refresh(UnityEditor.ImportAssetOptions)">
      <summary>
        <para>Import any changed assets.</para>
      </summary>
      <param name="options"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RefreshSettings">
      <summary>
        <para>Apply pending Editor Settings changes to the Asset pipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RegisterCustomDependency(System.String,UnityEngine.Hash128)">
      <summary>
        <para>Allows you to register a custom dependency that Assets can be dependent on. If you register a custom dependency, and specify that an Asset is dependent on it, then the Asset will get re-imported if the custom dependency changes.</para>
      </summary>
      <param name="dependency">Name of dependency. You can use any name you like, but because these names are global across all your Assets, it can be useful to use a naming convention (eg a path-based naming system) to avoid clashes with other custom dependency names.</param>
      <param name="hashOfValue">A Hash128 value of the dependency.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ReleaseCachedFileHandles">
      <summary>
        <para>Calling this function will release file handles internally cached by Unity. This allows modifying asset or meta files safely thus avoiding potential file sharing IO errors.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveAssetBundleName(System.String,System.Boolean)">
      <summary>
        <para>Remove the assetBundle name from the asset database. The forceRemove flag is used to indicate if you want to remove it even it's in use.</para>
      </summary>
      <param name="assetBundleName">The assetBundle name you want to remove.</param>
      <param name="forceRemove">Flag to indicate if you want to remove the assetBundle name even it's in use.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveObjectFromAsset(UnityEngine.Object)">
      <summary>
        <para>Removes object from its asset (See Also: AssetDatabase.AddObjectToAsset).</para>
      </summary>
      <param name="objectToRemove"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveUnusedAssetBundleNames">
      <summary>
        <para>Remove all the unused assetBundle names in the asset database.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RenameAsset(System.String,System.String)">
      <summary>
        <para>Rename an asset file.</para>
      </summary>
      <param name="pathName">The path where the asset currently resides.</param>
      <param name="newName">The new name which should be given to the asset.</param>
      <returns>
        <para>An empty string, if the asset has been successfully renamed, otherwise an error message.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ResetCacheServerReconnectTimer">
      <summary>
        <para>Resets the internal cache server connection reconnect timer values. The default delay timer value is 1 second, and the max delay value is 5 minutes. Everytime a connection attempt fails it will double the delay timer value, until a maximum time of the max value.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssets">
      <summary>
        <para>Writes all unsaved asset changes to disk.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetImporterOverride(System.String)">
      <summary>
        <para>Sets a specific importer to use for the asset.</para>
      </summary>
      <param name="path">Asset path.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetLabels(UnityEngine.Object,System.String[])">
      <summary>
        <para>Replaces that list of labels on an asset.</para>
      </summary>
      <param name="obj"></param>
      <param name="labels"></param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetMainObject(UnityEngine.Object,System.String)">
      <summary>
        <para>Specifies which object in the asset file should become the main object after the next import.</para>
      </summary>
      <param name="mainObject">The object to become the main object.</param>
      <param name="assetPath">Path to the asset file.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.StartAssetEditing">
      <summary>
        <para>Starts importing Assets into the Asset Database. This lets you group several Asset imports together into one larger import.

Note:

Calling AssetDatabase.StartAssetEditing() places the Asset Database in a state that will prevent imports until AssetDatabase.StopAssetEditing() is called.
This means that if an exception occurs between the two function calls, the AssetDatabase will be unresponsive.
Therefore, it is highly recommended that you place calls to AssetDatabase.StartAssetEditing() and AssetDatabase.StopAssetEditing() inside
either a try..catch block, or a try..finally block as needed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.StopAssetEditing">
      <summary>
        <para>Stops importing Assets into the Asset Database. This lets you group several Asset imports together into one larger import.

Note:

Calling AssetDatabase.StartAssetEditing() places the Asset Database in a state that will prevent imports until AssetDatabase.StopAssetEditing() is called.
This means that if an exception occurs between the two function calls, the AssetDatabase will be unresponsive.
Therefore, it is highly recommended that you place calls to AssetDatabase.StartAssetEditing() and AssetDatabase.StopAssetEditing() inside
either a try..catch block, or a try..finally block as needed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&amp;,System.Int32&amp;)">
      <summary>
        <para>Get the GUID and local file id from an object instance id.</para>
      </summary>
      <param name="instanceID">InstanceID of the object to retrieve information for.</param>
      <param name="obj">The object to retrieve GUID and File Id for.</param>
      <param name="assetRef">The asset reference to retrieve GUID and File Id for.</param>
      <param name="guid">The GUID of an asset.</param>
      <param name="localId">The local file identifier of this asset.</param>
      <returns>
        <para>True if the guid and file id were successfully found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&amp;,System.Int32&amp;)">
      <summary>
        <para>Get the GUID and local file id from an object instance id.</para>
      </summary>
      <param name="instanceID">InstanceID of the object to retrieve information for.</param>
      <param name="obj">The object to retrieve GUID and File Id for.</param>
      <param name="assetRef">The asset reference to retrieve GUID and File Id for.</param>
      <param name="guid">The GUID of an asset.</param>
      <param name="localId">The local file identifier of this asset.</param>
      <returns>
        <para>True if the guid and file id were successfully found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Get the GUID and local file id from an object instance id.</para>
      </summary>
      <param name="instanceID">InstanceID of the object to retrieve information for.</param>
      <param name="obj">The object to retrieve GUID and File Id for.</param>
      <param name="assetRef">The asset reference to retrieve GUID and File Id for.</param>
      <param name="guid">The GUID of an asset.</param>
      <param name="localId">The local file identifier of this asset.</param>
      <returns>
        <para>True if the guid and file id were successfully found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Get the GUID and local file id from an object instance id.</para>
      </summary>
      <param name="instanceID">InstanceID of the object to retrieve information for.</param>
      <param name="obj">The object to retrieve GUID and File Id for.</param>
      <param name="assetRef">The asset reference to retrieve GUID and File Id for.</param>
      <param name="guid">The GUID of an asset.</param>
      <param name="localId">The local file identifier of this asset.</param>
      <returns>
        <para>True if the guid and file id were successfully found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.LazyLoadReference`1&lt;T&gt;,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Get the GUID and local file id from an object instance id.</para>
      </summary>
      <param name="instanceID">InstanceID of the object to retrieve information for.</param>
      <param name="obj">The object to retrieve GUID and File Id for.</param>
      <param name="assetRef">The asset reference to retrieve GUID and File Id for.</param>
      <param name="guid">The GUID of an asset.</param>
      <param name="localId">The local file identifier of this asset.</param>
      <returns>
        <para>True if the guid and file id were successfully found, false if not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.UnregisterCustomDependencyPrefixFilter(System.String)">
      <summary>
        <para>Removes custom dependencies that match the prefixFilter.</para>
      </summary>
      <param name="prefixFilter">Prefix filter for the custom dependencies to unregister.</param>
      <returns>
        <para>Number of custom dependencies removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ValidateMoveAsset(System.String,System.String)">
      <summary>
        <para>Checks if an asset file can be moved from one folder to another. (Without actually moving the file).</para>
      </summary>
      <param name="oldPath">The path where the asset currently resides.</param>
      <param name="newPath">The path which the asset should be moved to.</param>
      <returns>
        <para>An empty string if the asset can be moved, otherwise an error message.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.WriteImportSettingsIfDirty(System.String)">
      <summary>
        <para>Writes the import settings to disk.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="T:UnityEditor.AssetDeleteResult">
      <summary>
        <para>Result of Asset delete operation</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.DidDelete">
      <summary>
        <para>Tells Unity that the asset was deleted by the callback. Unity will not try to delete the asset, but will delete the cached version and preview file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.DidNotDelete">
      <summary>
        <para>Tells the internal implementation that the callback did not delete the asset. The asset will be delete by the internal implementation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.FailedDelete">
      <summary>
        <para>Tells Unity that the file cannot be deleted and Unity should leave it alone.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporter">
      <summary>
        <para>Base class from which asset importers for specific asset types derive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetBundleName">
      <summary>
        <para>Get or set the AssetBundle name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetBundleVariant">
      <summary>
        <para>Get or set the AssetBundle variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetPath">
      <summary>
        <para>The path name of the asset for this importer. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.importSettingsMissing">
      <summary>
        <para>The value is true when no meta file is provided with the imported asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.userData">
      <summary>
        <para>Get or set any user data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.AddRemap(UnityEditor.AssetImporter/SourceAssetIdentifier,UnityEngine.Object)">
      <summary>
        <para>Map a sub-asset from an imported asset (such as an FBX file) to an external Asset of the same type.</para>
      </summary>
      <param name="identifier">The identifier of the sub-asset.</param>
      <param name="externalObject">The object to be mapped to the internal object. Can belong to another Prefab or Asset, but not the Asset that is being changed.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.GetAtPath(System.String)">
      <summary>
        <para>Retrieves the asset importer for the asset at path.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.AssetImporter.GetExternalObjectMap">
      <summary>
        <para>Gets a copy of the external object map used by the AssetImporter.</para>
      </summary>
      <returns>
        <para>The map between a sub-asset and an external Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporter.RemoveRemap(UnityEditor.AssetImporter/SourceAssetIdentifier)">
      <summary>
        <para>Removes an item from the map of external objects.</para>
      </summary>
      <param name="identifier">The identifier of the sub-asset.</param>
      <returns>
        <para>Returns true if an element was removed, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporter.SaveAndReimport">
      <summary>
        <para>Save asset importer settings if asset importer is dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.SetAssetBundleNameAndVariant(System.String,System.String)">
      <summary>
        <para>Set the AssetBundle name and variant.</para>
      </summary>
      <param name="assetBundleName">AssetBundle name.</param>
      <param name="assetBundleVariant">AssetBundle variant.</param>
    </member>
    <member name="T:UnityEditor.AssetImporter.SourceAssetIdentifier">
      <summary>
        <para>Represents a unique identifier for a sub-asset embedded in an imported Asset (such as an FBX file).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporter.SourceAssetIdentifier.name">
      <summary>
        <para>The name of the Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporter.SourceAssetIdentifier.type">
      <summary>
        <para>The type of the Asset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.SourceAssetIdentifier.#ctor(UnityEngine.Object)">
      <summary>
        <para>Constructs a SourceAssetIdentifier.</para>
      </summary>
      <param name="asset">The the sub-asset embedded in the imported Asset.</param>
      <param name="type">The type of the sub-asset embedded in the imported Asset.</param>
      <param name="name">The name of the sub-asset embedded in the imported Asset.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.SourceAssetIdentifier.#ctor(System.Type,System.String)">
      <summary>
        <para>Constructs a SourceAssetIdentifier.</para>
      </summary>
      <param name="asset">The the sub-asset embedded in the imported Asset.</param>
      <param name="type">The type of the sub-asset embedded in the imported Asset.</param>
      <param name="name">The name of the sub-asset embedded in the imported Asset.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.SupportsRemappedAssetType(System.Type)">
      <summary>
        <para>Checks if the AssetImporter supports remapping the given asset type.</para>
      </summary>
      <param name="type">The type of asset to check.</param>
      <returns>
        <para>Returns true if the importer supports remapping the given type. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.AssetImportContext">
      <summary>
        <para>Defines the import context for scripted importers during an import event.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.assetPath">
      <summary>
        <para>The path of the source asset file to be imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.mainObject">
      <summary>
        <para>The main object set on the AssetImportContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.selectedBuildTarget">
      <summary>
        <para>This indicates what platform the import event is targeting.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.AddObjectToAsset(System.String,UnityEngine.Object)">
      <summary>
        <para>Adds an object to the result of the import operation.</para>
      </summary>
      <param name="identifier">A unique identifier associated to this object.</param>
      <param name="obj">The Unity Object to add to the asset.</param>
      <param name="thumbnail">An optional 2D texture to use as the thumbnail for this object.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.AddObjectToAsset(System.String,UnityEngine.Object,UnityEngine.Texture2D)">
      <summary>
        <para>Adds an object to the result of the import operation.</para>
      </summary>
      <param name="identifier">A unique identifier associated to this object.</param>
      <param name="obj">The Unity Object to add to the asset.</param>
      <param name="thumbnail">An optional 2D texture to use as the thumbnail for this object.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(System.String)">
      <summary>
        <para>Setup artifact dependency to an asset.</para>
      </summary>
      <param name="path">The path of the Asset whose artifact should be the dependency. Note: Although the dependency is the artifact (import result) which is stored in the library folder, this parameter is the path to the Asset in the Assets folder, and not a path to the artifact in the Library folder.</param>
      <param name="guid">The guid of the artifact dependency.</param>
      <param name="key">The artifact key of the artifact dependency.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(UnityEditor.GUID)">
      <summary>
        <para>Setup artifact dependency to an asset.</para>
      </summary>
      <param name="path">The path of the Asset whose artifact should be the dependency. Note: Although the dependency is the artifact (import result) which is stored in the library folder, this parameter is the path to the Asset in the Assets folder, and not a path to the artifact in the Library folder.</param>
      <param name="guid">The guid of the artifact dependency.</param>
      <param name="key">The artifact key of the artifact dependency.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(UnityEditor.Experimental.ArtifactKey)">
      <summary>
        <para>Setup artifact dependency to an asset.</para>
      </summary>
      <param name="path">The path of the Asset whose artifact should be the dependency. Note: Although the dependency is the artifact (import result) which is stored in the library folder, this parameter is the path to the Asset in the Assets folder, and not a path to the artifact in the Library folder.</param>
      <param name="guid">The guid of the artifact dependency.</param>
      <param name="key">The artifact key of the artifact dependency.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnCustomDependency(System.String)">
      <summary>
        <para>Allows you to specify that an Asset has a custom dependency.</para>
      </summary>
      <param name="dependency">Name of dependency. You can use any name you like, but because these names are global across all your Assets, it can be useful to use a naming convention (eg a path-based naming system as in the example below) to avoid clashes with other custom dependency names.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnSourceAsset(System.String)">
      <summary>
        <para>Allows you to specify that an Asset depends directly on the source file of another Asset (as opposed to the import result of another asset).</para>
      </summary>
      <param name="path">The path of the source dependency.</param>
      <param name="guid">The guid of the source asset dependency.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnSourceAsset(UnityEditor.GUID)">
      <summary>
        <para>Allows you to specify that an Asset depends directly on the source file of another Asset (as opposed to the import result of another asset).</para>
      </summary>
      <param name="path">The path of the source dependency.</param>
      <param name="guid">The guid of the source asset dependency.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetObjects(System.Collections.Generic.List`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Gets the list of objects set on the AssetImportContext.</para>
      </summary>
      <param name="objects">The list of objects to be filled by the context.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetResultPath(System.String)">
      <summary>
        <para>Returns the path where to store the result of an import for a given extension.</para>
      </summary>
      <param name="extension">The extension string.</param>
      <returns>
        <para>The path where to store the result for the given extension.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.LogImportError(System.String,UnityEngine.Object)">
      <summary>
        <para>Logs an error message encountered during import.</para>
      </summary>
      <param name="msg">The error message.</param>
      <param name="obj">Optional Object that is targeted by the error.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.LogImportWarning(System.String,UnityEngine.Object)">
      <summary>
        <para>Logs a warning message encountered during import.</para>
      </summary>
      <param name="msg">The warning message.</param>
      <param name="obj">Optional Object that is targeted by the warning.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.SetMainObject(UnityEngine.Object)">
      <summary>
        <para>Sets the main object for import.</para>
      </summary>
      <param name="obj">The object to be set as the main object. This object must already be added with the AddObjectToAsset method.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.AssetImporterEditor">
      <summary>
        <para>Default editor for all asset importer settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataSerializedObject">
      <summary>
        <para>A SerializedObject that represents the extraDataTarget or the extraDataTargets of the AssetImporterEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataTarget">
      <summary>
        <para>The extra data object associated with the Editor.target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataTargets">
      <summary>
        <para>An array of objects associated with each Editor.targets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataType">
      <summary>
        <para>Override this property to return a type that inherits from ScriptableObject. This makes the AssetImporterEditor aware of serialized data outside of the Importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.needsApplyRevert">
      <summary>
        <para>Whether the ApplyRevertGUI method is required to draw in the Inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.showImportedObject">
      <summary>
        <para>Should imported object be shown as a separate editor?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.useAssetDrawPreview">
      <summary>
        <para>Determines if the asset preview is handled by the AssetEditor or the Importer DrawPreview</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.Apply">
      <summary>
        <para>Saves any changes from the Editor's control into the asset's import settings object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyAndImport">
      <summary>
        <para>Saves the changes from the editor UI to the settings object and imports the asset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyButton">
      <summary>
        <para>Implements the 'Apply' button of the inspector.</para>
      </summary>
      <returns>
        <para>Returns true if the new settings were successfully applied.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyRevertGUI">
      <summary>
        <para>Add's the 'Apply' and 'Revert' buttons to the editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.Awake">
      <summary>
        <para>This function is called when the Editor script is started.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.CanApply">
      <summary>
        <para>Determines if the modifications to import settings can be applied.</para>
      </summary>
      <returns>
        <para>Returns true if the edited import settings do not contain errors and can be applied. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.HasModified">
      <summary>
        <para>Determine if the import settings have been modified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.InitializeExtraDataInstance(UnityEngine.Object,System.Int32)">
      <summary>
        <para>This method is called during the initialization process of the Editor, after Awake and before OnEnable.</para>
      </summary>
      <param name="extraData">A ScriptableObject instance of the type provided by AssetImporterEditor.extraDataType.</param>
      <param name="targetIndex">The corresponding Editor.targets index of the provided extraData.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnApplyRevertGUI">
      <summary>
        <para>Process the 'Apply' and 'Revert' buttons.</para>
      </summary>
      <returns>
        <para>Returns true if the new settings were successfully applied.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnDisable">
      <summary>
        <para>This function is called when the editor object goes out of scope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnEnable">
      <summary>
        <para>This function is called when the object is loaded.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnInspectorGUI">
      <summary>
        <para>Override this method to create your own Inpsector GUI for a ScriptedImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ResetValues">
      <summary>
        <para>Reset the import settings to their last saved values.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.RevertButton">
      <summary>
        <para>Implements the 'Revert' button of the inspector.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute">
      <summary>
        <para>Use this method attribute to specify which methods declare dependancies on imported assets. The methods are called by AssetDatabase during import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.importerType">
      <summary>
        <para>The type of the importer for which the imported dependency getter is declared.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.version">
      <summary>
        <para>The version of the imported dependency getter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.#ctor(System.Type,System.UInt32)">
      <summary>
        <para>Use the CollectImportedDependencies attribute to declare getters for imported dependencies.</para>
      </summary>
      <param name="importerType">The type of the importer for which the getter is called by the AssetDatabase.</param>
      <param name="version">The version of the imported dependencies getter.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.FBXMaterialDescriptionPreprocessor">
      <summary>
        <para>This is a default implementation for AssetPostProcessor.OnPreprocessMaterialDescription, this implementation converts material descriptions imported from FBX assets into materials for the internal rendering pipeline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.MaterialDescription">
      <summary>
        <para>Contains a set of typed properties for describing a texture input of a MaterialDescription.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.MaterialDescription.materialName">
      <summary>
        <para>The name of the material</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Retrieves the property names of type float for this material.</para>
      </summary>
      <param name="names">The list of retrieved property names.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Retrieves the property names of type string for this material.</para>
      </summary>
      <param name="names">The list of retrieved property names.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetTexturePropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Retrieves the property names of type TextureDescription for this material.</para>
      </summary>
      <param name="names">The list of retrieved property names.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Retrieves the property names of type Vector4 for this material.</para>
      </summary>
      <param name="names">The list of retrieved property names.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Checks if a material property is animated in a any AnimationClip.</para>
      </summary>
      <param name="propertyName">The name of the material property.</param>
      <returns>
        <para>Returns true if the material property is animated. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Checks if a material property is animated in a specific AnimationClip.</para>
      </summary>
      <param name="propertyName">Name of the material's animated property.</param>
      <param name="clipName">The name of the AnimationClip.</param>
      <returns>
        <para>Returns true if the material property is animated. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Retrieves the AnimationCurve for an animated material property in a specific AnimationClip.</para>
      </summary>
      <param name="clipName">The name of the AnimationClip.</param>
      <param name="propertyName">The name of the material property.</param>
      <param name="value">The retrieved AnimationCurve, if one exists for the specified material property.</param>
      <returns>
        <para>Returns true if the material property is animated. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Retrieves the value of a specified material property.</para>
      </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The retrieved value.</param>
      <returns>
        <para>Returns true if the property exists on the material. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Retrieves the value of a specified material property.</para>
      </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The retrieved value.</param>
      <returns>
        <para>Returns true if the property exists on the material. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Retrieves the value of a specified material property.</para>
      </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The retrieved value.</param>
      <returns>
        <para>Returns true if the property exists on the material. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,UnityEditor.AssetImporters.TexturePropertyDescription&amp;)">
      <summary>
        <para>Retrieves the value of a specified material property.</para>
      </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The retrieved value.</param>
      <returns>
        <para>Returns true if the property exists on the material. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporter">
      <summary>
        <para>Abstract base class for custom Asset importers.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporter.OnImportAsset(UnityEditor.AssetImporters.AssetImportContext)">
      <summary>
        <para>This method must by overriden by the derived class and is called by the Asset pipeline to import files.</para>
      </summary>
      <param name="ctx">This argument contains all the contextual information needed to process the import event and is also used by the custom importer to store the resulting Unity Asset.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporter.SupportsRemappedAssetType(System.Type)">
      <summary>
        <para>Override this method if your ScriptedImporter supports remapping specific asset types.</para>
      </summary>
      <param name="type">The type of asset to check.</param>
      <returns>
        <para>Returns true if the importer supports remapping the given type. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporterAttribute">
      <summary>
        <para>Class attribute used to register a custom asset importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.fileExtensions">
      <summary>
        <para>List of file name extensions (not including the leading period character) that the scripted importer handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.importQueuePriority">
      <summary>
        <para>Enables controlling the ordering of asset import based on type. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.overrideFileExtensions">
      <summary>
        <para>List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.version">
      <summary>
        <para>Importer version number that is used by the import layer to detect new version of the importer and trigger re-imports when such events occur, to apply latest changes made to the scripted imrpoter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.ScriptedImporterAttribute.AllowCaching">
      <summary>
        <para>Enable cache server uploads and downloads.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.ScriptedImporterAttribute.AutoSelect">
      <summary>
        <para>Determines whether the importer gets automatically selected for the specified extension(s).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String)">
      <summary>
        <para>Use the ScriptedImporter attribute to register a custom importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
      <param name="version">A number that is used by the import pipeline to detect new versions of the importer script. Changing this number will trigger a re-import of all assets matching the listed extensions.</param>
      <param name="exts">List of file name extensions (not including the leading period character) that the scripted importer handles.</param>
      <param name="ext">Single file name extension (not including the leading period character) that the scripted importer handles.</param>
      <param name="importQueueOffset">Gives control over ordering of asset import based on types. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</param>
      <param name="overrideExts">List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String,System.Int32)">
      <summary>
        <para>Use the ScriptedImporter attribute to register a custom importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
      <param name="version">A number that is used by the import pipeline to detect new versions of the importer script. Changing this number will trigger a re-import of all assets matching the listed extensions.</param>
      <param name="exts">List of file name extensions (not including the leading period character) that the scripted importer handles.</param>
      <param name="ext">Single file name extension (not including the leading period character) that the scripted importer handles.</param>
      <param name="importQueueOffset">Gives control over ordering of asset import based on types. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</param>
      <param name="overrideExts">List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[])">
      <summary>
        <para>Use the ScriptedImporter attribute to register a custom importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
      <param name="version">A number that is used by the import pipeline to detect new versions of the importer script. Changing this number will trigger a re-import of all assets matching the listed extensions.</param>
      <param name="exts">List of file name extensions (not including the leading period character) that the scripted importer handles.</param>
      <param name="ext">Single file name extension (not including the leading period character) that the scripted importer handles.</param>
      <param name="importQueueOffset">Gives control over ordering of asset import based on types. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</param>
      <param name="overrideExts">List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.String[])">
      <summary>
        <para>Use the ScriptedImporter attribute to register a custom importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
      <param name="version">A number that is used by the import pipeline to detect new versions of the importer script. Changing this number will trigger a re-import of all assets matching the listed extensions.</param>
      <param name="exts">List of file name extensions (not including the leading period character) that the scripted importer handles.</param>
      <param name="ext">Single file name extension (not including the leading period character) that the scripted importer handles.</param>
      <param name="importQueueOffset">Gives control over ordering of asset import based on types. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</param>
      <param name="overrideExts">List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.Int32)">
      <summary>
        <para>Use the ScriptedImporter attribute to register a custom importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
      <param name="version">A number that is used by the import pipeline to detect new versions of the importer script. Changing this number will trigger a re-import of all assets matching the listed extensions.</param>
      <param name="exts">List of file name extensions (not including the leading period character) that the scripted importer handles.</param>
      <param name="ext">Single file name extension (not including the leading period character) that the scripted importer handles.</param>
      <param name="importQueueOffset">Gives control over ordering of asset import based on types. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</param>
      <param name="overrideExts">List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.String[],System.Int32)">
      <summary>
        <para>Use the ScriptedImporter attribute to register a custom importer derived from ScriptedImporter with Unity's Asset import pipeline.</para>
      </summary>
      <param name="version">A number that is used by the import pipeline to detect new versions of the importer script. Changing this number will trigger a re-import of all assets matching the listed extensions.</param>
      <param name="exts">List of file name extensions (not including the leading period character) that the scripted importer handles.</param>
      <param name="ext">Single file name extension (not including the leading period character) that the scripted importer handles.</param>
      <param name="importQueueOffset">Gives control over ordering of asset import based on types. Positive values delay the processing of source asset files while negative values place them earlier in the import process.</param>
      <param name="overrideExts">List of file name extensions (not including the leading period character) that the scripted importer can handle in addition to the default file name extension(s).</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporterEditor">
      <summary>
        <para>Default editor for source assets handled by Scripted Importers.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SketchupMaterialDescriptionPreprocessor">
      <summary>
        <para>This is a default implementation for AssetPostProcessor.OnPreprocessMaterialDescription, this implementation converts material descriptions imported from Sketchup assets into materials for the internal rendering pipeline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SourceTextureInformation">
      <summary>
        <para>Original texture data information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.containsAlpha">
      <summary>
        <para>Determines if alpha channel is present in image data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.hdr">
      <summary>
        <para>Determines if image has HDR data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.height">
      <summary>
        <para>Height of the image data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.width">
      <summary>
        <para>Width of the image data.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SpriteImportData">
      <summary>
        <para>Struct that represents how Sprite asset should be generated when calling TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.alignment">
      <summary>
        <para>Pivot value represented by SpriteAlignment.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.border">
      <summary>
        <para>Border value for the generated Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.name">
      <summary>
        <para>Name for the generated Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.outline">
      <summary>
        <para>Sprite Asset creation uses this outline when it generates the Mesh for the Sprite. If this is not given, SpriteImportData.tesselationDetail will be used to determine the mesh detail.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.pivot">
      <summary>
        <para>Pivot value represented in Vector2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.rect">
      <summary>
        <para>Position and size of the Sprite in a given texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.spriteID">
      <summary>
        <para>An identifier given to a Sprite. Use this to identify which data was used to generate that Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.tessellationDetail">
      <summary>
        <para>Controls mesh generation detail. This value will be ignored if SpriteImportData.ouline is provided.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerationOutput">
      <summary>
        <para>Structure that represents the result from calling TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.importInspectorWarnings">
      <summary>
        <para>Warnings that should be shown in Inspector after generating a Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.importWarnings">
      <summary>
        <para>TextureGenerator.GenerateTexture reports warnings when you generate a Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.sprites">
      <summary>
        <para>Sprites that are generated by TextureGenerator.GenerateTexture from TextureGenerationSettings.spriteSheetData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.texture">
      <summary>
        <para>This is a Texture2D generated by TextureGenerator.GenerateTexture from TextureGenerationSettings.imageData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.thumbNail">
      <summary>
        <para>Thumbnail version of the generated texture.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerationSettings">
      <summary>
        <para>Represents how a texture should be generated from calling TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.assetPath">
      <summary>
        <para>Path where the Asset will be placed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.enablePostProcessor">
      <summary>
        <para>When set to true, AssetPostprocessor hooks will be called during texture generation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.platformSettings">
      <summary>
        <para>Platform settings for generating the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.qualifyForSpritePacking">
      <summary>
        <para>Indicates if the Sprite generated can be used for atlas packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.secondarySpriteTextures">
      <summary>
        <para>Secondary textures for the generated Sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.sourceTextureInformation">
      <summary>
        <para>Texture format for the image data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.spriteImportData">
      <summary>
        <para>Sprite Asset generation data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.spritePackingTag">
      <summary>
        <para>Tag used for Sprite packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.textureImporterSettings">
      <summary>
        <para>Settings for generating texture.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.TextureGenerationSettings.#ctor(UnityEditor.TextureImporterType)">
      <summary>
        <para>The Constructor initializes to most common value based on the TetureImporterType you pass in.</para>
      </summary>
      <param name="type">Texture type.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerator">
      <summary>
        <para>Experimental utilities for generating Texture2D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.TextureGenerator.GenerateTexture(UnityEditor.AssetImporters.TextureGenerationSettings,Unity.Collections.NativeArray`1&lt;UnityEngine.Color32&gt;)">
      <summary>
        <para>Generates Texture2D and Sprite Assets based on the settings provided.</para>
      </summary>
      <param name="settings">Settings use for generating Texture2D and Sprite.</param>
      <param name="colorBuffer">Color buffer for generating Texture2D and Sprite.</param>
      <returns>
        <para>Result of the generation.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.TexturePropertyDescription">
      <summary>
        <para>Contains a set of typed properties for describing a texture input of a MaterialDescription.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.offset">
      <summary>
        <para>UV coordinates offset (x,y).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.path">
      <summary>
        <para>Absolute path to the texture asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.relativePath">
      <summary>
        <para>Path to the texture asset relative to the Asset folder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.scale">
      <summary>
        <para>UV coordinates scaling (x,y).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.texture">
      <summary>
        <para>Reference to the texture asset.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.ThreeDSMaterialDescriptionPreprocessor">
      <summary>
        <para>This is a default implementation for AssetPostProcessor.OnPreprocessMaterialDescription, this implementation converts material descriptions imported from .3DS assets into materials for the internal rendering pipeline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetModificationProcessor">
      <summary>
        <para>AssetModificationProcessor lets you hook into saving of serialized assets and
      scenes which are edited inside Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetMoveResult">
      <summary>
        <para>Result of Asset move</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.DidMove">
      <summary>
        <para>Tells the internal implementation that the script moved the asset physically on disk.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.DidNotMove">
      <summary>
        <para>Tells the internal implementation that the asset was not moved physically on disk by the script.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.FailedMove">
      <summary>
        <para>Tells the internal implementation that the script could not move the assets.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPipelineMode">
      <summary>
        <para>Selects the Assetpipeline mode to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPipelineMode.Version1">
      <summary>
        <para>Use this if you want to use assetpipeline version 1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPipelineMode.Version2">
      <summary>
        <para>Use this if you want to use assetpipeline version 2.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPostprocessor">
      <summary>
        <para>AssetPostprocessor lets you hook into the import pipeline and run scripts prior or after importing assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.assetImporter">
      <summary>
        <para>Reference to the asset importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.assetPath">
      <summary>
        <para>The path name of the asset being imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.context">
      <summary>
        <para>The import context.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.GetPostprocessOrder">
      <summary>
        <para>Override the order in which importers are processed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.GetVersion">
      <summary>
        <para>Returns the version of the asset postprocessor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogError(System.String)">
      <summary>
        <para>Logs an import error message to the console.</para>
      </summary>
      <param name="warning"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogError(System.String,UnityEngine.Object)">
      <summary>
        <para>Logs an import error message to the console.</para>
      </summary>
      <param name="warning"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String)">
      <summary>
        <para>Logs an import warning to the console.</para>
      </summary>
      <param name="warning"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String,UnityEngine.Object)">
      <summary>
        <para>Logs an import warning to the console.</para>
      </summary>
      <param name="warning"></param>
      <param name="context"></param>
    </member>
    <member name="T:UnityEditor.AssetPreview">
      <summary>
        <para>Utility for fetching asset previews by instance ID of assets, See AssetPreview.GetAssetPreview. Since previews are loaded asynchronously methods are provided for requesting if all previews have been fully loaded, see AssetPreview.IsLoadingAssetPreviews. Loaded previews are stored in a cache, the size of the cache can be controlled by calling [AssetPreview.SetPreviewTextureCacheSize].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetAssetPreview(UnityEngine.Object)">
      <summary>
        <para>Returns a preview texture for an asset.</para>
      </summary>
      <param name="asset"></param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetAssetPreview">
      <summary>
        <para>Returns a preview texture for an instanceID of an asset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniThumbnail(UnityEngine.Object)">
      <summary>
        <para>Returns the thumbnail for an object (like the ones you see in the project view).</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail(System.Type)">
      <summary>
        <para>Returns the thumbnail for the type.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail">
      <summary>
        <para>Returns the thumbnail for the object's type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreview(System.Int32)">
      <summary>
        <para>Loading previews is asynchronous so it is useful to know if a specific asset preview is in the process of being loaded so client code e.g can repaint while waiting for the loading to finish.</para>
      </summary>
      <param name="instanceID">InstanceID of the assset that a preview has been requested for by: AssetPreview.GetAssetPreview().</param>
    </member>
    <member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreviews">
      <summary>
        <para>Loading previews is asynchronous so it is useful to know if any requested previews are in the process of being loaded so client code e.g can repaint while waiting.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.SetPreviewTextureCacheSize(System.Int32)">
      <summary>
        <para>Set the asset preview cache to a size that can hold all visible previews on the screen at once.</para>
      </summary>
      <param name="size">The number of previews that can be loaded into the cache before the least used previews are being unloaded.</param>
    </member>
    <member name="T:UnityEditor.AssetSettingsProvider">
      <summary>
        <para>AssetSettingsProvider is a specialization of the SettingsProvider class that converts legacy settings to Unified Settings. Legacy settings include any settings that used the Inspector to modify themselves, such as the *.asset files under the ProjectSettings folder. Under the hood, AssetSettingsProvider creates an Editor for specific Assets and builds the UI for the Settings window by wrapping the Editor.OnInspectorGUI function.

Internally we use this class to wrap our existing settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetSettingsProvider.settingsEditor">
      <summary>
        <para>Editor providing UI to modify the settings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromAssetPath(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Create an AssetSettingsProvider from an asset path.</para>
      </summary>
      <param name="settingsWindowPath">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="assetPath">Path of the asset on disk.</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <returns>
        <para>Returns an AssetSettingsProvider that will create an Editor for this particular asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromObject(System.String,UnityEngine.Object,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Create an AssetSettingsProvider from a settings object.</para>
      </summary>
      <param name="settingsWindowPath">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="settingsObj">Settings object to display</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <returns>
        <para>Returns an AssetSettingsProvider that will create an Editor for this particular asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromResourcePath(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Create an AssetSettingsProvider from an asset resource path.</para>
      </summary>
      <param name="settingsWindowPath">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="resourcePath">Path of the resource on disk.</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <returns>
        <para>Returns an AssetSettingsProvider that will create an Editor for this particular asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.#ctor(System.String,System.Func`1&lt;UnityEditor.Editor&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Creates a new AssetSettingsProvider so you can wrap legacy settings (that is, settings that previously appeared in the Inspector).</para>
      </summary>
      <param name="settingsWindowPath">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="editorCreator">Functor creating an Editor able to modify the settings.</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <param name="settingsGetter">Functor creating or getting a settings object.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.#ctor(System.String,System.Func`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Creates a new AssetSettingsProvider so you can wrap legacy settings (that is, settings that previously appeared in the Inspector).</para>
      </summary>
      <param name="settingsWindowPath">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="editorCreator">Functor creating an Editor able to modify the settings.</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <param name="settingsGetter">Functor creating or getting a settings object.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Overrides SettingsProvider.OnActivate for this AssetSettingsProvider.</para>
      </summary>
      <param name="searchContext">Search context in the search box on the Settings window.</param>
      <param name="rootElement">Root of the UIElements tree. If you add to this root, the SettingsProvider uses UIElements instead of calling SettingsProvider.OnGUI to build the UI. If you do not add to this VisualElement, then you must use the IMGUI to build the UI.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnDeactivate">
      <summary>
        <para>Overrides SettingsProvider.OnDeactivate for this AssetSettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnFooterBarGUI">
      <summary>
        <para>Overrides SettingsProvider.OnFooterBarGUI for this AssetSettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnGUI(System.String)">
      <summary>
        <para>Overrides SettingsProvider.OnGUI for this AssetSettingsProvider.</para>
      </summary>
      <param name="searchContext">Search context for the Settings window. Used to show or hide relevant properties.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnTitleBarGUI">
      <summary>
        <para>Overrides SettingsProvider.OnTitleBarGUI for this AssetSettingsProvider. This draws the button bar that contains the "add to preset" and the "help" buttons.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering">
      <summary>
        <para>Antialiased curve rendering functionality used by audio tools in the editor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioCurveAndColorEvaluator">
      <summary>
        <para>Curve evaluation function that allows simultaneous evaluation of the curve y-value and a color of the curve at that point.</para>
      </summary>
      <param name="x">Normalized x-position in the range [0; 1] at which the curve should be evaluated.</param>
      <param name="col">Color of the curve at the evaluated point.</param>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioCurveEvaluator">
      <summary>
        <para>Curve evaluation function used to evaluate the curve y-value and at the specified point.</para>
      </summary>
      <param name="x">Normalized x-position in the range [0; 1] at which the curve should be evaluated.</param>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioMinMaxCurveAndColorEvaluator">
      <summary>
        <para>Curve evaluation function that allows simultaneous evaluation of the min- and max-curves. The returned minValue and maxValue values are expected to be in the range [-1; 1] and a value of 0 corresponds to the vertical center of the rectangle that is drawn into. Values outside of this range will be clamped. Additionally the color of the curve at this point is evaluated.</para>
      </summary>
      <param name="x">Normalized x-position in the range [0; 1] at which the min- and max-curves should be evaluated.</param>
      <param name="col">Color of the curve at the specified evaluation point.</param>
      <param name="minValue">Returned value of the minimum curve. Clamped to [-1; 1].</param>
      <param name="maxValue">Returned value of the maximum curve. Clamped to [-1; 1].</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveEvaluator,UnityEngine.Color)">
      <summary>
        <para>Renders a thin curve determined by the curve evaluation function. The solid color of the curve is set by the curveColor argument.</para>
      </summary>
      <param name="r">Rectangle determining the size of the graph.</param>
      <param name="eval">Curve evaluation function.</param>
      <param name="curveColor">Solid fill color of the curve. The alpha-channel determines the amount of opacity.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveEvaluator,UnityEngine.Color)">
      <summary>
        <para>Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and the bottom of the rectngle with smooth gradients along the edges.</para>
      </summary>
      <param name="r">Rectangle determining the size of the graph.</param>
      <param name="eval">Normalized x-position in the range [0; 1] at which the curve should be evaluated. The returned value is expected to be in the range [-1; 1] and a value of 0 corresponds to the vertical center of the rectangle that is drawn into. Values outside of this range will be clamped.</param>
      <param name="curveColor">Solid fill color of the curve. The alpha-channel determines the amount of opacity.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveAndColorEvaluator)">
      <summary>
        <para>Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and the bottom of the rectngle with smooth gradients along the edges.</para>
      </summary>
      <param name="r">Rectangle determining the size of the graph.</param>
      <param name="eval">Normalized x-position in the range [0; 1] at which the curve should be evaluated. The returned value is expected to be in the range [-1; 1] and a value of 0 corresponds to the vertical center of the rectangle that is drawn into. Values outside of this range will be clamped.</param>
      <param name="curveColor">Solid fill color of the curve. The alpha-channel determines the amount of opacity.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawMinMaxFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioMinMaxCurveAndColorEvaluator)">
      <summary>
        <para>Fills the area between the two curves evaluated by the AudioMinMaxCurveAndColorEvaluator provided with smooth gradients along the edges.</para>
      </summary>
      <param name="r">Rectangle determining the size of the graph.</param>
      <param name="eval">Normalized x-position in the range [0; 1] at which the min- and max-curves should be evaluated. The returned minValue and maxValue values are expected to be in the range [-1; 1] and a value of 0 corresponds to the vertical center of the rectangle that is drawn into. Values outside of this range will be clamped.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawSymmetricFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveAndColorEvaluator)">
      <summary>
        <para>Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and its vertical mirror image with smooth gradients along the edges. Useful for drawing amplitude plots of audio signals.</para>
      </summary>
      <param name="r">Rectangle determining the size of the graph.</param>
      <param name="eval">Normalized x-position in the range [0; 1] at which the curve should be evaluated. The returned value is expected to be in the range [0; 1] and a value of 0 corresponds to the vertical center of the rectangle that is drawn into. Values outside of this range will be clamped.</param>
    </member>
    <member name="T:UnityEditor.AudioImporter">
      <summary>
        <para>Audio importer lets you modify AudioClip import settings from editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.ambisonic">
      <summary>
        <para>When this flag is set, the audio clip will be treated as being ambisonic.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.compressionBitrate">
      <summary>
        <para>Compression bitrate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.defaultSampleSettings">
      <summary>
        <para>The default sample settings for the AudioClip importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.forceToMono">
      <summary>
        <para>Force audioclips to mono?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.loadInBackground">
      <summary>
        <para>Corresponding to the "Load In Background" flag in the AudioClip inspector, when this flag is set, the loading of the clip will happen delayed without blocking the main thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.preloadAudioData">
      <summary>
        <para>Preloads audio data of the clip when the clip asset is loaded. When this flag is off, scripts have to call AudioClip.LoadAudioData() to load the data before the clip can be played. Properties like length, channels and format are available before the audio data has been loaded.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AudioImporter.ClearSampleSettingOverride(System.String)">
      <summary>
        <para>Clears the sample settings override for the given platform.</para>
      </summary>
      <param name="platform">The platform to clear the overrides for.</param>
      <returns>
        <para>Returns true if any overrides were actually cleared.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.ContainsSampleSettingsOverride(System.String)">
      <summary>
        <para>Returns whether a given build target has its sample settings currently overridden.</para>
      </summary>
      <param name="platform">The platform to query if this AudioImporter has an override for.</param>
      <returns>
        <para>Returns true if the platform is currently overriden in this AudioImporter.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.GetOverrideSampleSettings(System.String)">
      <summary>
        <para>Return the current override settings for the given platform.</para>
      </summary>
      <param name="platform">The platform to get the override settings for.</param>
      <returns>
        <para>The override sample settings for the given platform.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.SetOverrideSampleSettings(System.String,UnityEditor.AudioImporterSampleSettings)">
      <summary>
        <para>Sets the override sample settings for the given platform.</para>
      </summary>
      <param name="platform">The platform which will have the sample settings overridden.</param>
      <param name="settings">The override settings for the given platform.</param>
      <returns>
        <para>Returns true if the settings were successfully overriden. Some setting overrides are not possible for the given platform, in which case false is returned and the settings are not registered.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AudioImporterSampleSettings">
      <summary>
        <para>This structure contains a collection of settings used to define how an AudioClip should be imported.

This  structure is used with the AudioImporter to define how the AudioClip should be imported and treated during loading within the Scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.compressionFormat">
      <summary>
        <para>CompressionFormat defines the compression type that the audio file is encoded to. Different compression types have different performance and audio artifact characteristics.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.loadType">
      <summary>
        <para>LoadType defines how the imported AudioClip data should be loaded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.quality">
      <summary>
        <para>Audio compression quality (0-1)

Amount of compression. The value roughly corresponds to the ratio between the resulting and the source file sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateOverride">
      <summary>
        <para>Target sample rate to convert to when samplerateSetting is set to OverrideSampleRate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateSetting">
      <summary>
        <para>Defines how the sample rate is modified (if at all) of the importer audio file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioSampleRateSetting">
      <summary>
        <para>The sample rate setting used within the AudioImporter. This defines the sample rate conversion of audio on import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.OptimizeSampleRate">
      <summary>
        <para>Let Unity deduce the optimal sample rate for the AudioClip being imported. The audio file will be analysed and a minimal sample rate chosen while still preserving audio quality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.OverrideSampleRate">
      <summary>
        <para>Override the sample rate of the imported audio file with a custom value.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.PreserveSampleRate">
      <summary>
        <para>Do not change the sample rate of the imported audio file. The sample rate will be preserved for the imported AudioClip.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.BuildFailedException">
      <summary>
        <para>An exception class that represents a failed build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildFailedException.#ctor(System.String)">
      <summary>
        <para>Constructs a BuildFailedException object.</para>
      </summary>
      <param name="message">A string of text describing the error that caused the build to fail.</param>
      <param name="innerException">The exception that caused the build to fail.</param>
    </member>
    <member name="M:UnityEditor.Build.BuildFailedException.#ctor(System.Exception)">
      <summary>
        <para>Constructs a BuildFailedException object.</para>
      </summary>
      <param name="message">A string of text describing the error that caused the build to fail.</param>
      <param name="innerException">The exception that caused the build to fail.</param>
    </member>
    <member name="T:UnityEditor.Build.Content.AssetBundleInfo">
      <summary>
        <para>Container for holding asset loading information for an AssetBundle to be built.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetBundleInfo.bundleAssets">
      <summary>
        <para>List of asset loading information for an AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetBundleInfo.bundleName">
      <summary>
        <para>Friendly AssetBundle name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.AssetBundleInfo.#ctor">
      <summary>
        <para>Default constructor for an empty AssetBundleInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.AssetLoadInfo">
      <summary>
        <para>Container for holding preload information for a given serialized Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.address">
      <summary>
        <para>Friendly name used to load the built asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.asset">
      <summary>
        <para>GUID for the given asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.includedObjects">
      <summary>
        <para>List of objects that an asset contains in its source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.referencedObjects">
      <summary>
        <para>List of objects that an asset references.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.AssetLoadInfo.#ctor">
      <summary>
        <para>Default constructor for an empty AssetLoadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildCompression">
      <summary>
        <para>Struct containing settings that control the compression method of content.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultLZ4">
      <summary>
        <para>Returns a BuildCompression struct set with the default values used for Lz4HC compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultLZMA">
      <summary>
        <para>Returns a BuildCompression struct set with the default values used for LZMA compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultUncompressed">
      <summary>
        <para>Returns a BuildCompression struct set with the default values used for uncompressed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildReferenceMap">
      <summary>
        <para>Container for holding information about where objects will be serialized in a build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMapping(System.String,System.Int64,UnityEditor.Build.Content.ObjectIdentifier,System.Boolean)">
      <summary>
        <para>Adds a mapping for a single Object to where it will be serialized out to the build.</para>
      </summary>
      <param name="internalFileName"></param>
      <param name="serializationIndex"></param>
      <param name="objectID"></param>
      <param name="overwrite"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMappings(System.String,UnityEditor.Build.Content.SerializationInfo[])">
      <summary>
        <para>Adds mappings for a set of Objects to where they will be serialized out to the build.</para>
      </summary>
      <param name="internalFileName"></param>
      <param name="objectIDs"></param>
      <param name="overwrite"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMappings(System.String,UnityEditor.Build.Content.SerializationInfo[],System.Boolean)">
      <summary>
        <para>Adds mappings for a set of Objects to where they will be serialized out to the build.</para>
      </summary>
      <param name="internalFileName"></param>
      <param name="objectIDs"></param>
      <param name="overwrite"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.#ctor">
      <summary>
        <para>Default constructor for an empty BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.Dispose">
      <summary>
        <para>Dispose the BuildReferenceMap destroying all internal state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.Equals(System.Object)">
      <summary>
        <para>Returns true if the objects are equal.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.FilterToSubset(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Filters this BuildReferenceMap instance to remove references to any objects that are not in the array of ObjectIdentifiers specified by objectIds.</para>
      </summary>
      <param name="objectIds">The set of desired objects.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetHash128">
      <summary>
        <para>Gets the hash for the BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetHashCode">
      <summary>
        <para>Gets the hash code for the BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>ISerializable method for serialization support outside of Unity's internal serialization system.</para>
      </summary>
      <param name="info"></param>
      <param name="context"></param>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildSettings">
      <summary>
        <para>Struct containing information on how to build content.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.buildFlags">
      <summary>
        <para>Specific build options to use when building content.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.group">
      <summary>
        <para>Platform group for which content will be built.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.target">
      <summary>
        <para>Platform target for which content will be built.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.typeDB">
      <summary>
        <para>Type information to use for building content.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageCache">
      <summary>
        <para>Caching object for the Scriptable Build Pipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageCache.#ctor">
      <summary>
        <para>Default contructor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageCache.Dispose">
      <summary>
        <para>Dispose the BuildUsageCache destroying all internal state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageTagGlobal">
      <summary>
        <para>Container for holding information about lighting information being used in a build.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.Content.BuildUsageTagGlobal.op_BitwiseOr(UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagGlobal)">
      <summary>
        <para>Combines the usage data from another BuildUsageTagGlobal with this BuildUsageTagGlobal.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageTagSet">
      <summary>
        <para>Container for holding information about how objects are being used in a build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.#ctor">
      <summary>
        <para>Default constructor for an empty BuildUsageTagSet.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.Dispose">
      <summary>
        <para>Dispose the BuildUsageTagSet destroying all internal state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.Equals(System.Object)">
      <summary>
        <para>Returns true if the objects are equal.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.FilterToSubset(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Filters this BuildUsageTagSet instance to remove references to any objects that are not in the array of ObjectIdentifiers specified by objectIds.</para>
      </summary>
      <param name="objectIds">The set of desired objects.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetHash128">
      <summary>
        <para>Gets the hash for the BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetHashCode">
      <summary>
        <para>Gets the hash code for the BuildUsageTagSet.</para>
      </summary>
      <returns>
        <para>The hash code of the BuildUsageTagSet.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>ISerializable method for serialization support outside of Unity's internal serialization system.</para>
      </summary>
      <param name="info"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetObjectIdentifiers">
      <summary>
        <para>Returns an array of ObjectIdentifiers that this BuildUsageTagSet contains usage information about.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.UnionWith(UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Adds the Object usage information from another BuildUsageTagSet to this BuildUsageTagSet.</para>
      </summary>
      <param name="other">Object usage information to be added to this BuildUsageTagSet.</param>
    </member>
    <member name="T:UnityEditor.Build.Content.CompressionLevel">
      <summary>
        <para>Enum to indicate if compression should emphasize speed or size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Fast">
      <summary>
        <para>Content should be compressed as fast.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Fastest">
      <summary>
        <para>Content should be compressed as fast as possible.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.High">
      <summary>
        <para>Content should be compressed small.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Maximum">
      <summary>
        <para>Content should be compressed as small as possible.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.None">
      <summary>
        <para>None. Defaults to Normal.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Normal">
      <summary>
        <para>Content should be ballanced between size and speed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.CompressionType">
      <summary>
        <para>Enum containing the types of compression supported for built content.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lz4">
      <summary>
        <para>Chunk-based content compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lz4HC">
      <summary>
        <para>Chunk-based content compression using the high compression variant.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lzma">
      <summary>
        <para>Single stream content compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.None">
      <summary>
        <para>Uncompressed content.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildFlags">
      <summary>
        <para>Build options for content.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.DevelopmentBuild">
      <summary>
        <para>Build a development version of the content files.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.DisableWriteTypeTree">
      <summary>
        <para>Do not include type information within the built content.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.None">
      <summary>
        <para>Build content with no additional options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.StripUnityVersion">
      <summary>
        <para>Build Flag to indicate the Unity Version should not be written to the serialized file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildInterface">
      <summary>
        <para>Low level interface for building content for Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.ArchiveAndCompress(UnityEditor.Build.Content.ResourceFile[],System.String,UnityEngine.BuildCompression)">
      <summary>
        <para>Combines resource files into a single archive and compresses them based on the passed in options.</para>
      </summary>
      <param name="resourceFiles"></param>
      <param name="outputBundlePath"></param>
      <param name="compression"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculateBuildUsageTags(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Calculates the build usage of a set of objects.</para>
      </summary>
      <param name="objectIDs">Objects that will have their build usage calculated.</param>
      <param name="dependentObjectIDs">Objects that reference the Objects being calculated.</param>
      <param name="globalUsage">Lighting information used by the build.</param>
      <param name="usageSet">The BuildUsageTagSet where the calculated usage information will be stored.</param>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculateBuildUsageTags(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Calculates the build usage of a set of objects.</para>
      </summary>
      <param name="objectIDs">Objects that will have their build usage calculated.</param>
      <param name="dependentObjectIDs">Objects that reference the Objects being calculated.</param>
      <param name="globalUsage">Lighting information used by the build.</param>
      <param name="usageSet">The BuildUsageTagSet where the calculated usage information will be stored.</param>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Calculates dependency information for various internal Unity game manager classes.</para>
      </summary>
      <param name="settings">Settings for dependency calculation.</param>
      <param name="globalUsage">Global usage tag for lighting and fog modes in use in the project.</param>
      <param name="usageSet">Output usage tags generated from dependency calculation.</param>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
      <param name="mode">Specifies how to calculate dependencies between internal Unity game managers and game assets.</param>
      <returns>
        <para>The calculated dependencies for internal Unity game manager classes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Calculates dependency information for various internal Unity game manager classes.</para>
      </summary>
      <param name="settings">Settings for dependency calculation.</param>
      <param name="globalUsage">Global usage tag for lighting and fog modes in use in the project.</param>
      <param name="usageSet">Output usage tags generated from dependency calculation.</param>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
      <param name="mode">Specifies how to calculate dependencies between internal Unity game managers and game assets.</param>
      <returns>
        <para>The calculated dependencies for internal Unity game manager classes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache,UnityEditor.Build.Content.DependencyType)">
      <summary>
        <para>Calculates dependency information for various internal Unity game manager classes.</para>
      </summary>
      <param name="settings">Settings for dependency calculation.</param>
      <param name="globalUsage">Global usage tag for lighting and fog modes in use in the project.</param>
      <param name="usageSet">Output usage tags generated from dependency calculation.</param>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
      <param name="mode">Specifies how to calculate dependencies between internal Unity game managers and game assets.</param>
      <returns>
        <para>The calculated dependencies for internal Unity game manager classes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForScene(System.String,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Calculates the Scene dependency information.</para>
      </summary>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
      <param name="scenePath">Input path of the Scene for dependency calculation.</param>
      <param name="settings">Settings for dependency calculation.</param>
      <param name="usageSet">Output usage tags generated from dependency calculation.</param>
      <returns>
        <para>Dependency information for the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForScene(System.String,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Calculates the Scene dependency information.</para>
      </summary>
      <param name="usageCache">Optional cache object to use for improving performance with multiple calls to this api.</param>
      <param name="scenePath">Input path of the Scene for dependency calculation.</param>
      <param name="settings">Settings for dependency calculation.</param>
      <param name="usageSet">Output usage tags generated from dependency calculation.</param>
      <returns>
        <para>Dependency information for the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerSerializationHashForType(System.Type,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Returns a unique hash for a given type's serialized layout.</para>
      </summary>
      <param name="type">The type of the object.</param>
      <param name="typeDB">The user script TypeDB for the player.</param>
      <returns>
        <para>The unique hash for a type's serialized layout.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GenerateAssetBundleBuilds">
      <summary>
        <para>Returns an array of AssetBundleBuild structs that detail the current asset bundle layout set in the AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetGlobalUsageFromGraphicsSettings">
      <summary>
        <para>Returns the global usage information calculated by the Shader Stripping section of Graphics Settings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerAssetRepresentations(UnityEditor.GUID,UnityEditor.BuildTarget)">
      <summary>
        <para>Returns a list of visible objects directly contained inside of an asset.</para>
      </summary>
      <param name="asset"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerDependenciesForObject(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.BuildTarget,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Returns a list of objects referenced by an object.</para>
      </summary>
      <param name="objectID"></param>
      <param name="target"></param>
      <param name="typeDB"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerDependenciesForObjects(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.BuildTarget,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Returns a list of objects referenced by a set of objects.</para>
      </summary>
      <param name="objectIDs"></param>
      <param name="target"></param>
      <param name="typeDB"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInAsset(UnityEditor.GUID,UnityEditor.BuildTarget)">
      <summary>
        <para>Returns a list of objects directly contained inside of an asset.</para>
      </summary>
      <param name="asset"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInSerializedFile(System.String,UnityEditor.BuildTarget)">
      <summary>
        <para>Returns a list of objects directly contained inside of a loose serialized file.</para>
      </summary>
      <param name="filePath"></param>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypeForObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Returns the System.Type of the ObjectIdentifier specified by objectID.</para>
      </summary>
      <param name="objectID">The specific object.</param>
      <returns>
        <para>The type of the object.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypeForObjects(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Returns the System.Type of the ObjectIdentifiers and the referenced SerializeReference class types specified by objectIDs.</para>
      </summary>
      <param name="objectIDs">The specific objects.</param>
      <returns>
        <para>The array of unique types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypesForObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Returns the System.Type of the ObjectIdentifier and the referenced SerializeReference class types specified by objectID.</para>
      </summary>
      <param name="objectID">The specific object.</param>
      <returns>
        <para>The array of unique types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.ObjectIsSupportedInBuild(UnityEngine.Object)">
      <summary>
        <para>Returns True if the passed in target object is a valid runtime object.</para>
      </summary>
      <param name="targetObject"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.StartProfileCapture(UnityEditor.Build.Content.ProfileCaptureOptions)">
      <summary>
        <para>Starts a profile capture to record content build profile events.</para>
      </summary>
      <param name="options">Used to filter captured events.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.StopProfileCapture">
      <summary>
        <para>Returns an array of ContentBuildProfileEvent structs that contain information for each occuring event. Also stops the profile capture.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteGameManagersSerializedFile(System.String,UnityEditor.Build.Content.WriteManagerParameters)">
      <summary>
        <para>Writes the current settings of internal Unity game manager classes to the 'globalgamemanagers' file on disk.</para>
      </summary>
      <param name="outputFolder">The location to write the file to.</param>
      <param name="parameters">The set of parameters used to write the file.</param>
      <returns>
        <para>The detailed results from writing the file.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,UnityEditor.Build.Content.WriteSceneParameters)">
      <summary>
        <para>Writes Scene objects to a serialized file on disk.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="parameters"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="scenePath"></param>
      <param name="processedScene"></param>
      <param name="writeCommand"></param>
      <param name="settings"></param>
      <param name="globalUsage"></param>
      <param name="usageSet"></param>
      <param name="referenceMap"></param>
      <param name="preloadInfo"></param>
      <param name="sceneBundleInfo"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.PreloadInfo)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="scenePath"></param>
      <param name="processedScene"></param>
      <param name="writeCommand"></param>
      <param name="settings"></param>
      <param name="globalUsage"></param>
      <param name="usageSet"></param>
      <param name="referenceMap"></param>
      <param name="preloadInfo"></param>
      <param name="sceneBundleInfo"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.PreloadInfo,UnityEditor.Build.Content.SceneBundleInfo)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="scenePath"></param>
      <param name="processedScene"></param>
      <param name="writeCommand"></param>
      <param name="settings"></param>
      <param name="globalUsage"></param>
      <param name="usageSet"></param>
      <param name="referenceMap"></param>
      <param name="preloadInfo"></param>
      <param name="sceneBundleInfo"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteParameters)">
      <summary>
        <para>Writes objects to a serialized file on disk.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="parameters"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="writeCommand"></param>
      <param name="settings"></param>
      <param name="globalUsage"></param>
      <param name="usageSet"></param>
      <param name="referenceMap"></param>
      <param name="bundleInfo"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.AssetBundleInfo)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="outputFolder"></param>
      <param name="writeCommand"></param>
      <param name="settings"></param>
      <param name="globalUsage"></param>
      <param name="usageSet"></param>
      <param name="referenceMap"></param>
      <param name="bundleInfo"></param>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildProfileEvent">
      <summary>
        <para>Details about a profile event captured using the ContentBuildInterface.BeginProfileCapture and ContentBuildInterface.EndProfileCapture APIs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Metadata">
      <summary>
        <para>Additional metadata associated with the event.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Name">
      <summary>
        <para>Name of the event.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.TimeMicroseconds">
      <summary>
        <para>Time in microseconds that the event has occurred relative to when the profile capture began.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Type">
      <summary>
        <para>Enum used to label the event's type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.DependencyType">
      <summary>
        <para>Dependency calculation flags to control what is returned, and how it operates.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.DefaultDependencies">
      <summary>
        <para>Default mode. Dependencies are calculated recursively, and only valid references are returned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.MissingReferences">
      <summary>
        <para>Object dependencies returned for only missing references.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.RecursiveOperation">
      <summary>
        <para>Depencency calculation is recursive. For each new valid reference discovered during calculation, the dependencies of those references will also be included in the returned results.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.ValidReferences">
      <summary>
        <para>Depencency calculation is not recursive. Only dependencies of the initial passed in set will be returned.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.FileType">
      <summary>
        <para>Enum description of the type of file an object comes from.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.DeprecatedCachedAssetType">
      <summary>
        <para>Object is contained in a very old format. Currently unused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.MetaAssetType">
      <summary>
        <para>Object is contained in the imported asset meta data located in the Library folder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.NonAssetType">
      <summary>
        <para>Object is contained in file not currently tracked by the AssetDatabase.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.SerializedAssetType">
      <summary>
        <para>Object is contained in a standard asset file type located in the Assets folder.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.GameManagerDependencyInfo">
      <summary>
        <para>Contains dependency information for internal Unity game manager classes. Call ContentBuildInterface.WriteGameManagersSerializedFile or ContentBuildInterface.CalculatePlayerDependenciesForGameManagers to get an instance of this class.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.includedTypes">
      <summary>
        <para>The project-wide identifiers for the game manager classes referenced in this collection of dependency information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.managerObjects">
      <summary>
        <para>The project-wide identifiers for the game manager classes referenced in this collection of dependency information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.referencedObjects">
      <summary>
        <para>The project-wide identifiers for any objects referenced by the manager classes in the managerObjects list.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ObjectIdentifier">
      <summary>
        <para>Struct that identifies a specific object project wide.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.filePath">
      <summary>
        <para>The file path on disk that contains this object. (Only used for objects not known by the AssetDatabase).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.fileType">
      <summary>
        <para>Type of file that contains this object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.guid">
      <summary>
        <para>The specific asset that contains this object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.localIdentifierInFile">
      <summary>
        <para>The index of the object inside a serialized file.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.Equals(System.Object)">
      <summary>
        <para>Returns true if the objects are equal.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.GetHashCode">
      <summary>
        <para>Gets the hash code for the ObjectIdentifier.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_Equal(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Returns true if the ObjectIdentifiers are the same.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_GreaterThan(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Returns true if the first ObjectIdentifier is greater than the second ObjectIdentifier.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_LessThan(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Returns true if the first ObjectIdentifier is less than the second ObjectIdentifier.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_NotEqual(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Returns true if the ObjectIdentifiers are different.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToInstanceID(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Tries to return the InstanceID that represents this ObjectIdentifier.</para>
      </summary>
      <param name="objectId"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Tries to find, load, and return the Object that represents this ObjectIdentifier.</para>
      </summary>
      <param name="objectId"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToString">
      <summary>
        <para>Returns a nicely formatted string for this ObjectIdentifier.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.TryGetObjectIdentifier(UnityEngine.Object,UnityEditor.Build.Content.ObjectIdentifier&amp;)">
      <summary>
        <para>Tries to convert a persistent Object into an ObjectIdentifier.</para>
      </summary>
      <param name="targetObject"></param>
      <param name="objectId"></param>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.TryGetObjectIdentifier(System.Int32,UnityEditor.Build.Content.ObjectIdentifier&amp;)">
      <summary>
        <para>Tries to convert a persistent Object into an ObjectIdentifier.</para>
      </summary>
      <param name="targetObject"></param>
      <param name="objectId"></param>
      <param name="instanceID"></param>
    </member>
    <member name="T:UnityEditor.Build.Content.ObjectSerializedInfo">
      <summary>
        <para>Struct containing details about how an object was serialized.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.header">
      <summary>
        <para>Serialized object header information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.rawData">
      <summary>
        <para>Raw byte data of the object if it was serialized seperately from the header.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.serializedObject">
      <summary>
        <para>Object that was serialized.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.PreloadInfo">
      <summary>
        <para>Container for holding a list of preload objects for a Scene to be built.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.PreloadInfo.preloadObjects">
      <summary>
        <para>List of Objects for a serialized Scene that need to be preloaded.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.PreloadInfo.#ctor">
      <summary>
        <para>Default constructor for an empty PreloadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ProfileCaptureOptions">
      <summary>
        <para>Options for filtering captured profile events using the ContentBuildInterface.BeginProfileCapture and ContentBuildInterface.EndProfileCapture APIs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileCaptureOptions.IgnoreShortEvents">
      <summary>
        <para>Use to exclude all captured events that are less than 10 microseconds in duration.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileCaptureOptions.None">
      <summary>
        <para>Use to exclude none of the captured events.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ProfileEventType">
      <summary>
        <para>Options for labelling captured profile events using the ContentBuildInterface.BeginProfileCapture and ContentBuildInterface.EndProfileCapture APIs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.Begin">
      <summary>
        <para>Use to indicate that a task has begun.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.End">
      <summary>
        <para>Use to indicate that a task has ended.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.Info">
      <summary>
        <para>Use to indicate that general information is being reported.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ResourceFile">
      <summary>
        <para>Details about a specific file written by the ContentBuildInterface.WriteSerializedFile or ContentBuildInterface.WriteSceneSerializedFile APIs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.fileAlias">
      <summary>
        <para>Internal name used by the loading system for a resource file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.fileName">
      <summary>
        <para>Path to the resource file on disk.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.serializedFile">
      <summary>
        <para>Bool to determine if this resource file represents serialized Unity objects (serialized file) or binary resource data.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneBundleInfo">
      <summary>
        <para>Container for holding asset loading information for a streamed Scene AssetBundle to be built.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneBundleInfo.bundleName">
      <summary>
        <para>Friendly AssetBundle name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneBundleInfo.bundleScenes">
      <summary>
        <para>List of Scene loading information for an AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SceneBundleInfo.#ctor">
      <summary>
        <para>Default constructor for an empty SceneBundleInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneDependencyInfo">
      <summary>
        <para>Scene dependency information generated from the ContentBuildInterface.PrepareScene API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.globalUsage">
      <summary>
        <para>Lighting information used by the Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.includedTypes">
      <summary>
        <para>Types that are used by scene objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.processedScene">
      <summary>
        <para>Path to the post processed version of the Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.referencedObjects">
      <summary>
        <para>List of objects referenced by the Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.scene">
      <summary>
        <para>Scene's original asset path.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneLoadInfo">
      <summary>
        <para>Container for holding preload information for a given serialized Scene in an AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.address">
      <summary>
        <para>Friendly name used to load the built Scene from an asset bundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.asset">
      <summary>
        <para>GUID for the given Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.internalName">
      <summary>
        <para>Internal name used to load the built Scene from an asset bundle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SceneLoadInfo.#ctor">
      <summary>
        <para>Default constructor for an empty SceneLoadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SerializationInfo">
      <summary>
        <para>Container for holding object serialization order information for a build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializationInfo.serializationIndex">
      <summary>
        <para>Order in which the object will be serialized to disk.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializationInfo.serializationObject">
      <summary>
        <para>Source object to be serialzied to disk.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SerializationInfo.#ctor">
      <summary>
        <para>Default constructor for an empty SerializationInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SerializedLocation">
      <summary>
        <para>Struct containing information about where an object was serialized.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.fileName">
      <summary>
        <para>File path on disk where the object was serialized.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.offset">
      <summary>
        <para>Byte offset for the start of the object's data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.size">
      <summary>
        <para>Size of the object's data.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteCommand">
      <summary>
        <para>Container for holding information about a serialized file to be written.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.fileName">
      <summary>
        <para>Final file name on disk of the serialized file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.internalName">
      <summary>
        <para>Internal name used by the loading system for a serialized file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.serializeObjects">
      <summary>
        <para>List of objects and their order contained inside a serialized file.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.WriteCommand.#ctor">
      <summary>
        <para>Default constructor for an empty WriteCommand.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteManagerParameters">
      <summary>
        <para>Defines the write parameters for the ContentBuildInterface.WriteGameManagersSerializedFile function.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.globalUsage">
      <summary>
        <para>The global lighting information to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.referenceMap">
      <summary>
        <para>The set of external objects that can be referenced by this serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.settings">
      <summary>
        <para>The settings to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteParameters">
      <summary>
        <para>This struct collects all the WriteSerializedFile parameters in to a single place.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.bundleInfo">
      <summary>
        <para>Optional Parameter used when writing a serialized file for an Asset Bundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.globalUsage">
      <summary>
        <para>The global lighting information to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.preloadInfo">
      <summary>
        <para>The set of external object dependencies that need to be loaded when loading the resulting serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.referenceMap">
      <summary>
        <para>The set of external objects that can be referenced by this serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.settings">
      <summary>
        <para>The settings to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.usageSet">
      <summary>
        <para>The the texture, material, mesh, and shader usage tags to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.writeCommand">
      <summary>
        <para>The struct of internal file name, list of objects, and order of objects to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteResult">
      <summary>
        <para>Struct containing the results from the ContentBuildPipeline.WriteSerialziedFile and ContentBuildPipeline.WriteSceneSerialziedFile APIs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.includedSerializeReferenceFQN">
      <summary>
        <para>SerializeReference instances fully qualified name which were included in the serialized file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.includedTypes">
      <summary>
        <para>Types that were included in the serialized file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.resourceFiles">
      <summary>
        <para>Collection of files written by the ContentBuildInterface.WriteSerializedFile or ContentBuildInterface.WriteSceneSerializedFile APIs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.serializedObjects">
      <summary>
        <para>Collection of objects written to the serialized file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteSceneParameters">
      <summary>
        <para>This struct collects all the WriteSceneSerializedFile parameters in to a single place.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.globalUsage">
      <summary>
        <para>The global lighting information to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.preloadInfo">
      <summary>
        <para>The set of external object dependencies that need to be loaded when loading the resulting serialzied file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.referenceMap">
      <summary>
        <para>The set of external objects that can be referenced by this serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.sceneBundleInfo">
      <summary>
        <para>Optional Parameter used when writing a scene serialized file for an Asset Bundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.scenePath">
      <summary>
        <para>The original scene asset path.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.settings">
      <summary>
        <para>The settings to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.usageSet">
      <summary>
        <para>The the texture, material, mesh, and shader usage tags to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.writeCommand">
      <summary>
        <para>The struct of internal file name, list of objects, and order of objects to use when writing the serialized file.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IActiveBuildTargetChanged">
      <summary>
        <para>Implement this interface to receive a callback after the active build platform has changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IActiveBuildTargetChanged.OnActiveBuildTargetChanged(UnityEditor.BuildTarget,UnityEditor.BuildTarget)">
      <summary>
        <para>This function is called automatically when the active build platform has changed.</para>
      </summary>
      <param name="previousTarget">The build target before the change.</param>
      <param name="newTarget">The new active build target.</param>
    </member>
    <member name="?:UnityEditor.Build.IFilterBuildAssemblies">
      <summary>
        <para>Implement this interface to receive a callback to filter assemblies away from the build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IFilterBuildAssemblies.OnFilterAssemblies(UnityEditor.BuildOptions,System.String[])">
      <summary>
        <para>Will be called after building script assemblies, but makes it possible to filter away unwanted scripts to be included.</para>
      </summary>
      <param name="buildOptions">The current build options.</param>
      <param name="assemblies">The list of assemblies that will be included.</param>
      <returns>
        <para>Returns the filtered list of assemblies that are included in the build.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Build.IIl2CppProcessor">
      <summary>
        <para>Implement this interface to receive callbacks related to the running of IL2CPP.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IIl2CppProcessor.OnBeforeConvertRun(UnityEditor.Build.Reporting.BuildReport,UnityEditor.Il2Cpp.Il2CppBuildPipelineData)">
      <summary>
        <para>Performs arbitrary logic before IL2CPP runs, which converts managed assemblies to C++ code.</para>
      </summary>
      <param name="report">The current build report.</param>
      <param name="data">Information about the current run of IL2CPP.</param>
    </member>
    <member name="?:UnityEditor.Build.IOrderedCallback">
      <summary>
        <para>Interface that provides control over callback order.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.IOrderedCallback.callbackOrder">
      <summary>
        <para>Returns the relative callback order for callbacks.  Callbacks with lower values are called before ones with higher values.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IPostBuildPlayerScriptDLLs">
      <summary>
        <para>Implement this interface to receive a callback just after the player scripts have been compiled.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostBuildPlayerScriptDLLs.OnPostBuildPlayerScriptDLLs(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Implement this interface to receive a callback just after the player scripts have been compiled.</para>
      </summary>
      <param name="report">A report containing information about the build, such as its target platform and output path.</param>
    </member>
    <member name="?:UnityEditor.Build.IPostprocessBuild">
      <summary>
        <para>Implement this interface to receive a callback after the build is complete.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostprocessBuild.OnPostprocessBuild(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Implement this function to receive a callback after the build is complete.</para>
      </summary>
      <param name="target"></param>
      <param name="path"></param>
    </member>
    <member name="?:UnityEditor.Build.IPostprocessBuildWithReport">
      <summary>
        <para>Implement this interface to receive a callback after the build is complete.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostprocessBuildWithReport.OnPostprocessBuild(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Implement this function to receive a callback after the build is complete.</para>
      </summary>
      <param name="report">A BuildReport containing information about the build, such as the target platform and output path.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessBuild">
      <summary>
        <para>Implement this interface to receive a callback before the build is started.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessBuild.OnPreprocessBuild(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Implement this function to receive a callback before the build is started.</para>
      </summary>
      <param name="target"></param>
      <param name="path"></param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessBuildWithReport">
      <summary>
        <para>Implement this interface to receive a callback before the build is started.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessBuildWithReport.OnPreprocessBuild(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Implement this function to receive a callback before the build is started.</para>
      </summary>
      <param name="report">A report containing information about the build, such as its target platform and output path.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessComputeShaders">
      <summary>
        <para>Implement this interface to receive a callback before a compute shader is compiled.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessComputeShaders.OnProcessComputeShader(UnityEngine.ComputeShader,System.String,System.Collections.Generic.IList`1&lt;UnityEditor.Rendering.ShaderCompilerData&gt;)">
      <summary>
        <para>Implement this interface to receive a callback before Unity compiles a compute shader kernel into a build.</para>
      </summary>
      <param name="shader">The compute shader that Unity is about to compile.</param>
      <param name="kernelName">The name of the kernel that Unity is about to compile.</param>
      <param name="data">The list of shader variants that Unity is about to compile.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessShaders">
      <summary>
        <para>Implement this interface to receive a callback before a shader is compiled.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessShaders.OnProcessShader(UnityEngine.Shader,UnityEditor.Rendering.ShaderSnippetData,System.Collections.Generic.IList`1&lt;UnityEditor.Rendering.ShaderCompilerData&gt;)">
      <summary>
        <para>Implement this interface to receive a callback before a shader snippet is compiled.</para>
      </summary>
      <param name="shader">Shader that is being compiled.</param>
      <param name="snippet">Details about the specific shader code being compiled.</param>
      <param name="data">List of variants to be compiled for the specific shader code.</param>
    </member>
    <member name="?:UnityEditor.Build.IProcessScene">
      <summary>
        <para>Implement this interface to receive a callback for each Scene during the build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IProcessScene.OnProcessScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Implement this function to receive a callback for each Scene during the build.</para>
      </summary>
      <param name="scene">The current Scene being processed.</param>
    </member>
    <member name="?:UnityEditor.Build.IProcessSceneWithReport">
      <summary>
        <para>Implement this interface to receive a callback for each Scene during the build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IProcessSceneWithReport.OnProcessScene(UnityEngine.SceneManagement.Scene,UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Implement this function to receive a callback for each Scene during the build.</para>
      </summary>
      <param name="scene">The current Scene being processed.</param>
      <param name="report">A report containing information about the current build. When this callback is invoked for Scene loading during Editor playmode, this parameter will be null.</param>
    </member>
    <member name="?:UnityEditor.Build.IUnityLinkerProcessor">
      <summary>
        <para>Implement this interface to receive callbacks related to the running of UnityLinker.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IUnityLinkerProcessor.GenerateAdditionalLinkXmlFile(UnityEditor.Build.Reporting.BuildReport,UnityEditor.UnityLinker.UnityLinkerBuildPipelineData)">
      <summary>
        <para>Generates additional link.xml files for preserving additional types and their members.</para>
      </summary>
      <param name="report">The current built report.</param>
      <param name="data">Information about the current run of UnityLinker.</param>
      <returns>
        <para>The file path to the generated link.xml file. If the path is relative, GenerateAdditionalLinkXmlFile combines it with the working directory to make an absolute path.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.IUnityLinkerProcessor.OnAfterRun(UnityEditor.Build.Reporting.BuildReport,UnityEditor.UnityLinker.UnityLinkerBuildPipelineData)">
      <summary>
        <para>Performs arbitrary logic after UnityLinker has run.</para>
      </summary>
      <param name="report">The current build report.</param>
      <param name="data">Information about the current run of UnityLinker.</param>
    </member>
    <member name="M:UnityEditor.Build.IUnityLinkerProcessor.OnBeforeRun(UnityEditor.Build.Reporting.BuildReport,UnityEditor.UnityLinker.UnityLinkerBuildPipelineData)">
      <summary>
        <para>Performs arbitrary logic before UnityLinker runs.</para>
      </summary>
      <param name="report">The current build report.</param>
      <param name="data">Information about the current run of UnityLinker.</param>
    </member>
    <member name="T:UnityEditor.Build.Player.PlayerBuildInterface">
      <summary>
        <para>Low level interface for building scripts for Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.PlayerBuildInterface.CompilePlayerScripts(UnityEditor.Build.Player.ScriptCompilationSettings,System.String)">
      <summary>
        <para>Compiles user scripts into one or more assemblies.</para>
      </summary>
      <param name="input"></param>
      <param name="outputFolder"></param>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationOptions">
      <summary>
        <para>Script compilation options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.Assertions">
      <summary>
        <para>Include assertions in the compiled scripts. By default, the assertions are only included in development builds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.DevelopmentBuild">
      <summary>
        <para>Build a development version of the scripts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.None">
      <summary>
        <para>Compiled the scripts without any special settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationResult">
      <summary>
        <para>Struct with result information returned from the PlayerBuildInterface.CompilePlayerScripts API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationResult.assemblies">
      <summary>
        <para>Collection of assemblies compiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationResult.typeDB">
      <summary>
        <para>Type information generated by the script compilation call.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationSettings">
      <summary>
        <para>Struct containing information on how to build scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.extraScriptingDefines">
      <summary>
        <para>User-specified preprocessor defines used while compiling assemblies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.group">
      <summary>
        <para>Platform group for which scripts will be compiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.options">
      <summary>
        <para>Specific compiler options to use when compiling scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.target">
      <summary>
        <para>Platform group for which scripts will be compiled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.TypeDB">
      <summary>
        <para>Container for holding information about script type and property data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.Dispose">
      <summary>
        <para>Dispose the TypeDB destroying all internal state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.Equals(System.Object)">
      <summary>
        <para>Returns true if the objects are equal.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetHash128">
      <summary>
        <para>Gets the hash for the BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetHashCode">
      <summary>
        <para>Gets the hash code for the TypeDB.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>ISerializable method for serialization support outside of Unity's internal serialization system.</para>
      </summary>
      <param name="info"></param>
      <param name="context"></param>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildFile">
      <summary>
        <para>Contains information about a single file produced by the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.id">
      <summary>
        <para>The unique indentifier of the build file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.path">
      <summary>
        <para>The absolute path of the file produced by the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.role">
      <summary>
        <para>The role the file plays in the build output.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.size">
      <summary>
        <para>The total size of the file, in bytes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildReport">
      <summary>
        <para>The BuildReport API gives you information about the Unity build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.files">
      <summary>
        <para>An array of all the files output by the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.packedAssets">
      <summary>
        <para>An array of all the PackedAssets generated by the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.scenesUsingAssets">
      <summary>
        <para>An optional array of ScenesUsingAssets generated by the build process if BuildOptions.DetailedBuildReport was used during the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.steps">
      <summary>
        <para>An array of all the BuildSteps that took place during the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.strippingInfo">
      <summary>
        <para>The StrippingInfo object for the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.summary">
      <summary>
        <para>A BuildSummary containing overall statistics and data about the build process.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildResult">
      <summary>
        <para>Describes the outcome of the build process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Cancelled">
      <summary>
        <para>Indicates that the build was cancelled by the user.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Failed">
      <summary>
        <para>Indicates that the build failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Succeeded">
      <summary>
        <para>Indicates that the build completed successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Unknown">
      <summary>
        <para>Indicates that the outcome of the build is in an unknown state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildStep">
      <summary>
        <para>Contains information about a single step in the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.depth">
      <summary>
        <para>The nesting depth of the build step.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.duration">
      <summary>
        <para>The total duration for this build step.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.messages">
      <summary>
        <para>All log messages recorded during this build step, in the order of which they occurred.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.name">
      <summary>
        <para>The name of this build step.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildStepMessage">
      <summary>
        <para>Contains information about a single log message recorded during the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStepMessage.content">
      <summary>
        <para>The text content of the log message.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStepMessage.type">
      <summary>
        <para>The LogType of the log message.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildSummary">
      <summary>
        <para>Contains overall summary information about a build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.buildEndedAt">
      <summary>
        <para>The time the build ended.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.buildStartedAt">
      <summary>
        <para>The time the build was started.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.guid">
      <summary>
        <para>The Application.buildGUID of the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.options">
      <summary>
        <para>The BuildOptions used for the build, as passed to BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.outputPath">
      <summary>
        <para>The output path for the build, as provided to BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.platform">
      <summary>
        <para>The platform that the build was created for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.platformGroup">
      <summary>
        <para>The platform group the build was created for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.result">
      <summary>
        <para>The outcome of the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalErrors">
      <summary>
        <para>The total number of errors and exceptions recorded during the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalSize">
      <summary>
        <para>The total size of the build output, in bytes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalTime">
      <summary>
        <para>The total time taken by the build process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalWarnings">
      <summary>
        <para>The total number of warnings recorded during the build process.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.CommonRoles">
      <summary>
        <para>This class provides constant values for some of the common roles used by files in the build. The role of each file in the build is available in BuildFile.role.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.appInfo">
      <summary>
        <para>The BuildFile.role value of the file that provides config information used in Low Integrity mode on Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.assetBundle">
      <summary>
        <para>The BuildFile.role value of built AssetBundle files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.assetBundleTextManifest">
      <summary>
        <para>The BuildFile.role value of an AssetBundle manifest file, produced during the build process, that contains information about the bundle and its dependencies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.bootConfig">
      <summary>
        <para>The BuildFile.role value of the file that contains configuration information for the very early stages of engine startup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.builtInResources">
      <summary>
        <para>The BuildFile.role value of the file that contains built-in resources for the engine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.builtInShaders">
      <summary>
        <para>The BuildFile.role value of the file that contains Unity's built-in shaders, such as the Standard shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.crashHandler">
      <summary>
        <para>The BuildFile.role value of the executable that is used to capture crashes from the player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.debugInfo">
      <summary>
        <para>The BuildFile.role value of files that contain information for debuggers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.dependentManagedLibrary">
      <summary>
        <para>The BuildFile.role value of a managed library that is present in the build due to being a dependency of a CommonRoles.managedLibrary.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.engineLibrary">
      <summary>
        <para>The BuildFile.role value of the main Unity runtime when it is built as a separate library.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.executable">
      <summary>
        <para>The BuildFile.role value of an executable - the file that will actually be launched on the target device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.globalGameManagers">
      <summary>
        <para>The BuildFile.role value of the file that contains global Project Settings data for the player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.managedEngineApi">
      <summary>
        <para>The BuildFile.role value of files that provide the managed API for Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.managedLibrary">
      <summary>
        <para>The BuildFile.role value of a managed assembly, containing compiled script code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.manifestAssetBundle">
      <summary>
        <para>The BuildFile.role value of a manifest AssetBundle, which is an AssetBundle that contains information about other AssetBundles and their dependencies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.monoConfig">
      <summary>
        <para>The BuildFile.role value of files that are used as configuration data by the Mono runtime.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.monoRuntime">
      <summary>
        <para>The BuildFile.role value of files that make up the Mono runtime itself.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.resourcesFile">
      <summary>
        <para>The BuildFile.role value of the file that contains the contents of the project's "Resources" folder, packed into a single file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.scene">
      <summary>
        <para>The BuildFile.role value of a file that contains the packed content of a Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.sharedAssets">
      <summary>
        <para>The BuildFile.role value of a file that contains asset objects which are shared between Scenes. Examples of asset objects are textures, models, and audio.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.streamingAsset">
      <summary>
        <para>The BuildFile.role value of files that have been copied into the build without modification from the StreamingAssets folder in the project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.streamingResourceFile">
      <summary>
        <para>The BuildFile.role value of a file that contains streaming resource data.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.PackedAssetInfo">
      <summary>
        <para>Contains information about a single packed Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.id">
      <summary>
        <para>The unique identifier of the packed Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.offset">
      <summary>
        <para>The offset in a PackedAssets file that indicates the beginning of the packed Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.packedSize">
      <summary>
        <para>The size of the packed Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.sourceAssetGUID">
      <summary>
        <para>The Global Unique Identifier (GUID) of the source Asset that the build process used to generate the packed Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.sourceAssetPath">
      <summary>
        <para>The file path to the source Asset that the build process used to generate the package Asset, relative to the Project directory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.type">
      <summary>
        <para>The type of source Asset that the build process used to generate the package Asset, such as image, Mesh or audio types.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.PackedAssets">
      <summary>
        <para>An extension to the BuildReport class that tracks how Assets contribute to the size of the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.contents">
      <summary>
        <para>An array of PackedAssetInfo objects that holds information about the Assets that are included in the PackedAssets bundle, such as packed Asset size and type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.file">
      <summary>
        <para>The identifier of the BuildFile that holds the contents of the packed Asset file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.overhead">
      <summary>
        <para>The header size of the packed Asset file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.shortPath">
      <summary>
        <para>The file path to the Asset package, relative to the Data folder of the build.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.ScenesUsingAsset">
      <summary>
        <para>Contains information about which scenes in a build have references to an Asset in the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAsset.assetPath">
      <summary>
        <para>The asset path.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAsset.scenePaths">
      <summary>
        <para>The list of scenes in the build referring to the asset, identified by a string containing the scene index in the BuildPlayerOptions.scenes list, as well as the scene path.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.ScenesUsingAssets">
      <summary>
        <para>An extension to the BuildReport class that tracks which scenes in the build have references to a specific asset in the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAssets.list">
      <summary>
        <para>An array of ScenesUsingAsset that holds information about the Assets that are included in the build.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.StrippingInfo">
      <summary>
        <para>The StrippingInfo object contains information about which native code modules in the engine are still present in the build, and the reasons why they are still present.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.StrippingInfo.includedModules">
      <summary>
        <para>The native engine modules that were included in the build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Reporting.StrippingInfo.GetReasonsForIncluding(System.String)">
      <summary>
        <para>Returns the list of dependencies or reasons that caused the given entity to be included in the build.</para>
      </summary>
      <param name="entityName">The name of an engine module, class, or other entity present in the build.</param>
      <returns>
        <para>A list of modules, classes, or other entities that caused the provided entity to be included in the build.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.BuildAssetBundleOptions">
      <summary>
        <para>Asset Bundle building options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.AppendHashToAssetBundleName">
      <summary>
        <para>Append the hash to the assetBundle name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.AssetBundleStripUnityVersion">
      <summary>
        <para>Removes the Unity Version number in the Archive File &amp; Serialized File headers during the build.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.ChunkBasedCompression">
      <summary>
        <para>Use chunk-based LZ4 compression when creating the AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.CollectDependencies">
      <summary>
        <para>Includes all dependencies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.CompleteAssets">
      <summary>
        <para>Forces inclusion of the entire asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DeterministicAssetBundle">
      <summary>
        <para>Builds an asset bundle using a hash for the id of the object stored in the asset bundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableLoadAssetByFileName">
      <summary>
        <para>Disables Asset Bundle LoadAsset by file name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableLoadAssetByFileNameWithExtension">
      <summary>
        <para>Disables Asset Bundle LoadAsset by file name with extension.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableWriteTypeTree">
      <summary>
        <para>Do not include type information within the AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DryRunBuild">
      <summary>
        <para>Do a dry run build.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.ForceRebuildAssetBundle">
      <summary>
        <para>Force rebuild the assetBundles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.IgnoreTypeTreeChanges">
      <summary>
        <para>Ignore the type tree changes when doing the incremental build check.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.None">
      <summary>
        <para>Build assetBundle without any special option.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.StrictMode">
      <summary>
        <para>Do not allow the build to succeed if any errors are reporting during it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.UncompressedAssetBundle">
      <summary>
        <para>Don't compress the data when creating the asset bundle.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildOptions">
      <summary>
        <para>Building options. Multiple options can be combined together.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AcceptExternalModificationsToPlayer">
      <summary>
        <para>Used when building Xcode (iOS) or Eclipse (Android) projects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AllowDebugging">
      <summary>
        <para>Allow script debuggers to attach to the player remotely.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AutoRunPlayer">
      <summary>
        <para>Run the built player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.BuildAdditionalStreamedScenes">
      <summary>
        <para>Build a compressed asset bundle that contains streamed Scenes loadable with the UnityWebRequest class.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.BuildScriptsOnly">
      <summary>
        <para>Only build the scripts in a Project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CompressWithLz4">
      <summary>
        <para>Use chunk-based LZ4 compression when building the Player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CompressWithLz4HC">
      <summary>
        <para>Use chunk-based LZ4 high-compression when building the Player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ConnectToHost">
      <summary>
        <para>Sets the Player to connect to the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ConnectWithProfiler">
      <summary>
        <para>Start the player with a connection to the profiler in the editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.DetailedBuildReport">
      <summary>
        <para>Generates more information in the BuildReport.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.Development">
      <summary>
        <para>Build a development version of the player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableCodeCoverage">
      <summary>
        <para>Enables code coverage. You can use this as a complimentary way of enabling code coverage on platforms that do not support command line arguments.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableDeepProfilingSupport">
      <summary>
        <para>Enables Deep Profiling support in the player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableHeadlessMode">
      <summary>
        <para>Options for building the standalone player in headless mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ForceEnableAssertions">
      <summary>
        <para>Include assertions in the build. By default, the assertions are only included in development builds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ForceOptimizeScriptCompilation">
      <summary>
        <para>Force full optimizations for script compilation in Development builds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.IncludeTestAssemblies">
      <summary>
        <para>Build will include Assemblies for testing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.None">
      <summary>
        <para>Perform the specified build without any special settings or extra tasks.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.NoUniqueIdentifier">
      <summary>
        <para>Will force the buildGUID to all zeros.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.PatchPackage">
      <summary>
        <para>Patch a Development app package rather than completely rebuilding it.

Supported platforms:</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ShaderLivelinkSupport">
      <summary>
        <para>Enable Shader Livelink support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ShowBuiltPlayer">
      <summary>
        <para>Show the built player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.StrictMode">
      <summary>
        <para>Do not allow the build to succeed if any errors are reporting during it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.SymlinkLibraries">
      <summary>
        <para>Symlink runtime libraries when generating iOS Xcode project. (Faster iteration time).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.UncompressedAssetBundle">
      <summary>
        <para>Don't compress the data when creating the asset bundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.WaitForPlayerConnection">
      <summary>
        <para>Sets the Player to wait for player connection on player start.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.WebPlayerOfflineDeployment">
      <summary>
        <para>Copy UnityObject.js alongside Web Player so it wouldn't have to be downloaded from internet.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPipeline">
      <summary>
        <para>Lets you programmatically build players or AssetBundles which can be loaded from the web.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPipeline.isBuildingPlayer">
      <summary>
        <para>Is a player currently being built?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Builds an asset bundle.</para>
      </summary>
      <param name="mainAsset">Lets you specify a specific object that can be conveniently retrieved using AssetBundle.mainAsset.</param>
      <param name="assets">An array of assets to write into the bundle.</param>
      <param name="pathName">The filename where to write the compressed asset bundle.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform to build the bundle for.</param>
      <param name="crc">The optional crc output parameter can be used to get a CRC checksum for the generated AssetBundle, which can be used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Builds an asset bundle.</para>
      </summary>
      <param name="mainAsset">Lets you specify a specific object that can be conveniently retrieved using AssetBundle.mainAsset.</param>
      <param name="assets">An array of assets to write into the bundle.</param>
      <param name="pathName">The filename where to write the compressed asset bundle.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform to build the bundle for.</param>
      <param name="crc">The optional crc output parameter can be used to get a CRC checksum for the generated AssetBundle, which can be used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Builds an asset bundle.</para>
      </summary>
      <param name="mainAsset">Lets you specify a specific object that can be conveniently retrieved using AssetBundle.mainAsset.</param>
      <param name="assets">An array of assets to write into the bundle.</param>
      <param name="pathName">The filename where to write the compressed asset bundle.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform to build the bundle for.</param>
      <param name="crc">The optional crc output parameter can be used to get a CRC checksum for the generated AssetBundle, which can be used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Builds an asset bundle.</para>
      </summary>
      <param name="mainAsset">Lets you specify a specific object that can be conveniently retrieved using AssetBundle.mainAsset.</param>
      <param name="assets">An array of assets to write into the bundle.</param>
      <param name="pathName">The filename where to write the compressed asset bundle.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform to build the bundle for.</param>
      <param name="crc">The optional crc output parameter can be used to get a CRC checksum for the generated AssetBundle, which can be used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Builds an asset bundle.</para>
      </summary>
      <param name="mainAsset">Lets you specify a specific object that can be conveniently retrieved using AssetBundle.mainAsset.</param>
      <param name="assets">An array of assets to write into the bundle.</param>
      <param name="pathName">The filename where to write the compressed asset bundle.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform to build the bundle for.</param>
      <param name="crc">The optional crc output parameter can be used to get a CRC checksum for the generated AssetBundle, which can be used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,System.UInt32&amp;,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Builds an asset bundle.</para>
      </summary>
      <param name="mainAsset">Lets you specify a specific object that can be conveniently retrieved using AssetBundle.mainAsset.</param>
      <param name="assets">An array of assets to write into the bundle.</param>
      <param name="pathName">The filename where to write the compressed asset bundle.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform to build the bundle for.</param>
      <param name="crc">The optional crc output parameter can be used to get a CRC checksum for the generated AssetBundle, which can be used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Builds an asset bundle, with custom names for the assets.</para>
      </summary>
      <param name="assets">A collection of assets to be built into the asset bundle. Asset bundles can contain any asset found in the project folder.</param>
      <param name="assetNames">An array of strings of the same size as the number of assets.
These will be used as asset names, which you can then pass to AssetBundle.Load to load a specific asset. Use BuildAssetBundle to just use the asset's path names instead.</param>
      <param name="pathName">The location where the compressed asset bundle will be written to.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform where the asset bundle will be used.</param>
      <param name="crc">An optional output parameter used to get a CRC checksum for the generated AssetBundle. (Used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Builds an asset bundle, with custom names for the assets.</para>
      </summary>
      <param name="assets">A collection of assets to be built into the asset bundle. Asset bundles can contain any asset found in the project folder.</param>
      <param name="assetNames">An array of strings of the same size as the number of assets.
These will be used as asset names, which you can then pass to AssetBundle.Load to load a specific asset. Use BuildAssetBundle to just use the asset's path names instead.</param>
      <param name="pathName">The location where the compressed asset bundle will be written to.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform where the asset bundle will be used.</param>
      <param name="crc">An optional output parameter used to get a CRC checksum for the generated AssetBundle. (Used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Builds an asset bundle, with custom names for the assets.</para>
      </summary>
      <param name="assets">A collection of assets to be built into the asset bundle. Asset bundles can contain any asset found in the project folder.</param>
      <param name="assetNames">An array of strings of the same size as the number of assets.
These will be used as asset names, which you can then pass to AssetBundle.Load to load a specific asset. Use BuildAssetBundle to just use the asset's path names instead.</param>
      <param name="pathName">The location where the compressed asset bundle will be written to.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform where the asset bundle will be used.</param>
      <param name="crc">An optional output parameter used to get a CRC checksum for the generated AssetBundle. (Used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Builds an asset bundle, with custom names for the assets.</para>
      </summary>
      <param name="assets">A collection of assets to be built into the asset bundle. Asset bundles can contain any asset found in the project folder.</param>
      <param name="assetNames">An array of strings of the same size as the number of assets.
These will be used as asset names, which you can then pass to AssetBundle.Load to load a specific asset. Use BuildAssetBundle to just use the asset's path names instead.</param>
      <param name="pathName">The location where the compressed asset bundle will be written to.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform where the asset bundle will be used.</param>
      <param name="crc">An optional output parameter used to get a CRC checksum for the generated AssetBundle. (Used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Builds an asset bundle, with custom names for the assets.</para>
      </summary>
      <param name="assets">A collection of assets to be built into the asset bundle. Asset bundles can contain any asset found in the project folder.</param>
      <param name="assetNames">An array of strings of the same size as the number of assets.
These will be used as asset names, which you can then pass to AssetBundle.Load to load a specific asset. Use BuildAssetBundle to just use the asset's path names instead.</param>
      <param name="pathName">The location where the compressed asset bundle will be written to.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform where the asset bundle will be used.</param>
      <param name="crc">An optional output parameter used to get a CRC checksum for the generated AssetBundle. (Used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,System.UInt32&amp;,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Builds an asset bundle, with custom names for the assets.</para>
      </summary>
      <param name="assets">A collection of assets to be built into the asset bundle. Asset bundles can contain any asset found in the project folder.</param>
      <param name="assetNames">An array of strings of the same size as the number of assets.
These will be used as asset names, which you can then pass to AssetBundle.Load to load a specific asset. Use BuildAssetBundle to just use the asset's path names instead.</param>
      <param name="pathName">The location where the compressed asset bundle will be written to.</param>
      <param name="assetBundleOptions">Automatically include dependencies or always include complete assets instead of just the exact referenced objects.</param>
      <param name="targetPlatform">The platform where the asset bundle will be used.</param>
      <param name="crc">An optional output parameter used to get a CRC checksum for the generated AssetBundle. (Used to verify content when downloading AssetBundles using UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Build all AssetBundles specified in the editor.</para>
      </summary>
      <param name="outputPath">Output path for the AssetBundles.</param>
      <param name="assetBundleOptions">AssetBundle building options.</param>
      <param name="targetPlatform">Chosen target build platform.</param>
      <returns>
        <para>The manifest listing all AssetBundles included in this build.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Build AssetBundles from a building map.</para>
      </summary>
      <param name="outputPath">Output path for the AssetBundles.</param>
      <param name="builds">AssetBundle building map.</param>
      <param name="assetBundleOptions">AssetBundle building options.</param>
      <param name="targetPlatform">Target build platform.</param>
      <returns>
        <para>The manifest listing all AssetBundles included in this build.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildCanBeAppended(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Checks if Unity can append the build.</para>
      </summary>
      <param name="target">The BuildTarget to build.</param>
      <param name="location">The path where Unity builds the application.</param>
      <returns>
        <para>Returns a UnityEditor.CanAppendBuild enum that indicates whether Unity can append the build.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Builds a player.</para>
      </summary>
      <param name="buildPlayerOptions">Provide various options to control the behavior of BuildPipeline.BuildPlayer.</param>
      <returns>
        <para>A BuildReport giving build process information.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Builds a player. These overloads are still supported, but will be replaced. Please use BuildPlayer (BuildPlayerOptions buildPlayerOptions)  instead.</para>
      </summary>
      <param name="scenes">The Scenes to include in the build. If empty, the build only includes the currently open Scene. Paths are relative to the project folder (AssetsMyLevelsMyScene.unity).</param>
      <param name="locationPathName">The path where the application will be built.</param>
      <param name="target">The BuildTarget to build.</param>
      <param name="options">Additional BuildOptions, like whether to run the built player.</param>
      <param name="levels"></param>
      <returns>
        <para>An error message if an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.EditorBuildSettingsScene[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Builds a player. These overloads are still supported, but will be replaced. Please use BuildPlayer (BuildPlayerOptions buildPlayerOptions)  instead.</para>
      </summary>
      <param name="scenes">The Scenes to include in the build. If empty, the build only includes the currently open Scene. Paths are relative to the project folder (AssetsMyLevelsMyScene.unity).</param>
      <param name="locationPathName">The path where the application will be built.</param>
      <param name="target">The BuildTarget to build.</param>
      <param name="options">Additional BuildOptions, like whether to run the built player.</param>
      <param name="levels"></param>
      <returns>
        <para>An error message if an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget)">
      <summary>
        <para>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</para>
      </summary>
      <param name="levels">Pathnames of levels to include in the asset bundle.</param>
      <param name="locationPath">Pathname for the output asset bundle.</param>
      <param name="target">Runtime platform on which the asset bundle will be used.</param>
      <param name="crc">Output parameter to receive CRC checksum of generated assetbundle.</param>
      <param name="options">Build options. See BuildOptions for possible values.</param>
      <returns>
        <para>String with an error message, empty on success.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&amp;)">
      <summary>
        <para>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</para>
      </summary>
      <param name="levels">Pathnames of levels to include in the asset bundle.</param>
      <param name="locationPath">Pathname for the output asset bundle.</param>
      <param name="target">Runtime platform on which the asset bundle will be used.</param>
      <param name="crc">Output parameter to receive CRC checksum of generated assetbundle.</param>
      <param name="options">Build options. See BuildOptions for possible values.</param>
      <returns>
        <para>String with an error message, empty on success.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</para>
      </summary>
      <param name="levels">Pathnames of levels to include in the asset bundle.</param>
      <param name="locationPath">Pathname for the output asset bundle.</param>
      <param name="target">Runtime platform on which the asset bundle will be used.</param>
      <param name="crc">Output parameter to receive CRC checksum of generated assetbundle.</param>
      <param name="options">Build options. See BuildOptions for possible values.</param>
      <returns>
        <para>String with an error message, empty on success.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&amp;,UnityEditor.BuildOptions)">
      <summary>
        <para>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</para>
      </summary>
      <param name="levels">Pathnames of levels to include in the asset bundle.</param>
      <param name="locationPath">Pathname for the output asset bundle.</param>
      <param name="target">Runtime platform on which the asset bundle will be used.</param>
      <param name="crc">Output parameter to receive CRC checksum of generated assetbundle.</param>
      <param name="options">Build options. See BuildOptions for possible values.</param>
      <returns>
        <para>String with an error message, empty on success.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetBuildTargetName(UnityEditor.BuildTarget)">
      <summary>
        <para>Given a BuildTarget will return the well known string representation for the build target platform.</para>
      </summary>
      <param name="targetPlatform">An instance of the BuildTarget enum.</param>
      <returns>
        <para>Target platform name represented by the passed in BuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetCRCForAssetBundle(System.String,System.UInt32&amp;)">
      <summary>
        <para>Extract the crc checksum for the given AssetBundle.</para>
      </summary>
      <param name="targetPath"></param>
      <param name="crc"></param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetHashForAssetBundle(System.String,UnityEngine.Hash128&amp;)">
      <summary>
        <para>Extract the hash for the given AssetBundle.</para>
      </summary>
      <param name="targetPath"></param>
      <param name="hash"></param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Returns the path of a player directory. For ex., Editor\Data\PlaybackEngines\AndroidPlayer.

In some cases the player directory path can be affected by BuildOptions.Development.</para>
      </summary>
      <param name="target">Build target.</param>
      <param name="options">Build options.</param>
      <param name="buildTargetGroup">Build target group.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Returns the path of a player directory. For ex., Editor\Data\PlaybackEngines\AndroidPlayer.

In some cases the player directory path can be affected by BuildOptions.Development.</para>
      </summary>
      <param name="target">Build target.</param>
      <param name="options">Build options.</param>
      <param name="buildTargetGroup">Build target group.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlayerConnectionInitiateMode(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Returns the mode currently used by players to initiate a connect to the host.</para>
      </summary>
      <param name="targetPlatform"></param>
      <param name="buildOptions"></param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.IsBuildTargetSupported(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Returns true if the specified build target is currently available in the Editor.</para>
      </summary>
      <param name="buildTargetGroup">build target group</param>
      <param name="target">build target</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.PopAssetDependencies">
      <summary>
        <para>Lets you manage cross-references and dependencies between different asset bundles and player builds.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.PushAssetDependencies">
      <summary>
        <para>Lets you manage cross-references and dependencies between different asset bundles and player builds.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.WriteBootConfig(System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Writes out a "boot.config" file that contains configuration information for the very early stages of engine startup.</para>
      </summary>
      <param name="outputFile">The location to write the file to.</param>
      <param name="target">The platform to target for this build.</param>
      <param name="options">Options for this build.</param>
    </member>
    <member name="T:UnityEditor.BuildPlayerOptions">
      <summary>
        <para>Provide various options to control the behavior of BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.assetBundleManifestPath">
      <summary>
        <para>The path to an manifest file describing all of the asset bundles used in the build (optional).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.extraScriptingDefines">
      <summary>
        <para>User-specified preprocessor defines used while compiling assemblies for the player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.locationPathName">
      <summary>
        <para>The path where the application will be built.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.options">
      <summary>
        <para>Additional BuildOptions, like whether to run the built player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.scenes">
      <summary>
        <para>The Scenes to be included in the build. If empty, the currently open Scene will be built. Paths are relative to the project folder (AssetsMyLevelsMyScene.unity).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.target">
      <summary>
        <para>The BuildTarget to build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.targetGroup">
      <summary>
        <para>The BuildTargetGroup to build.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow">
      <summary>
        <para>The default build settings window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow.BuildMethodException">
      <summary>
        <para>Exceptions used to indicate abort or failure in the callbacks registered via BuildPlayerWindow.RegisterBuildPlayerHandler and BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.BuildMethodException.#ctor">
      <summary>
        <para>Create a new BuildMethodException.</para>
      </summary>
      <param name="message">Display this message as an error in the editor log.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.BuildMethodException.#ctor(System.String)">
      <summary>
        <para>Create a new BuildMethodException.</para>
      </summary>
      <param name="message">Display this message as an error in the editor log.</param>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow.DefaultBuildMethods">
      <summary>
        <para>Default build methods for the BuildPlayerWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.DefaultBuildMethods.BuildPlayer(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>The built-in, default handler for executing a player build. Can be used to provide default functionality in a custom build player window.</para>
      </summary>
      <param name="options">The options to build with.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>The built-in, default handler for calculating build player options. Can be used to provide default functionality in a custom build player window.</para>
      </summary>
      <param name="defaultBuildPlayerOptions">Default options.</param>
      <returns>
        <para>The calculated BuildPlayerOptions.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.RegisterBuildPlayerHandler(System.Action`1&lt;UnityEditor.BuildPlayerOptions&gt;)">
      <summary>
        <para>Register a delegate to intercept or override the build process executed with the "Build" and "Build and Run" buttons. Registering a null value will restore default behavior, which is the equivalent of calling BuildPlayerWindow.DefaultBuildMethods.BuildPlayer.</para>
      </summary>
      <param name="func">Delegate System.Action that takes a BuildPipeline.BuildPlayerOptions parameter.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler(System.Func`2&lt;UnityEditor.BuildPlayerOptions,UnityEditor.BuildPlayerOptions&gt;)">
      <summary>
        <para>Register a delegate method to calculate BuildPlayerOptions that are passed to the build player handler. Registering a null value will restore default behavior, which is the equivalent of calling BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions.</para>
      </summary>
      <param name="func">Delegate System.Func that takes a BuildPlayerOptions parameter. The value passed into the delegate will represent default options. The return value will be passed to the default build player handler, or to a custom handler set with BuildPlayerWindow.RegisterBuildPlayerHandler.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.ShowBuildPlayerWindow">
      <summary>
        <para>Open the build settings window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildTarget">
      <summary>
        <para>Target build platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.iOS">
      <summary>
        <para>Build an iOS player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.iPhone">
      <summary>
        <para>OBSOLETE: Use iOS. Build an iOS player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.tvOS">
      <summary>
        <para>Build to Apple's tvOS platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Android">
      <summary>
        <para>Build an Android .apk standalone app.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.CloudRendering">
      <summary>
        <para>Build a CloudRendering standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.N3DS">
      <summary>
        <para>Build to Nintendo 3DS platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.PS4">
      <summary>
        <para>Build a PS4 Standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.PS5">
      <summary>
        <para>Build to PlayStation 5 platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Stadia">
      <summary>
        <para>Build a Stadia standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinux">
      <summary>
        <para>Build a Linux standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinux64">
      <summary>
        <para>Build a Linux 64-bit standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinuxUniversal">
      <summary>
        <para>Build a Linux universal standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSX">
      <summary>
        <para>Build a macOS standalone (Intel 64-bit).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSXIntel">
      <summary>
        <para>Build a macOS Intel 32-bit standalone. (This build target is deprecated)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSXIntel64">
      <summary>
        <para>Build a macOS Intel 64-bit standalone. (This build target is deprecated)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneWindows">
      <summary>
        <para>Build a Windows standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneWindows64">
      <summary>
        <para>Build a Windows 64-bit standalone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Switch">
      <summary>
        <para>Build a Nintendo Switch player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebGL">
      <summary>
        <para>WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebPlayer">
      <summary>
        <para>Build a web player. (This build target is deprecated. Building for web player will no longer be supported in future versions of Unity.)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebPlayerStreamed">
      <summary>
        <para>Build a streamed web player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WSAPlayer">
      <summary>
        <para>Build an Windows Store Apps player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.XboxOne">
      <summary>
        <para>Build a Xbox One Standalone.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildTargetGroup">
      <summary>
        <para>Build target group.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.iOS">
      <summary>
        <para>Apple iOS target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.iPhone">
      <summary>
        <para>OBSOLETE: Use iOS. Apple iOS target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.tvOS">
      <summary>
        <para>Apple's tvOS target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Android">
      <summary>
        <para>Android target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.CloudRendering">
      <summary>
        <para>CloudRendering target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.N3DS">
      <summary>
        <para>Nintendo 3DS target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.PS4">
      <summary>
        <para>Sony Playstation 4 target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.PS5">
      <summary>
        <para>Sony Playstation 5 target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Stadia">
      <summary>
        <para>Google Stadia target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Standalone">
      <summary>
        <para>PC, Mac &amp; Linux standalone target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Switch">
      <summary>
        <para>Nintendo Switch target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Unknown">
      <summary>
        <para>Unknown target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WebGL">
      <summary>
        <para>WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WebPlayer">
      <summary>
        <para>Mac/PC webplayer target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WSA">
      <summary>
        <para>Windows Store Apps target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.XboxOne">
      <summary>
        <para>Microsoft Xbox One target.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerMode">
      <summary>
        <para>Selects the cache server configuration mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.AsPreferences">
      <summary>
        <para>Use this if you want to use the global cache server settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.Disabled">
      <summary>
        <para>Use this if you want to disable the use of cache server for the project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.Enabled">
      <summary>
        <para>Use this if you want to enable use of the project specific cache server settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CallbackOrderAttribute">
      <summary>
        <para>Base class for Attributes that require a callback index.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.DidReloadScripts">
      <summary>
        <para>Add this attribute to a method to get a notification after scripts have been reloaded.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.DidReloadScripts.#ctor">
      <summary>
        <para>DidReloadScripts attribute.</para>
      </summary>
      <param name="callbackOrder">Order in which separate attributes will be processed.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.DidReloadScripts.#ctor(System.Int32)">
      <summary>
        <para>DidReloadScripts attribute.</para>
      </summary>
      <param name="callbackOrder">Order in which separate attributes will be processed.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.OnOpenAssetAttribute">
      <summary>
        <para>Callback attribute for opening an asset in Unity (e.g the callback is fired when double clicking an asset in the Project Browser).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.PostProcessBuildAttribute">
      <summary>
        <para>Add this attribute to a method to get a notification just after building the player.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.PostProcessSceneAttribute">
      <summary>
        <para>Add this attribute to a method to get a notification just after building the Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditor">
      <summary>
        <para>Unity Camera Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.settings">
      <summary>
        <para>Settings for the camera editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnDestroy">
      <summary>
        <para>See ScriptableObject.OnDestroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnDisable">
      <summary>
        <para>See ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnEnable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnInspectorGUI">
      <summary>
        <para>See Editor.OnInspectorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnSceneGUI">
      <summary>
        <para>See Editor.OnSceneGUI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditor.Settings">
      <summary>
        <para>Contains all drawable elements of the CameraEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.allowDynamicResolution">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.allowMSAA">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.backgroundColor">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.clearFlags">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.cullingMask">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.depth">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.farClippingPlane">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.focalLength">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.fovAxisMode">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.gateFit">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.lensShift">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.nearClippingPlane">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.normalizedViewPortRect">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.occlusionCulling">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.orthographic">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.orthographicSize">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.renderingPath">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.sensorSize">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.stereoConvergence">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.stereoSeparation">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetDisplay">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetEye">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetTexture">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.verticalFOV">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.ApplyModifiedProperties">
      <summary>
        <para>See SerializedObject.ApplyModifiedProperties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawBackgroundColor">
      <summary>
        <para>Draws the default [[CameraEditor] background color widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawCameraWarnings(UnityEngine.Camera)">
      <summary>
        <para>Draws the default [[CameraEditor] warnings issued by a camera.</para>
      </summary>
      <param name="camera">The camera from which warnings are read.</param>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawClearFlags">
      <summary>
        <para>Draws the default [[CameraEditor] clear flags widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawClippingPlanes">
      <summary>
        <para>Draws the default [[CameraEditor] clipping planes widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawCullingMask">
      <summary>
        <para>Draws the default [[CameraEditor] culling mask widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawDepth">
      <summary>
        <para>Draws the default [[CameraEditor] depth widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawDynamicResolution">
      <summary>
        <para>Draws the default [[CameraEditor] dynamic resolution widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawHDR">
      <summary>
        <para>Draws the default [[CameraEditor] HDR widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawMSAA">
      <summary>
        <para>Draws the default [[CameraEditor] MSAA widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawMultiDisplay">
      <summary>
        <para>Draws the default [[CameraEditor] muliple display widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawNormalizedViewPort">
      <summary>
        <para>Draws the default [[CameraEditor] viewport widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawOcclusionCulling">
      <summary>
        <para>Draws the default [[CameraEditor] occlusion culling widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawProjection">
      <summary>
        <para>Draws the default [[CameraEditor] projection widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawRenderingPath">
      <summary>
        <para>Draws the default [[CameraEditor] rendering path widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawTargetEye">
      <summary>
        <para>Draws the default [[CameraEditor] target eye widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawTargetTexture(System.Boolean)">
      <summary>
        <para>Draws the default [[CameraEditor] target texture widget.</para>
      </summary>
      <param name="deferred"></param>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawVR">
      <summary>
        <para>Draws the default [[CameraEditor] VR widget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.HDR">
      <summary>
        <para>Exposed SerializedProperty for the inspected Camera.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.OnEnable">
      <summary>
        <para>Populate the settings object with data linked to the Camera SerializedObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.Update">
      <summary>
        <para>See SerializedObject.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditorUtils">
      <summary>
        <para>Utilities for cameras.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.DrawFrustumGizmo(UnityEngine.Camera)">
      <summary>
        <para>Draw the frustrum gizmo of a camera.</para>
      </summary>
      <param name="camera">The camera to use.</param>
    </member>
    <member name="P:UnityEditor.CameraEditorUtils.GameViewAspectRatio">
      <summary>
        <para>The aspect ratio of the game view.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.GetFrustumAspectRatio(UnityEngine.Camera)">
      <summary>
        <para>Calculate the frustrum aspect ratio of a camera.</para>
      </summary>
      <param name="camera">Camera to use.</param>
      <returns>
        <para>The frustrum aspect ratio of the provided camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.GetFrustumPlaneAt(UnityEngine.Matrix4x4,UnityEngine.Vector3,System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Calculate the points of the frustrum plane facing the viewer at a specific distance.

The points array will be filled with the calculated points in the following order: left bottom, left top, right top and right bottom.</para>
      </summary>
      <param name="clipToWorld">Clip space to world space matrix.</param>
      <param name="viewPosition">View position in world space.</param>
      <param name="distance">Distance from the view position of the plane.</param>
      <param name="points">Calculated points.  (A minimum size of 4 elements is required).</param>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.HandleFrustum">
      <summary>
        <para>Draw the frustrum handles for a camera.</para>
      </summary>
      <param name="c">The camera to use.</param>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.IsViewportRectValidToRender(UnityEngine.Rect)">
      <summary>
        <para>Check whether a viewport is valid.</para>
      </summary>
      <param name="normalizedViewPortRect">Viewport to check.</param>
      <returns>
        <para>Whether the viewport is valid.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.PerspectiveClipToWorld(UnityEngine.Matrix4x4,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Calculate the world space position of a point in clip space.

The z component will be used to get the point at the distance z from the viewer.</para>
      </summary>
      <param name="clipToWorld">Clip to world matrix to use.</param>
      <param name="viewPositionWS">The viewer's position in world space.</param>
      <param name="positionCS">The position in clip space.</param>
      <returns>
        <para>The corresponding world space position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.TryGetFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&amp;)">
      <summary>
        <para>Calculate the frustrum corners.

Corners are calculated in this order: left bottom, left top, right top, right bottom.</para>
      </summary>
      <param name="camera">Camera to use.</param>
      <param name="near">The corners of the near plane. (A minimum size of 4 elements is required.)</param>
      <param name="far">The corners of the far plane. (A minimum size of 4 elements is required.)</param>
      <param name="frustumAspect">The aspect ratio of the frustrum.</param>
      <returns>
        <para>Whether the frustrum was calculated.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.TryGetSensorGateFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&amp;)">
      <summary>
        <para>Calculate the frustrum corners from the sensor physical properties, without taking gate fitting into account.
To get the actual frustum with gate fit adjustment, use CameraEditorUtils.TryGetFrustum.
This method is equivalent to CameraEditorUtils.TryGetFrustum for non-physical cameras.

Corners are calculated in this order: left bottom, left top, right top, right bottom.</para>
      </summary>
      <param name="camera">Camera to use.</param>
      <param name="near">The corners of the near plane. (A minimum size of 4 elements is required.)</param>
      <param name="far">The corners of the far plane. (A minimum size of 4 elements is required.)</param>
      <param name="frustumAspect">The aspect ratio of the frustrum.</param>
      <returns>
        <para>Whether the frustrum was calculated.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.CameraProjectionCache">
      <summary>
        <para>Project points from world to screen space.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.#ctor(UnityEngine.Camera)">
      <summary>
        <para>Creates a CameraProjectionCache with the camera's current state.</para>
      </summary>
      <param name="camera">The Camera from which projection matrices will be copied.</param>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.GUIToScreenPoint(UnityEngine.Vector2)">
      <summary>
        <para>Converts a point from GUI position to screen space relative to the cached camera viewport.</para>
      </summary>
      <param name="guiPoint">A point in GUI space to convert to screen space.</param>
      <returns>
        <para>.guiPoint in screen space relative to the cached camera viewport.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.ScreenToGUIPoint(UnityEngine.Vector2)">
      <summary>
        <para>Converts a point from screen space to GUI position relative to the viewport at the time the CameraProjectionCache was created.</para>
      </summary>
      <param name="screenPoint">A point in screen space.</param>
      <returns>
        <para>.screenPoint converted to GUI space relative to the cached camera viewport.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.WorldToGUIPoint(UnityEngine.Vector3)">
      <summary>
        <para>Converts a world space point to a 2D GUI position.</para>
      </summary>
      <param name="worldPoint">A point in world space.</param>
      <returns>
        <para>A point in GUI space.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.WorldToScreenPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from world space into screen space using the cached camera projection and viewport.</para>
      </summary>
      <param name="worldPoint">A point in world space.</param>
      <returns>
        <para>The converted point in screen space.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.CanAppendBuild">
      <summary>
        <para>Whether you can append an existing build using BuildOptions.AcceptExternalModificationsToPlayer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.No">
      <summary>
        <para>The target platform supports appending builds, and the build is not in a valid state.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.Unsupported">
      <summary>
        <para>The target platform does not support appending builds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.Yes">
      <summary>
        <para>The target platform supports appending builds, and the build can be appended.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CanEditMultipleObjects">
      <summary>
        <para>Attribute used to make a custom editor support multi-object editing.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ChangeAssetObjectPropertiesEventArgs">
      <summary>
        <para>A change of this type indicates that a property of an asset object in memory has changed. This happens for example when Undo.RecordObject is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.guid">
      <summary>
        <para>The GUID of the changed asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.instanceId">
      <summary>
        <para>The instance ID of the modified asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.scene">
      <summary>
        <para>The Scene that contains the modified asset. This is usually an invalid scene unless the asset is explicitly associated in a scene (e.g. RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeAssetObjectPropertiesEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="guid">The GUID of the changed asset.</param>
      <param name="instanceId">The instance ID of the modified asset.</param>
      <param name="scene">The Scene that contains the modified asset.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs">
      <summary>
        <para>A change of this type indicates that a property of a GameObject or Component has changed. This happens for example when Undo.RecordObject is used with an instance of a Component.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.instanceId">
      <summary>
        <para>The instance ID of the modified GameObject or Component.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.scene">
      <summary>
        <para>The Scene that contains the GameObject associated with the change. If a Component is changed, this is the GameObject to which the component belongs.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="instanceId">The instance ID of the modified GameObject or Component.</param>
      <param name="scene">The Scene that contains the GameObject associated with the change. If a Component is changed, this is the GameObject to which the component belongs.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectParentEventArgs">
      <summary>
        <para>A change of this type indicates that the parent of a GameObject has changed. This happens when Undo.SetTransformParent or SceneManager.MoveGameObjectToScene is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.instanceId">
      <summary>
        <para>The instance ID of the GameObject whose parent changed. Note that this is not the instance ID of the Transform component.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.newParentInstanceId">
      <summary>
        <para>The instance ID of the GameObject that is the new parent of the target. Note that this is not the instance ID of its Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.newScene">
      <summary>
        <para>The Scene containing the new parent. This is useful to detect whether a GameObject was moved to another scene or moved to the root of a scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.previousParentInstanceId">
      <summary>
        <para>The instance ID of the GameObject that was the previous parent of the target. Note that this is not the instance ID of its Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.previousScene">
      <summary>
        <para>The scene containing the previous parent. This is useful to detect whether a GameObject was moved to another scene.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectParentEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene,System.Int32,UnityEngine.SceneManagement.Scene,System.Int32)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="instanceId">The instance ID of the GameObject whose parent changed. Note that this is not the instance ID of the Transform component.</param>
      <param name="previousScene">The scene containing the previous parent. This is useful to detect whether a GameObject was moved to another scene.</param>
      <param name="previousParentInstanceId">The instance ID of the GameObject that was the previous parent of the target. Note that this is not the instance ID of its Transform.</param>
      <param name="newScene">The Scene containing the new parent. This is useful to detect whether a GameObject was moved to another scene or moved to the root of a scene.</param>
      <param name="newParentInstanceId">The instance ID of the GameObject that is the new parent of the target. Note that this is not the instance ID of its Transform.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectStructureEventArgs">
      <summary>
        <para>A change of this type indicates that the structure of a GameObject has changed. This happens when a component is added to or removed from the GameObject using Undo.AddComponent or Undo.DestroyObjectImmediate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureEventArgs.instanceId">
      <summary>
        <para>The instance ID of the GameObject that has been changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureEventArgs.scene">
      <summary>
        <para>The Scene containing the GameObject that has been changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectStructureEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="instanceId">The instance ID of the GameObject that has been changed.</param>
      <param name="scene">The Scene containing the GameObject that has been changed.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs">
      <summary>
        <para>A change of this type indicates that the structure of a GameObject has changed and any GameObject in the hierarchy below it might have changed. This happens for example when Undo.RegisterFullObjectHierarchyUndo is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.instanceId">
      <summary>
        <para>The instance ID of the GameObject that has been changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.scene">
      <summary>
        <para>The scene containing the GameObject that has been changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="instanceId">The instance ID of the GameObject that has been changed.</param>
      <param name="scene">The Scene containing the GameObject that has been changed.</param>
    </member>
    <member name="T:UnityEditor.ChangeSceneEventArgs">
      <summary>
        <para>A change of this type indicates that an open scene has been changed ("dirtied") without any more specific information available. This happens for example when EditorSceneManager.MarkSceneDirty is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeSceneEventArgs.scene">
      <summary>
        <para>The Scene that was changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeSceneEventArgs.#ctor(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="scene">The Scene that was changed.</param>
    </member>
    <member name="T:UnityEditor.ClipAnimationInfoCurve">
      <summary>
        <para>Stores a curve and its name that will be used to create additionnal curves during the import process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationInfoCurve.curve">
      <summary>
        <para>The animation curve.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationInfoCurve.name">
      <summary>
        <para>The name of the animation curve.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ClipAnimationMaskType">
      <summary>
        <para>AnimationClip mask options for ModelImporterClipAnimation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.CopyFromOther">
      <summary>
        <para>Use a mask from your project to specify which transforms animation should be imported.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.CreateFromThisModel">
      <summary>
        <para>A mask containing all the transform in the file will be created internally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.None">
      <summary>
        <para>No Mask. All the animation will be imported.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CloudProjectSettings">
      <summary>
        <para>Use this class to retrieve information about the currently selected project and the current Unity ID that is logged in.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.organizationId">
      <summary>
        <para>The ID of the organization that this project belongs to. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.organizationName">
      <summary>
        <para>The name of the organization that this project belongs to. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.projectId">
      <summary>
        <para>A unique cloud project identifier. It is unique for every project (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.projectName">
      <summary>
        <para>The name of the project entry in the dashboard associated with this project (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.userId">
      <summary>
        <para>The user ID of the currently logged-in Unity ID account (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.userName">
      <summary>
        <para>The user name of the currently logged in Unity ID account (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ColorPickerHDRConfig">
      <summary>
        <para>Used as input to ColorField to configure the HDR color ranges in the ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.maxBrightness">
      <summary>
        <para>Maximum allowed color component value when using the ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.maxExposureValue">
      <summary>
        <para>Maximum exposure value allowed in the Color Picker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.minBrightness">
      <summary>
        <para>Minimum allowed color component value when using the ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.minExposureValue">
      <summary>
        <para>Minimum exposure value allowed in the Color Picker.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ColorPickerHDRConfig.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="minBrightness">Minimum brightness value allowed when using the Color Picker.</param>
      <param name="maxBrightness">Maximum brightness value allowed when using the Color Picker.</param>
      <param name="minExposureValue">Minimum exposure value used in the tonemapping section of the Color Picker.</param>
      <param name="maxExposureValue">Maximum exposure value used in the tonemapping section of the Color Picker.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssembliesType">
      <summary>
        <para>Flags for Assembly.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.Editor">
      <summary>
        <para>Selects assemblies compiled for the editor including test assemblies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.Player">
      <summary>
        <para>Selects assemblies compiled for the player including test assemblies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.PlayerWithoutTestAssemblies">
      <summary>
        <para>Selects assemblies compiled for the player excluding test assemblies.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.Assembly">
      <summary>
        <para>Class that represents an assembly compiled by Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.allReferences">
      <summary>
        <para>Returns Assembly.assemblyReferences and Assembly.compiledAssemblyReferences combined.

This returns all assemblies that are passed to the compiler when building this assembly,.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.assemblyReferences">
      <summary>
        <para>Assembly references used to build this assembly.

The references are also assemblies built as part of the Unity project.

See Also: Assembly.compiledAssemblyReferences and Assembly.allReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.compiledAssemblyReferences">
      <summary>
        <para>Assembly references to pre-compiled assemblies that used to build this assembly.

See Also: Assembly.assemblyReferences and Assembly.allReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.compilerOptions">
      <summary>
        <para>Compiler options used to compile the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.defines">
      <summary>
        <para>The defines used to compile this assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.flags">
      <summary>
        <para>Flags for the assembly.

See Also: AssemblyFlags.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.name">
      <summary>
        <para>The name of the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.outputPath">
      <summary>
        <para>The full output file path of this assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.rootNamespace">
      <summary>
        <para>Sets the root namespace of the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.sourceFiles">
      <summary>
        <para>All the souce files used to compile this assembly.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.Assembly.#ctor(System.String,System.String,System.String[],System.String[],UnityEditor.Compilation.Assembly[],System.String[],UnityEditor.Compilation.AssemblyFlags)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="name">Assembly name.</param>
      <param name="outputPath">Assembly output.</param>
      <param name="sourceFiles">Assembliy source files.</param>
      <param name="defines">Assembly defines.</param>
      <param name="assemblyReferences">Assembly references.</param>
      <param name="compiledAssemblyReferences">Compiled assembly references.</param>
      <param name="flags">Assembly flags.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilder">
      <summary>
        <para>Compiles scripts outside the Assets folder into a managed assembly that can be used inside the Assets folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.additionalDefines">
      <summary>
        <para>Additional #define directives passed to compilation of the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.additionalReferences">
      <summary>
        <para>Additional assembly references passed to compilation of the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.assemblyPath">
      <summary>
        <para>Output path of the assembly to build. (Read Only)</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.AssemblyBuilder.buildFinished(System.Action`2&lt;System.String,UnityEditor.Compilation.CompilerMessage[]&gt;)">
      <summary>
        <para>Event that is invoked on the main thread when the assembly build finishes.</para>
      </summary>
      <param name="value">First parameter is the output assembly path. Second parameter are the compiler messages.</param>
    </member>
    <member name="?:UnityEditor.Compilation.AssemblyBuilder.buildStarted(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Event that is invoked on the main thread when the assembly build starts.</para>
      </summary>
      <param name="value">Parameter is the output assembly path.</param>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.buildTarget">
      <summary>
        <para>BuildTarget for the assembly build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.buildTargetGroup">
      <summary>
        <para>BuildTargetGroup for the assembly build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.compilerOptions">
      <summary>
        <para>Compiler options to use when building the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.defaultDefines">
      <summary>
        <para>Default defines used when compiling the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.defaultReferences">
      <summary>
        <para>Default references used when compiling the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.excludeReferences">
      <summary>
        <para>References to exclude when compiling the assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.flags">
      <summary>
        <para>Flags to control the assembly build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.referencesOptions">
      <summary>
        <para>Options to control the references that Unity uses during an assembly build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.scriptPaths">
      <summary>
        <para>Array of script paths used as input for assembly build. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.status">
      <summary>
        <para>Current status of assembly build. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyBuilder.Build">
      <summary>
        <para>Starts the build of the assembly.

While building, the small progress icon in the lower right corner of Unity's main window will spin and EditorApplication.isCompiling will return true.</para>
      </summary>
      <returns>
        <para>Returns true if build was started. Returns false if the build was not started due to the editor currently compiling scripts in the Assets folder.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyBuilder.#ctor(System.String,System.String[])">
      <summary>
        <para>AssemblyBuilder constructor.</para>
      </summary>
      <param name="assemblyPath">Path of the output assembly. Relative to project root.</param>
      <param name="scriptPaths">Array of script paths to be compiled into the output assembly. Relative to project root.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilderFlags">
      <summary>
        <para>Flags used by  AssemblyBuilder to control assembly build.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.DevelopmentBuild">
      <summary>
        <para>Defines whether the output assembly is an development build.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.EditorAssembly">
      <summary>
        <para>Defines whether the output assembly is an editor assembly.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.None">
      <summary>
        <para>None value. Default.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilderStatus">
      <summary>
        <para>Status of the AssemblyBuilder build.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.Finished">
      <summary>
        <para>Indicates the AssemblyBuilder build has finished.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.IsCompiling">
      <summary>
        <para>Indicates the AssemblyBuilder build is compiling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.NotStarted">
      <summary>
        <para>Indicates the AssemblyBuilder build has not been started.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionException">
      <summary>
        <para>An exception throw for Assembly Definition Files errors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionException.filePaths">
      <summary>
        <para>File paths of the assembly definition files that caused the exception.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyDefinitionException.#ctor(System.String,System.String[])">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="message">Exception message.</param>
      <param name="filePaths">File paths for assembly definition files.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionPlatform">
      <summary>
        <para>Contains information about a platform supported by the assembly definition files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.BuildTarget">
      <summary>
        <para>BuildTarget for the AssemblyDefinitionPlatform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.DisplayName">
      <summary>
        <para>Display name for the platform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.Name">
      <summary>
        <para>Name used in assembly definition files.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionReferenceType">
      <summary>
        <para>Assembly definition file reference type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyDefinitionReferenceType.Guid">
      <summary>
        <para>Assembly definition file GUID reference.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyDefinitionReferenceType.Name">
      <summary>
        <para>Assembly definition file assembly name reference.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyFlags">
      <summary>
        <para>Flags for Assembly.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyFlags.EditorAssembly">
      <summary>
        <para>Indicates whether this assembly is an editor only assembly.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyFlags.None">
      <summary>
        <para>None value. Default.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CodeOptimization">
      <summary>
        <para>Code optimization mode defines whether UnityEditor compiles scripts in Debug or Release mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.Debug">
      <summary>
        <para>Debug mode enables C# debugging but reduces C# performance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.None">
      <summary>
        <para>Unitialized value for code optimization mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.Release">
      <summary>
        <para>Release mode disables C# debugging but improves C# performance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilationPipeline">
      <summary>
        <para>Methods and properties for script compilation pipeline.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.assemblyCompilationFinished(System.Action`2&lt;System.String,UnityEditor.Compilation.CompilerMessage[]&gt;)">
      <summary>
        <para>An event that is invoked on the main thread when compilation of an assembly finishes.</para>
      </summary>
      <param name="value">First parameter is the output assembly path. Second parameter are the compiler messages.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.assemblyCompilationStarted(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>An event that is invoked on the main thread when the assembly build starts.</para>
      </summary>
      <param name="value">Parameter is the output assembly path.</param>
    </member>
    <member name="P:UnityEditor.Compilation.CompilationPipeline.codeOptimization">
      <summary>
        <para>Current Compilation.CodeOptimization|code optimization mode.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.codeOptimizationChanged(System.Action`1&lt;UnityEditor.Compilation.CodeOptimization&gt;)">
      <summary>
        <para>This event triggers whenever the codeOptimization property changes between Compilation.CodeOptimization.Debug|Debug and Compilation.CodeOptimization.Release|Release modes.</para>
      </summary>
      <param name="value">Current Compilation.CodeOptimization|code optimization mode value.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.compilationFinished(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>An event that is invoked on the main thread when the compilation of assemblies finishes.</para>
      </summary>
      <param name="value">A context object, which is a temporary store that allows you to compare compilation start and finish events.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.compilationStarted(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>An event that is invoked on the main thread when the compilation of assemblies starts.</para>
      </summary>
      <param name="value">A context object, which is a temporary store that allows you to compare compilation start and finish events.</param>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.AssemblyDefinitionReferenceGUIDToGUID(System.String)">
      <summary>
        <para>Converts an assembly definition file GUID reference to a GUID string.</para>
      </summary>
      <param name="reference">Assembly Definition File GUID reference.</param>
      <returns>
        <para>A GUID string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblies(UnityEditor.Compilation.AssembliesType)">
      <summary>
        <para>Get all script assemblies compiled by Unity filtered by AssembliesType.</para>
      </summary>
      <param name="assembliesType"></param>
      <returns>
        <para>Array of script assemblies compiled by Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyName(System.String)">
      <summary>
        <para>Returns the assembly definition file path from an assembly name. Returns null if there is no assembly definition file for the given assembly name.</para>
      </summary>
      <param name="assemblyName">Assembly name.</param>
      <returns>
        <para>File path of assembly definition file.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyReference(System.String)">
      <summary>
        <para>Returns the assembly definition file path for an Assembly Definition File GUID or assembly name reference. Returns null if there is no assembly definition file for the given assembly reference.</para>
      </summary>
      <param name="reference">The assembly definition file GUID or assembly name reference.</param>
      <returns>
        <para>The file path of the given assembly definition file.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromScriptPath(System.String)">
      <summary>
        <para>Returns the assembly definition file path for a source (script) path. Returns null if there is no assembly definition file for the given script path.</para>
      </summary>
      <param name="sourceFilePath">Source (script) file path.</param>
      <returns>
        <para>File path of assembly definition file.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionPlatforms">
      <summary>
        <para>Returns all the platforms supported by assembly definition files.

See Also: AssemblyDefinitionPlatform.</para>
      </summary>
      <returns>
        <para>Platforms supported by assembly definition files.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionReferenceType(System.String)">
      <summary>
        <para>Utility method to determine whether an Assembly Definition File reference is a GUID reference or an assembly name reference.</para>
      </summary>
      <param name="reference">The given assembly definition file reference.</param>
      <returns>
        <para>Whether the reference is a GUID or assembly name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyNameFromScriptPath(System.String)">
      <summary>
        <para>Returns the assembly name for a source (script) path. Returns null if there is no assembly name for the given script path.</para>
      </summary>
      <param name="sourceFilePath">Source (script) path.</param>
      <returns>
        <para>Assembly name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyRootNamespaceFromScriptPath(System.String)">
      <summary>
        <para>Gets the root namespace associated with the given script path.</para>
      </summary>
      <param name="sourceFilePath">Source (script) file path.</param>
      <returns>
        <para>Returns the root namespace for the given script. If there is no root namespace defined for the script, it returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetDefinesFromAssemblyName(System.String)">
      <summary>
        <para>Lists all the #define directives used to compile the specified assembly.</para>
      </summary>
      <param name="assemblyName">The name of the assembly without the extension.</param>
      <returns>
        <para>A string array of #define directives declared for the assembly. Returns null if the assembly is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyNames">
      <summary>
        <para>Get all precompiled assembly names.</para>
      </summary>
      <returns>
        <para>Precompiled assembly names.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyPathFromAssemblyName(System.String)">
      <summary>
        <para>Returns the Assembly file path from an assembly name. Returns null if there is no Precompiled Assembly name match.</para>
      </summary>
      <param name="assemblyName">Assembly name.</param>
      <returns>
        <para>File path of precompiled assembly.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyPaths(UnityEditor.Compilation.CompilationPipeline/PrecompiledAssemblySources)">
      <summary>
        <para>Returns the paths to the precompiled assemblies which are included when building editor assemblies and match any of the given PrecompiledAssemblySources.</para>
      </summary>
      <param name="precompiledAssemblySources">Determines which assembly paths will be returned.</param>
      <returns>
        <para>An array of paths to precompiled assemblies.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetResponseFileDefinesFromAssemblyName(System.String)">
      <summary>
        <para>Lists all the #define directives used to compile the specified assembly, that is from a Response File.</para>
      </summary>
      <param name="assemblyName">The name of the assembly without the extension.</param>
      <returns>
        <para>A string array of #define directives declared for the assembly. Returns null if the assembly is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetSystemAssemblyDirectories(UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>Use this to get a list of directories containing system references for the specific ApiCompatibilityLevel.</para>
      </summary>
      <param name="apiCompatibilityLevel"></param>
      <returns>
        <para>Returns an array populated by absolute directory paths.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GUIDToAssemblyDefinitionReferenceGUID(System.String)">
      <summary>
        <para>Converts the given GUID to an assembly definition file GUID reference.</para>
      </summary>
      <param name="guid">The given assembly definition file asset GUID.</param>
      <returns>
        <para>The assembly definition file GUID reference for the given asset GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.IsDefineConstraintsCompatible(System.String[],System.String[])">
      <summary>
        <para>Allows you to test whether the specified #define constraints are satisfied by the specified list of #define directives.</para>
      </summary>
      <param name="defines">A string array of #define directives.</param>
      <param name="defineConstraints">A string array of #define directives to to check compatibility against.</param>
      <returns>
        <para>True if the specified #define constraints are satisfied by the specified #define directives. Otherwise returns False.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.ParseResponseFile(System.String,System.String,System.String[])">
      <summary>
        <para>Retrieves the ResponseFileData describing the content of the response file.</para>
      </summary>
      <param name="relativePath">The path to the response file to be parsed.</param>
      <param name="projectDirectory">The absolute path to the root of the Project directory in which the response file is located.</param>
      <param name="systemReferenceDirectories">Array of directories containing system reference libraries.</param>
      <returns>
        <para>Describes the content of the response file that was parsed. Errors, defines, etc.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources">
      <summary>
        <para>Specifies the sources of precompiled assemblies referenced during compilation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.All">
      <summary>
        <para>Matches all assembly sources.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.SystemAssembly">
      <summary>
        <para>Matches assemblies supplied by the target framework.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityAssembly">
      <summary>
        <para>Matches any Unity assemblies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityEditor">
      <summary>
        <para>Matches UnityEditor and editor module assemblies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityEngine">
      <summary>
        <para>Matches UnityEngine and runtime module assemblies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UserAssembly">
      <summary>
        <para>Matches precompiled assemblies present in the project and packages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.RequestScriptCompilation">
      <summary>
        <para>Use this function to make the Unity Editor recompile every Script in your Project asynchronously. When the compilation finishes, the Unity Editor then loads the compiled assemblies.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilerMessage">
      <summary>
        <para>Compiler Message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.column">
      <summary>
        <para>Line column for the message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.file">
      <summary>
        <para>File for the message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.line">
      <summary>
        <para>File line for the message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.message">
      <summary>
        <para>Compiler message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.type">
      <summary>
        <para>Message type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilerMessageType">
      <summary>
        <para>Compiler message type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Error">
      <summary>
        <para>Error message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Warning">
      <summary>
        <para>Warning message.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.PrecompiledAssemblyException">
      <summary>
        <para>An exception throw for Precompiled Assembly errors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.PrecompiledAssemblyException.filePaths">
      <summary>
        <para>File paths for Precompiled Assemblies that caused the exception.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.PrecompiledAssemblyException.#ctor(System.String,System.String[])">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="message">Exception message.</param>
      <param name="filePaths">File paths for Precompiled Assemblies.</param>
    </member>
    <member name="T:UnityEditor.Compilation.ReferencesOptions">
      <summary>
        <para>Options to control the Unity References to other assembly definition files that Unity uses during compilation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ReferencesOptions.None">
      <summary>
        <para>Default options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ReferencesOptions.UseEngineModules">
      <summary>
        <para>Use UnityEngine modules when compiling.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.ResponseFileData">
      <summary>
        <para>Data class used for storing parsed response file data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Defines">
      <summary>
        <para>Array of define symbols.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Errors">
      <summary>
        <para>Error messages that occurred during parsing the response file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.FullPathReferences">
      <summary>
        <para>Array of absolute path reference to assemblies that should be referenced to the assemblies.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.OtherArguments">
      <summary>
        <para>Additional compiler options written as is in the response file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Unsafe">
      <summary>
        <para>Where 'unsafe' code is allowed when compiling scripts.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.ScriptCompilerOptions">
      <summary>
        <para>Compiler options passed to the script compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AdditionalCompilerArguments">
      <summary>
        <para>Additional compiler arguments.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AllowUnsafeCode">
      <summary>
        <para>Allow 'unsafe' code when compiling scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.ApiCompatibilityLevel">
      <summary>
        <para>ApiCompatibilityLevel for a given Assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.CodeOptimization">
      <summary>
        <para>Indicates whether performance optimization is enabled for the assembly</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.ScriptCompilerOptions.#ctor">
      <summary>
        <para>Creates ScriptCompilerOptions with default values used for script compilation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.EmitReferenceAssembly">
      <summary>
        <para>Emit Reference Assembly when compiling scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.LanguageVersion">
      <summary>
        <para>String representation of the language version being used to compile the current Assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.ResponseFiles">
      <summary>
        <para>Array of path to the response files that affects the current compilation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAnalyzerDllPaths">
      <summary>
        <para>Stores the paths to the .dll files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAnalyzerRulesetPath">
      <summary>
        <para>Stores the path to the Roslyn ruleset file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ComputeShaderImporter">
      <summary>
        <para>Define compute shader import settings in the Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ComputeShaderImporter.preprocessorOverride">
      <summary>
        <para>The preprocessor that Unity uses to compile this compute shader.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CrashReporting.CrashReportingSettings">
      <summary>
        <para>Editor API for the Unity Services editor feature. Normally CrashReporting is enabled from the Services window, but if writing your own editor extension, this API can be used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.captureEditorExceptions">
      <summary>
        <para>This Boolean field will cause the CrashReporting feature in Unity to capture exceptions that occur in the editor while running in Play mode if true, or ignore those errors if false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.enabled">
      <summary>
        <para>This Boolean field will cause the CrashReporting feature in Unity to be enabled if true, or disabled if false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.logBufferSize">
      <summary>
        <para>The Performance Reporting service will keep a buffer of up to the last X log messages (Debug.Log, etc) to send along with crash reports.  The default is 10 log messages, the max is 50. Set this to 0 to disable capture of logs with your crash reports.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CreateAssetObjectEventArgs">
      <summary>
        <para>A change of this type indicates that an asset object has been created. This happens for example when Undo.RegisterCreatedObjectUndo is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.guid">
      <summary>
        <para>The GUID of the new asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.instanceId">
      <summary>
        <para>The instance ID of the modified asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.scene">
      <summary>
        <para>The Scene that contains the new asset. This is usually an invalid scene unless the asset is explicitly associated in a scene (e.g. RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CreateAssetObjectEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="guid">The GUID of the new asset.</param>
      <param name="instanceId">The instance ID of the modified asset.</param>
      <param name="scene">The Scene that contains the new asset.</param>
    </member>
    <member name="T:UnityEditor.CreateGameObjectHierarchyEventArgs">
      <summary>
        <para>A change of this type indicates that a GameObject has been created, possibly with additional objects below it in the hierarchy. This happens for example when Undo.RegisterCreatedObjectUndo is used with a GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateGameObjectHierarchyEventArgs.instanceId">
      <summary>
        <para>The instance ID of the GameObject that has been created.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateGameObjectHierarchyEventArgs.scene">
      <summary>
        <para>The scene containing the GameObject that has been created.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CreateGameObjectHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="instanceId">The instance ID of the GameObject that has been created.</param>
      <param name="scene">The scene containing the GameObject that has been created.</param>
    </member>
    <member name="T:UnityEditor.CustomEditor">
      <summary>
        <para>Tells an Editor class which run-time type it's an editor for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CustomEditor.isFallback">
      <summary>
        <para>If true, match this editor only if all non-fallback editors do not match. Defaults to false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomEditor.#ctor(System.Type)">
      <summary>
        <para>Defines which object type the custom editor class can edit.</para>
      </summary>
      <param name="inspectedType">Type that this editor can edit.</param>
      <param name="editorForChildClasses">If true, child classes of inspectedType will also show this editor. Defaults to false.</param>
    </member>
    <member name="M:UnityEditor.CustomEditor.#ctor(System.Type,System.Boolean)">
      <summary>
        <para>Defines which object type the custom editor class can edit.</para>
      </summary>
      <param name="inspectedType">Type that this editor can edit.</param>
      <param name="editorForChildClasses">If true, child classes of inspectedType will also show this editor. Defaults to false.</param>
    </member>
    <member name="T:UnityEditor.CustomEditorForRenderPipelineAttribute">
      <summary>
        <para>Tells an Editor class which run-time type it's an editor for when the given RenderPipeline is activated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomEditorForRenderPipelineAttribute.#ctor(System.Type,System.Type)">
      <summary>
        <para>Defines which object type the custom editor class can edit.</para>
      </summary>
      <param name="inspectedType">Type that this editor can edit.</param>
      <param name="renderPipeline">Type of RenderPipelineAsset that that should be active for this inspector to be used.</param>
      <param name="editorForChildClasses">If true, child classes of inspectedType will also show this editor. Defaults to false.</param>
    </member>
    <member name="M:UnityEditor.CustomEditorForRenderPipelineAttribute.#ctor(System.Type,System.Type,System.Boolean)">
      <summary>
        <para>Defines which object type the custom editor class can edit.</para>
      </summary>
      <param name="inspectedType">Type that this editor can edit.</param>
      <param name="renderPipeline">Type of RenderPipelineAsset that that should be active for this inspector to be used.</param>
      <param name="editorForChildClasses">If true, child classes of inspectedType will also show this editor. Defaults to false.</param>
    </member>
    <member name="T:UnityEditor.CustomPreviewAttribute">
      <summary>
        <para>Adds an extra preview in the Inspector for the specified type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomPreviewAttribute.#ctor(System.Type)">
      <summary>
        <para>Tells a DefaultPreview which class it's a preview for.</para>
      </summary>
      <param name="type">The type you want to create a custom preview for.</param>
    </member>
    <member name="T:UnityEditor.CustomPropertyDrawer">
      <summary>
        <para>Tells a custom PropertyDrawer or DecoratorDrawer which run-time Serializable class or PropertyAttribute it's a drawer for.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomPropertyDrawer.#ctor(System.Type)">
      <summary>
        <para>Tells a PropertyDrawer or DecoratorDrawer class which run-time class or attribute it's a drawer for.</para>
      </summary>
      <param name="type">If the drawer is for a custom Serializable class, the type should be that class. If the drawer is for script variables with a specific PropertyAttribute, the type should be that attribute.</param>
      <param name="useForChildren">If true, the drawer will be used for any children of the specified class unless they define their own drawer.</param>
    </member>
    <member name="M:UnityEditor.CustomPropertyDrawer.#ctor(System.Type,System.Boolean)">
      <summary>
        <para>Tells a PropertyDrawer or DecoratorDrawer class which run-time class or attribute it's a drawer for.</para>
      </summary>
      <param name="type">If the drawer is for a custom Serializable class, the type should be that class. If the drawer is for script variables with a specific PropertyAttribute, the type should be that attribute.</param>
      <param name="useForChildren">If true, the drawer will be used for any children of the specified class unless they define their own drawer.</param>
    </member>
    <member name="T:UnityEditor.D3D11FullscreenMode">
      <summary>
        <para>Direct3D 11 fullscreen mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D11FullscreenMode.ExclusiveMode">
      <summary>
        <para>Exclusive mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D11FullscreenMode.FullscreenWindow">
      <summary>
        <para>Fullscreen window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.D3D9FullscreenMode">
      <summary>
        <para>Direct3D 9 fullscreen mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D9FullscreenMode.ExclusiveMode">
      <summary>
        <para>Exclusive mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D9FullscreenMode.FullscreenWindow">
      <summary>
        <para>Fullscreen window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DDSImporter">
      <summary>
        <para>Texture importer lets you modify Texture2D import settings for DDS textures from editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DDSImporter.isReadable">
      <summary>
        <para>Is texture data readable from scripts.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DecoratorDrawer">
      <summary>
        <para>Base class to derive custom decorator drawers from.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DecoratorDrawer.attribute">
      <summary>
        <para>The PropertyAttribute for the decorator. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.CanCacheInspectorGUI">
      <summary>
        <para>Override this method to determine whether the inspector GUI for your decorator can be cached.</para>
      </summary>
      <returns>
        <para>Whether the inspector GUI for your decorator can be cached.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.GetHeight">
      <summary>
        <para>Override this method to specify how tall the GUI for this decorator is in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Override this method to make your own GUI for the decorator.
See DecoratorDrawer for an example of how to use this.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the decorator GUI.</param>
    </member>
    <member name="T:UnityEditor.DefaultAsset">
      <summary>
        <para>DefaultAsset is used for assets that do not have a specific type (yet).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DefaultLightingExplorerExtension">
      <summary>
        <para>Default definition for the Lighting Explorer. Can be overridden completely or partially.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetContentTabs">
      <summary>
        <para>This returns all the default tabs for the Lighting Explorer.</para>
      </summary>
      <returns>
        <para>Default tabs for the Lighting Explorer.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissives">
      <summary>
        <para>Returns objects with an Emissive material.</para>
      </summary>
      <returns>
        <para>Objects with an Emissive material.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissivesColumns">
      <summary>
        <para>Returns column definitions for Emissives.</para>
      </summary>
      <returns>
        <para>Column definitions for Emissives.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightColumns">
      <summary>
        <para>Returns column definitions for Lights.</para>
      </summary>
      <returns>
        <para>Column definitions for Lights.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbeColumns">
      <summary>
        <para>Returns column definitions for Light Probes.</para>
      </summary>
      <returns>
        <para>Column definitions for Light Probes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbes">
      <summary>
        <para>Returns Light Probes.</para>
      </summary>
      <returns>
        <para>Light Probes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLights">
      <summary>
        <para>Returns Lights.</para>
      </summary>
      <returns>
        <para>Lights.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbeColumns">
      <summary>
        <para>Returns column definitions for Reflection Probes.</para>
      </summary>
      <returns>
        <para>Column definitions for Reflection Probes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbes">
      <summary>
        <para>Returns Reflection Probes.</para>
      </summary>
      <returns>
        <para>Reflection Probes.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DestroyAssetObjectEventArgs">
      <summary>
        <para>A change of this type indicates that an asset object has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.guid">
      <summary>
        <para>The GUID of the removed asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.instanceId">
      <summary>
        <para>The instance ID of the modified asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.scene">
      <summary>
        <para>The scene that contained the asset. This is usually an invalid scene unless the asset is explicitly associated in a scene (e.g. RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DestroyAssetObjectEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="guid">The GUID of the removed asset.</param>
      <param name="instanceId">The instance ID of the modified asset.</param>
      <param name="scene">The Scene that contained the asset.</param>
    </member>
    <member name="T:UnityEditor.DestroyGameObjectHierarchyEventArgs">
      <summary>
        <para>A change of this type indicates that a GameObject and the entire hierarchy below it has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.instanceId">
      <summary>
        <para>The instance ID of the GameObject that has been destroyed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.scene">
      <summary>
        <para>The scene containing the GameObject that has been destroyed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DestroyGameObjectHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="instanceId">The instance ID of the GameObject that has been destroyed.</param>
      <param name="scene">The Scene containing the GameObject that has been destroyed.</param>
    </member>
    <member name="T:UnityEditor.DialogOptOutDecisionType">
      <summary>
        <para>The type of opt-out decision a user can make.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DialogOptOutDecisionType.ForThisMachine">
      <summary>
        <para>The decision to opt out of seeing a dialog box for all time on the user's current machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DialogOptOutDecisionType.ForThisSession">
      <summary>
        <para>The decision to opt out of seeing a dialog box for the duration of the current Editor session.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDrop">
      <summary>
        <para>Editor drag &amp; drop operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.activeControlID">
      <summary>
        <para>Get or set ID of currently active drag and drop control.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.objectReferences">
      <summary>
        <para>References to Object|objects being dragged.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.paths">
      <summary>
        <para>The file names being dragged.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.visualMode">
      <summary>
        <para>The visual indication of the drag.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AcceptDrag">
      <summary>
        <para>Accept a drag operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.GetGenericData(System.String)">
      <summary>
        <para>Get data associated with current drag and drop operation.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.PrepareStartDrag">
      <summary>
        <para>Clears drag &amp; drop data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.SetGenericData(System.String,System.Object)">
      <summary>
        <para>Set data associated with current drag and drop operation.</para>
      </summary>
      <param name="type"></param>
      <param name="data"></param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.StartDrag(System.String)">
      <summary>
        <para>Start a drag operation.</para>
      </summary>
      <param name="title"></param>
    </member>
    <member name="T:UnityEditor.DragAndDropVisualMode">
      <summary>
        <para>Visual indication mode for Drag &amp; Drop operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Copy">
      <summary>
        <para>Copy dragged objects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Generic">
      <summary>
        <para>Generic drag operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Link">
      <summary>
        <para>Link dragged objects to target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Move">
      <summary>
        <para>Move dragged objects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.None">
      <summary>
        <para>No indication (drag should not be performed).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Rejected">
      <summary>
        <para>Rejected drag operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DrawCameraMode">
      <summary>
        <para>Drawing modes for Handles.DrawCamera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Albedo">
      <summary>
        <para>Draw objects with the albedo component only. This value has been deprecated. Please use DrawCameraMode.RealtimeAlbedo.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.AlphaChannel">
      <summary>
        <para>The camera is set to display the alpha channel of the rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Baked">
      <summary>
        <para>Draw objects with baked GI only. This value has been deprecated. Please use DrawCameraMode.BakedLightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedAlbedo">
      <summary>
        <para>Draw objects with the baked albedo component only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedCharting">
      <summary>
        <para>Draw objects with different colors for each baked chart (UV island).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedDirectionality">
      <summary>
        <para>Draw objects with the baked directionality component only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedEmissive">
      <summary>
        <para>Draw objects with the baked emission component only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedIndices">
      <summary>
        <para>Draw objects with baked indices only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedLightmap">
      <summary>
        <para>Draw objects with the baked lightmap only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedLightmapCulling">
      <summary>
        <para>Draw objects with visible lightmap texels highlighted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedTexelValidity">
      <summary>
        <para>Draw objects with baked texel validity only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedUVOverlap">
      <summary>
        <para>Draw objects with overlapping lightmap texels highlighted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Charting">
      <summary>
        <para>Draw objects with different colors for each real-time chart (UV island).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Clustering">
      <summary>
        <para>Draw with different colors for each cluster.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredDiffuse">
      <summary>
        <para>Draw diffuse color of Deferred Shading g-buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredNormal">
      <summary>
        <para>Draw world space normal of Deferred Shading g-buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredSmoothness">
      <summary>
        <para>Draw smoothness value of Deferred Shading g-buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredSpecular">
      <summary>
        <para>Draw specular color of Deferred Shading g-buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Directionality">
      <summary>
        <para>Draw objects with directionality for real-time GI. This value has been deprecated. Please use DrawCameraMode.RealtimeDirectionality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Emissive">
      <summary>
        <para>Draw objects with the emission component only. This value has been deprecated. Please use DrawCameraMode.RealtimeEmissive.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.GIContributorsReceivers">
      <summary>
        <para>Draw Mesh Renderers and Terrains in different colors to show their StaticEditorFlags.ContributeGI  / ReceiveGI properties. With default colors:

Yellow means 'ContributeGI' is off.
Blue means that 'ContributeGI' is on and the object receives GI from lightmaps. See Also: ReceiveGI.Lightmaps
Red means that 'ContributeGI' is on, but that the object receives GI from Light Probes instead. See Also: ReceiveGI.LightProbes.

All colors can be adjusted under Preferences &gt; Colors.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Irradiance">
      <summary>
        <para>Draw objects with real-time GI only. This value has been deprecated. Please use DrawCameraMode.RealtimeIndirect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.LightOverlap">
      <summary>
        <para>The camera is set to show in red static lights that fall back to 'static' because more than four light volumes are overlapping.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.LitClustering">
      <summary>
        <para>Draw lit clusters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Mipmaps">
      <summary>
        <para>The camera is set to display the texture resolution, with a red tint indicating resolution that is too high, and a blue tint indicating texture sizes that could be higher.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Normal">
      <summary>
        <para>Draw the camera like it would be drawn in-game. This uses the clear flags of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Overdraw">
      <summary>
        <para>The camera is set to display Scene overdraw, with brighter colors indicating more overdraw.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeAlbedo">
      <summary>
        <para>Draw objects with the real-time GI albedo component only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeCharting">
      <summary>
        <para>Draw objects with different colors for each real-time chart (UV island).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeDirectionality">
      <summary>
        <para>Draw objects with the real-time GI directionality component only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeEmissive">
      <summary>
        <para>Draw objects with the real-time GI emission component only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeIndirect">
      <summary>
        <para>Draw objects with the real-time GI indirect light only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RenderPaths">
      <summary>
        <para>The camera is set to draw color coded render paths.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ShadowCascades">
      <summary>
        <para>The camera is set to draw directional light shadow map cascades.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ShadowMasks">
      <summary>
        <para>The camera is set to display colored ShadowMasks, coloring light gizmo with the same color.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.SpriteMask">
      <summary>
        <para>The camera is set to display SpriteMask and SpriteRenderer with SpriteRenderer.maskInteraction set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Systems">
      <summary>
        <para>Draw objects with different color for each GI system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Textured">
      <summary>
        <para>Draw the camera textured with selection wireframe and no background clearing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.TexturedWire">
      <summary>
        <para>Draw the camera where all objects have a wireframe overlay. and no background clearing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.TextureStreaming">
      <summary>
        <para>The camera is set to run in texture streaming debug mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.UserDefined">
      <summary>
        <para>A custom mode defined by the user.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ValidateAlbedo">
      <summary>
        <para>The camera is set to draw a physically based, albedo validated rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ValidateMetalSpecular">
      <summary>
        <para>The camera is set to draw a physically based, metal or specular validated rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Wireframe">
      <summary>
        <para>Draw the camera in wireframe and no background clearing.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DrawGizmo">
      <summary>
        <para>The DrawGizmo attribute allows you to supply a gizmo renderer for any Component.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DrawGizmo.#ctor(UnityEditor.GizmoType)">
      <summary>
        <para>Defines when the gizmo should be invoked for drawing.</para>
      </summary>
      <param name="gizmo">Flags to denote when the gizmo should be drawn.</param>
    </member>
    <member name="M:UnityEditor.DrawGizmo.#ctor(UnityEditor.GizmoType,System.Type)">
      <summary>
        <para>Same as above. drawnGizmoType determines of what type the object we are drawing the gizmo of has to be.</para>
      </summary>
      <param name="gizmo">Flags to denote when the gizmo should be drawn.</param>
      <param name="drawnGizmoType">Type of object for which the gizmo should be drawn.</param>
    </member>
    <member name="T:UnityEditor.Editor">
      <summary>
        <para>Derive from this base class to create a custom inspector or editor for your custom object.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Editor.finishedDefaultHeaderGUI(System.Action`1&lt;UnityEditor.Editor&gt;)">
      <summary>
        <para>An event raised while drawing the header of the Inspector window, after the default header items have been drawn.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.Editor.serializedObject">
      <summary>
        <para>A SerializedObject representing the object or objects being inspected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Editor.target">
      <summary>
        <para>The object being inspected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Editor.targets">
      <summary>
        <para>An array of all the object being inspected.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or destroys the previous editor and creates a new one.</para>
      </summary>
      <param name="obj">The object the editor is tracking.</param>
      <param name="editorType">The requested editor type. Set to null for the default editor for the object.</param>
      <param name="previousEditor">The previous editor for the object. After returning from CreateCachedEditor previousEditor is an editor for the targetObject or targetObjects.</param>
      <param name="objects">The objects the editor is tracking.</param>
      <param name="targetObject"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[],System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or destroys the previous editor and creates a new one.</para>
      </summary>
      <param name="obj">The object the editor is tracking.</param>
      <param name="editorType">The requested editor type. Set to null for the default editor for the object.</param>
      <param name="previousEditor">The previous editor for the object. After returning from CreateCachedEditor previousEditor is an editor for the targetObject or targetObjects.</param>
      <param name="objects">The objects the editor is tracking.</param>
      <param name="targetObject"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object,UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>Creates a cached editor using a context object.</para>
      </summary>
      <param name="targetObject"></param>
      <param name="context"></param>
      <param name="editorType"></param>
      <param name="previousEditor"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>Creates a cached editor using a context object.</para>
      </summary>
      <param name="targetObject"></param>
      <param name="context"></param>
      <param name="editorType"></param>
      <param name="previousEditor"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object)">
      <summary>
        <para>Make a custom editor for targetObject or targetObjects.</para>
      </summary>
      <param name="objects">All objects must be of the same type.</param>
      <param name="targetObject"></param>
      <param name="editorType"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object,System.Type)">
      <summary>
        <para>Make a custom editor for targetObject or targetObjects.</para>
      </summary>
      <param name="objects">All objects must be of the same type.</param>
      <param name="targetObject"></param>
      <param name="editorType"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[])">
      <summary>
        <para>Make a custom editor for targetObject or targetObjects.</para>
      </summary>
      <param name="objects">All objects must be of the same type.</param>
      <param name="targetObject"></param>
      <param name="editorType"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[],System.Type)">
      <summary>
        <para>Make a custom editor for targetObject or targetObjects.</para>
      </summary>
      <param name="objects">All objects must be of the same type.</param>
      <param name="targetObject"></param>
      <param name="editorType"></param>
      <param name="targetObjects"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type)">
      <summary>
        <para>Make a custom editor for targetObject or targetObjects with a context object.</para>
      </summary>
      <param name="targetObjects"></param>
      <param name="context"></param>
      <param name="editorType"></param>
    </member>
    <member name="M:UnityEditor.Editor.CreateInspectorGUI">
      <summary>
        <para>Implement this method to make a custom UIElements inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawDefaultInspector">
      <summary>
        <para>Draws the built-in inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawFoldoutInspector(UnityEngine.Object,UnityEditor.Editor&amp;)">
      <summary>
        <para>Draws the inspector GUI with a foldout header for target.</para>
      </summary>
      <param name="target">The object to display the Inspector for.</param>
      <param name="editor">The reference to a variable of type Editor.</param>
    </member>
    <member name="M:UnityEditor.Editor.DrawHeader">
      <summary>
        <para>Call this function to draw the header of the editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawPreview(UnityEngine.Rect)">
      <summary>
        <para>The first entry point for Preview Drawing.</para>
      </summary>
      <param name="previewPosition">The available area to draw the preview.</param>
      <param name="previewArea"></param>
    </member>
    <member name="M:UnityEditor.Editor.GetInfoString">
      <summary>
        <para>Implement this method to show asset information on top of the asset preview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.GetPreviewTitle">
      <summary>
        <para>Override this method if you want to change the label of the Preview area.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.HasPreviewGUI">
      <summary>
        <para>Override this method in subclasses if you implement OnPreviewGUI.</para>
      </summary>
      <returns>
        <para>True if this component can be Previewed in its current state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.OnInspectorGUI">
      <summary>
        <para>Implement this function to make a custom inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Implement to create your own interactive custom preview. Interactive custom previews are used in the preview area of the inspector and the object selector.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Implement to create your own custom preview for the preview area of the inspector, the headers of the primary editor, and the object selector.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.Editor.OnPreviewSettings">
      <summary>
        <para>Override this method if you want to show custom controls in the preview header.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
      <summary>
        <para>Override this method if you want to render a static preview.</para>
      </summary>
      <param name="assetPath">The asset to operate on.</param>
      <param name="subAssets">An array of all Assets at assetPath.</param>
      <param name="width">Width of the created texture.</param>
      <param name="height">Height of the created texture.</param>
      <returns>
        <para>Generated texture or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.Repaint">
      <summary>
        <para>Redraw any inspectors that shows this editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.RequiresConstantRepaint">
      <summary>
        <para>Checks if this editor requires constant repaints in its current state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.ShouldHideOpenButton">
      <summary>
        <para>Returns the visibility setting of the "open" button in the Inspector.</para>
      </summary>
      <returns>
        <para>Return true if the button should be hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.UseDefaultMargins">
      <summary>
        <para>Override this method in subclasses to return false if you don't want default margins.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorAnalytics">
      <summary>
        <para>Editor API for the EditorAnalytics feature.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalytics.enabled">
      <summary>
        <para>Returns true when EditorAnalytics is enabled.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String)">
      <summary>
        <para>This API is used for registering an Editor Analytics event. Note: This API is for internal use only and is likely change in the future. Do not use in user code.</para>
      </summary>
      <param name="eventName">Name of the event.</param>
      <param name="ver">Event version number.</param>
      <param name="maxEventPerHour">Hourly limit for this event name.</param>
      <param name="maxItems">Maximum number of items in this event.</param>
      <param name="vendorKey">Vendor key name.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String,System.Int32)">
      <summary>
        <para>This API is used for registering an Editor Analytics event. Note: This API is for internal use only and is likely change in the future. Do not use in user code.</para>
      </summary>
      <param name="eventName">Name of the event.</param>
      <param name="ver">Event version number.</param>
      <param name="maxEventPerHour">Hourly limit for this event name.</param>
      <param name="maxItems">Maximum number of items in this event.</param>
      <param name="vendorKey">Vendor key name.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object)">
      <summary>
        <para>This API is used to send an Editor Analytics event. Note: This API is for internal use only and is likely change in the future. Do not use in user code.</para>
      </summary>
      <param name="eventName">Name of the event.</param>
      <param name="parameters">Additional event data.</param>
      <param name="ver">Event version number.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object,System.Int32)">
      <summary>
        <para>This API is used to send an Editor Analytics event. Note: This API is for internal use only and is likely change in the future. Do not use in user code.</para>
      </summary>
      <param name="eventName">Name of the event.</param>
      <param name="parameters">Additional event data.</param>
      <param name="ver">Event version number.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SetEventWithLimitEndPoint(System.String,System.String,System.Int32)">
      <summary>
        <para>Use this API to set the event end point URL. Note: This API is for internal use only and is likely change in the future. Do not use in user code.</para>
      </summary>
      <param name="eventName">Name of the event.</param>
      <param name="ver">Event version number.</param>
      <param name="endPoint">Event end point URL.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SetEventWithLimitPriority(System.String,UnityEngine.Analytics.AnalyticsEventPriority,System.Int32)">
      <summary>
        <para>Use the API to set the event property. Note: This API is for internal use only and is likely change in the future. Do not use in user code.</para>
      </summary>
      <param name="eventName">Name of the event.</param>
      <param name="ver">Event version number.</param>
      <param name="eventPriority">Event priority.</param>
    </member>
    <member name="T:UnityEditor.EditorAnalyticsSessionInfo">
      <summary>
        <para>Provides access to Editor Analytics session information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.activeElapsedTime">
      <summary>
        <para>The total time, in milliseconds, that the user interacted with the Editor since the beginning of the current session.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.elapsedTime">
      <summary>
        <para>The length of the current session, in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.focusedElapsedTime">
      <summary>
        <para>The total time, in milliseconds, that the Editor has been in focus during the current session.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.id">
      <summary>
        <para>A random, unique GUID identifying the current Editor session.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.playbackElapsedTime">
      <summary>
        <para>The total time, in milliseconds, that the Editor has been in playmode during the current session.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.sessionCount">
      <summary>
        <para>The number of Editor sessions that have occurred since the current instance of the Unity Editor was installed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.userId">
      <summary>
        <para>A random GUID uniquely identifying an Editor installation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication">
      <summary>
        <para>Main Application class.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.applicationContentsPath">
      <summary>
        <para>Path to the Unity editor contents folder. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.applicationPath">
      <summary>
        <para>Returns the path to the Unity editor application. (Read Only)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.contextualPropertyMenu">
      <summary>
        <para>Callback raised whenever the user contex-clicks on a property in an Inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.currentScene">
      <summary>
        <para>The path of the Scene that the user has currently open (Will be an empty string if no Scene is currently open). (Read Only)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.delayCall">
      <summary>
        <para>Delegate which is called once after all inspectors update.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.hierarchyChanged(System.Action)">
      <summary>
        <para>Event that is raised when an object or group of objects in the hierarchy changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEditor.EditorApplication.hierarchyWindowChanged">
      <summary>
        <para>A callback to be raised when an object in the hierarchy changes.

Each time an object is (or a group of objects are) created, renamed, parented, unparented or destroyed this callback is raised.
</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.hierarchyWindowItemOnGUI">
      <summary>
        <para>Delegate for OnGUI events for every visible list item in the HierarchyWindow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isCompiling">
      <summary>
        <para>Is editor currently compiling scripts? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPaused">
      <summary>
        <para>Is editor currently paused?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPlaying">
      <summary>
        <para>Is editor currently in play mode?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPlayingOrWillChangePlaymode">
      <summary>
        <para>Is editor either currently in play mode, or about to switch to it? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isRemoteConnected">
      <summary>
        <para>Is editor currently connected to Unity Remote 4 client app.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isSceneDirty">
      <summary>
        <para>Is true if the currently open Scene in the editor contains unsaved modifications.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isTemporaryProject">
      <summary>
        <para>Returns true if the current project was created as a temporary project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isUpdating">
      <summary>
        <para>True if the Editor is currently refreshing the AssetDatabase.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.modifierKeysChanged">
      <summary>
        <para>Delegate for changed keyboard modifier keys.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.pauseStateChanged(System.Action`1&lt;UnityEditor.PauseState&gt;)">
      <summary>
        <para>Event that is raised whenever the Editor's pause state changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.EditorApplication.playModeStateChanged(System.Action`1&lt;UnityEditor.PlayModeStateChange&gt;)">
      <summary>
        <para>Event that is raised whenever the Editor's play mode state changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.EditorApplication.projectChanged(System.Action)">
      <summary>
        <para>Event that is raised whenever the state of the project changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEditor.EditorApplication.projectWindowChanged">
      <summary>
        <para>Callback raised whenever the state of the Project window changes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.projectWindowItemOnGUI">
      <summary>
        <para>Delegate for OnGUI events for every visible list item in the ProjectWindow.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.quitting(System.Action)">
      <summary>
        <para>Unity raises this event when the editor application is quitting.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.EditorApplication.scriptingRuntimeVersion">
      <summary>
        <para>Returns the scripting runtime version currently used by the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.searchChanged">
      <summary>
        <para>Callback raised whenever the contents of a window's search box are changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.timeSinceStartup">
      <summary>
        <para>The time since the editor was started. (Read Only)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.update">
      <summary>
        <para>Delegate for generic updates.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.wantsToQuit(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Unity raises this event when the editor application wants to quit.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Beep">
      <summary>
        <para>Plays system beep sound.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication.CallbackFunction">
      <summary>
        <para>Delegate to be called from EditorApplication callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.DirtyHierarchyWindowSorting">
      <summary>
        <para>Set the hierarchy sorting method as dirty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.EnterPlaymode">
      <summary>
        <para>Switches the editor to Play mode.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.ExecuteMenuItem(System.String)">
      <summary>
        <para>Invokes the menu item in the specified path.</para>
      </summary>
      <param name="menuItemPath"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Exit(System.Int32)">
      <summary>
        <para>Exit the Unity editor application.</para>
      </summary>
      <param name="returnValue"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.ExitPlaymode">
      <summary>
        <para>Switches the editor to Edit mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication.HierarchyWindowItemCallback">
      <summary>
        <para>Delegate to be called for every visible list item in the HierarchyWindow on every OnGUI event.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="selectionRect"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveAsyncInPlayMode(System.String)">
      <summary>
        <para>Load the given level additively in play mode asynchronously</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveInPlayMode(System.String)">
      <summary>
        <para>Load the given level additively in play mode.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAsyncInPlayMode(System.String)">
      <summary>
        <para>Load the given level in play mode asynchronously.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelInPlayMode(System.String)">
      <summary>
        <para>Load the given level in play mode.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LockReloadAssemblies">
      <summary>
        <para>Prevents loading of assemblies when it is inconvenient.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.MarkSceneDirty">
      <summary>
        <para>Explicitly mark the current opened Scene as modified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.NewEmptyScene">
      <summary>
        <para>Create a new absolutely empty Scene.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.NewScene">
      <summary>
        <para>Create a new Scene.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenProject(System.String,System.String[])">
      <summary>
        <para>Open another project.</para>
      </summary>
      <param name="projectPath">The path of a project to open.</param>
      <param name="args">Arguments to pass to command line.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenScene(System.String)">
      <summary>
        <para>Opens the Scene at path.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenSceneAdditive(System.String)">
      <summary>
        <para>Opens the Scene at path additively.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="T:UnityEditor.EditorApplication.ProjectWindowItemCallback">
      <summary>
        <para>Delegate to be called for every visible list item in the ProjectWindow on every OnGUI event.</para>
      </summary>
      <param name="guid"></param>
      <param name="selectionRect"></param>
    </member>
    <member name="M:UnityEditor.EditorApplication.QueuePlayerLoopUpdate">
      <summary>
        <para>Normally, a player loop update will occur in the editor when the Scene has been modified. This method allows you to queue a player loop update regardless of whether the Scene has been modified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.RepaintHierarchyWindow">
      <summary>
        <para>Can be used to ensure repaint of the HierarchyWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.RepaintProjectWindow">
      <summary>
        <para>Can be used to ensure repaint of the ProjectWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveAssets">
      <summary>
        <para>Saves all serializable assets that have not yet been written to disk (eg. Materials).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveCurrentSceneIfUserWantsTo">
      <summary>
        <para>Ask the user if they want to save the open Scene.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene">
      <summary>
        <para>Save the open Scene.</para>
      </summary>
      <param name="path">The file path to save at. If empty, the current open Scene will be overwritten, or if never saved before, a save dialog is shown.</param>
      <param name="saveAsCopy">If set to true, the Scene will be saved without changing the currentScene and without clearing the unsaved changes marker.</param>
      <returns>
        <para>True if the save succeeded, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene(System.String)">
      <summary>
        <para>Save the open Scene.</para>
      </summary>
      <param name="path">The file path to save at. If empty, the current open Scene will be overwritten, or if never saved before, a save dialog is shown.</param>
      <param name="saveAsCopy">If set to true, the Scene will be saved without changing the currentScene and without clearing the unsaved changes marker.</param>
      <returns>
        <para>True if the save succeeded, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene(System.String,System.Boolean)">
      <summary>
        <para>Save the open Scene.</para>
      </summary>
      <param name="path">The file path to save at. If empty, the current open Scene will be overwritten, or if never saved before, a save dialog is shown.</param>
      <param name="saveAsCopy">If set to true, the Scene will be saved without changing the currentScene and without clearing the unsaved changes marker.</param>
      <returns>
        <para>True if the save succeeded, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorApplication.SerializedPropertyCallbackFunction">
      <summary>
        <para>Delegate to be called from EditorApplication contextual inspector callbacks.</para>
      </summary>
      <param name="menu">The contextual menu which is about to be shown to the user.</param>
      <param name="property">The property for which the contextual menu is shown.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.SetTemporaryProjectKeepPath(System.String)">
      <summary>
        <para>Sets the path that Unity should store the current temporary project at, when the project is closed.</para>
      </summary>
      <param name="path">The path that the current temporary project should be relocated to when closing it.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Step">
      <summary>
        <para>Perform a single frame step.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.UnlockReloadAssemblies">
      <summary>
        <para>Must be called after LockReloadAssemblies, to reenable loading of assemblies.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorBuildSettings">
      <summary>
        <para>This class allows you to modify the Editor for an example of how to use this class.

See Also: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorBuildSettings.sceneListChanged(System.Action)">
      <summary>
        <para>A delegate called whenever EditorBuildSettings.scenes is set.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.EditorBuildSettings.scenes">
      <summary>
        <para>The list of Scenes that should be included in the build.
This is the same list of Scenes that is shown in the window. You can modify this list to set up which Scenes should be included in the build.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.AddConfigObject(System.String,UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Store a reference to a config object by name.  The object must be an asset in the project, otherwise it will not be saved when the editor is restarted or scripts are reloaded.  To avoid name conflicts with other packages, it is recommended that names are qualified by a namespace, i.e. "company.package.name".</para>
      </summary>
      <param name="name">The name of the object reference in string format. This string name must be unique within your project or the overwrite parameter must be set to true.</param>
      <param name="obj">Object reference to be stored.  This object must be persisted and not null.</param>
      <param name="overwrite">Boolean parameter used to specify that you want to overwrite an entry with the same name if one already exists.</param>
      <returns>
        <para>Throws an exception if the object is null, not persisted, or if there is a name conflict and the overwrite parameter is set to false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.GetConfigObjectNames">
      <summary>
        <para>Return a string array containing the names of all stored config object references.</para>
      </summary>
      <returns>
        <para>Returns an array of strings containing the names of all stored references.  If there are no references, an empty array will be returned.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.RemoveConfigObject(System.String)">
      <summary>
        <para>Remove a config object reference by name.</para>
      </summary>
      <param name="name">The name in string format of the config object reference to be removed. This is the name given to the object when the reference is first created. Note: This may be different than the object name as an object can be added multiple times with different names.</param>
      <returns>
        <para>Returns true if the reference was found and removed, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.TryGetConfigObject(System.String,T&amp;)">
      <summary>
        <para>Retrieve a config object reference by name.</para>
      </summary>
      <param name="name">The name in string format of the config object reference to be fetched.</param>
      <param name="result">The config object reference where the returned object will be stored. This must be an object of type Object.</param>
      <returns>
        <para>Returns true if the config object reference was found and the type matched the result parameter.  Returns false if the entry is not found, the config object reference is null, or if the type requested does not match the type stored.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorBuildSettingsScene">
      <summary>
        <para>This class is used for entries in the Scenes list, as displayed in the window. This class contains the Scene path of a Scene and an enabled flag that indicates wether the Scene is enabled in the BuildSettings window or not.

You can use this class in combination with EditorBuildSettings.scenes to populate the list of Scenes included in the build via script. This is useful when creating custom editor scripts to automate your build pipeline.

See EditorBuildSettings.scenes for an example script.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorBuildSettingsScene.enabled">
      <summary>
        <para>Whether this Scene is enabled in the for an example of how to use this class.

See Also: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorBuildSettingsScene.path">
      <summary>
        <para>The file path of the Scene as listed in the Editor for an example of how to use this class.

See Also: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorCurveBinding">
      <summary>
        <para>Defines how a curve is attached to an object that it controls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorCurveBinding.path">
      <summary>
        <para>The transform path of the object that is animated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorCurveBinding.propertyName">
      <summary>
        <para>The name of the property to be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorCurveBinding.type">
      <summary>
        <para>The type of the property to be animated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.DiscreteCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Creates a preconfigured binding for a curve where values should not be interpolated.</para>
      </summary>
      <param name="inPath">The transform path to the object to animate.</param>
      <param name="inType">The type of the object to animate.</param>
      <param name="inPropertyName">The name of the property to animate on the object.</param>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.FloatCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Creates a preconfigured binding for a float curve.</para>
      </summary>
      <param name="inPath">The transform path to the object to animate.</param>
      <param name="inType">The type of the object to animate.</param>
      <param name="inPropertyName">The name of the property to animate on the object.</param>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.PPtrCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Creates a preconfigured binding for a curve that points to an Object.</para>
      </summary>
      <param name="inPath">The transform path to the object to animate.</param>
      <param name="inType">The type of the object to animate.</param>
      <param name="inPropertyName">The name of the property to animate on the object.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI">
      <summary>
        <para>These work pretty much like the normal GUI functions - and also have matching implementations in EditorGUILayout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.actionKey">
      <summary>
        <para>Is the platform-dependent "action" modifier key held down? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.indentLevel">
      <summary>
        <para>The indent level of the field labels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.showMixedValue">
      <summary>
        <para>Makes the following controls give the appearance of editing multiple different values.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginChangeCheck">
      <summary>
        <para>Check if any control was changed inside a block of code.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginDisabledGroup(System.Boolean)">
      <summary>
        <para>Create a group of controls that can be disabled.</para>
      </summary>
      <param name="disabled">Boolean specifying if the controls inside the group should be disabled.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="menuAction">The action that happens when you click the icon.</param>
      <param name="menuIcon">Optional GUIStyle for icon.</param>
      <param name="position">Rectangle on the screen to use for the control.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="menuAction">The action that happens when you click the icon.</param>
      <param name="menuIcon">Optional GUIStyle for icon.</param>
      <param name="position">Rectangle on the screen to use for the control.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginProperty(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
      <summary>
        <para>Create a Property wrapper, useful for making regular GUI controls work with SerializedProperty.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use for the control, including label if applicable.</param>
      <param name="label">Optional label in front of the slider. Use null to use the name from the SerializedProperty. Use GUIContent.none to not display a label.</param>
      <param name="property">The SerializedProperty to use for the control.</param>
      <returns>
        <para>The actual label to use for the control.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.Bounds)">
      <summary>
        <para>Makes Center and Extents field for entering a Bounds.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Bounds)">
      <summary>
        <para>Makes Center and Extents field for entering a Bounds.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.BoundsInt)">
      <summary>
        <para>Makes Position and Size field for entering a BoundsInt.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,System.String,UnityEngine.BoundsInt)">
      <summary>
        <para>Makes Position and Size field for entering a BoundsInt.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.BoundsInt)">
      <summary>
        <para>Makes Position and Size field for entering a BoundsInt.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Get whether a SerializedProperty's inspector GUI can be cached.</para>
      </summary>
      <param name="property">The SerializedProperty in question.</param>
      <returns>
        <para>Whether the property's inspector GUI can be cached.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUI.ChangeCheckScope">
      <summary>
        <para>Check if any control was changed inside a block of code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.ChangeCheckScope.changed">
      <summary>
        <para>True if GUI.changed was set to true, otherwise false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.ChangeCheckScope.#ctor">
      <summary>
        <para>Begins a ChangeCheckScope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Makes a field for selecting a Color.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,System.String,UnityEngine.Color)">
      <summary>
        <para>Makes a field for selecting a Color.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color)">
      <summary>
        <para>Makes a field for selecting a Color.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Makes a field for selecting a Color.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig)">
      <summary>
        <para>Makes a field for selecting a Color.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="label">Optional label to display in front of the field. Pass [[GUIContent.none] to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a field for editing an AnimationCurve.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="label">Optional label to display in front of the field. Pass [[GUIContent.none] to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField">
      <summary>
        <para>Makes a delayed text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="property">The double property to edit.</param>
      <param name="label">Optional label to display in front of the double field. Pass GUIContent.none to hide label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a delayed text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="property">The float property to edit.</param>
      <param name="label">Optional label to display in front of the float field. Pass GUIContent.none to hide label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="property">The int property to edit.</param>
      <param name="label">Optional label to display in front of the int field. Pass GUIContent.none to hide label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a delayed text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a delayed text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="property">The text property to edit.</param>
      <param name="label">Optional label to display in front of the int field. Pass GUIContent.none to hide label.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.DisabledGroupScope">
      <summary>
        <para>Create a group of controls that can be disabled.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.DisabledGroupScope.#ctor(System.Boolean)">
      <summary>
        <para>Create a new DisabledGroupScope and begin the corresponding group.</para>
      </summary>
      <param name="disabled">Boolean specifying if the controls inside the group should be disabled.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.DisabledScope">
      <summary>
        <para>Create a group of controls that can be disabled.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.DisabledScope.#ctor(System.Boolean)">
      <summary>
        <para>Create a new DisabledScope and begin the corresponding group.</para>
      </summary>
      <param name="disabled">Boolean specifying if the controls inside the group should be disabled.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering doubles.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the double field.</param>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask,System.Single)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single)">
      <summary>
        <para>Draws the texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="mat">Material to be used when drawing the texture.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">The mip-level to sample. If negative, the texture is sampled normally.
Sets material's _Mip property.</param>
      <param name="colorWriteMask">Specifies which color components of image will get written. Sets material's _ColorMask property.</param>
      <param name="exposure">Specifies the exposure for the texture. Sets material's _Exposure property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawRect(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Draws a filled rectangle of color at the specified position and size within the current editor window.</para>
      </summary>
      <param name="rect">The position and size of the rectangle to draw.</param>
      <param name="color">The color of the rectange.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single,System.Single)">
      <summary>
        <para>Draws the alpha channel of a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">What mip-level to sample. If negative, texture will be sampled normally.
It sets material _Mip property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Draws the alpha channel of a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">What mip-level to sample. If negative, texture will be sampled normally.
It sets material _Mip property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode)">
      <summary>
        <para>Draws the alpha channel of a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">What mip-level to sample. If negative, texture will be sampled normally.
It sets material _Mip property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single)">
      <summary>
        <para>Draws the alpha channel of a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.</param>
      <param name="mipLevel">What mip-level to sample. If negative, texture will be sampled normally.
It sets material _Mip property.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType)">
      <summary>
        <para>Makes a button that reacts to mouse down, for displaying your own dropdown content.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="focusType">Whether the button should be selectable by keyboard or not.</param>
      <param name="style">Optional style to use.</param>
      <returns>
        <para>true when the user clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a button that reacts to mouse down, for displaying your own dropdown content.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="focusType">Whether the button should be selectable by keyboard or not.</param>
      <param name="style">Optional style to use.</param>
      <returns>
        <para>true when the user clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String)">
      <summary>
        <para>Draws a label with a drop shadow.</para>
      </summary>
      <param name="position">Where to show the label.</param>
      <param name="content">Text to show
@style style to use.</param>
      <param name="text"></param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Draws a label with a drop shadow.</para>
      </summary>
      <param name="position">Where to show the label.</param>
      <param name="content">Text to show
@style style to use.</param>
      <param name="text"></param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Draws a label with a drop shadow.</para>
      </summary>
      <param name="position">Where to show the label.</param>
      <param name="content">Text to show
@style style to use.</param>
      <param name="text"></param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Draws a label with a drop shadow.</para>
      </summary>
      <param name="position">Where to show the label.</param>
      <param name="content">Text to show
@style style to use.</param>
      <param name="text"></param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndChangeCheck">
      <summary>
        <para>Ends a change check started with BeginChangeCheck ().</para>
      </summary>
      <returns>
        <para>True if GUI.changed was set to true, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndDisabledGroup">
      <summary>
        <para>Ends a disabled group started with BeginDisabledGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndFoldoutHeaderGroup">
      <summary>
        <para>Closes a group started with BeginFoldoutHeaderGroup.
See Also: EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndProperty">
      <summary>
        <para>Ends a Property wrapper started with BeginProperty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the enum flags field.</param>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value (Only supports enum values for enum types with int as the underlying type).</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes a field for enum based masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Caption/label for the control.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>A selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes a field for enum based masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Caption/label for the control.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>A selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes a field for enum based masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Caption/label for the control.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>A selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes a field for enum based masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Caption/label for the control.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>A selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes a field for enum based masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Caption/label for the control.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>A selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes a field for enum based masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Caption/label for the control.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>A selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>This method is obsolete. Use EditorGUI.EnumFlagsField instead.

Makes an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an enum popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering floats.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FocusTextInControl(System.String)">
      <summary>
        <para>Move keyboard focus to a named text field and begin editing of the content.</para>
      </summary>
      <param name="name">Name set using GUI.SetNextControlName.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the arrow and label.</param>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Should the label be a clickable part of the control?</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,System.Boolean)">
      <summary>
        <para>Get the height needed for a PropertyField control.</para>
      </summary>
      <param name="property">Height of the property area.</param>
      <param name="label">Descriptive text or image.</param>
      <param name="includeChildren">Should the returned height include the height of child properties?</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedPropertyType,UnityEngine.GUIContent)">
      <summary>
        <para>Get the height needed for a PropertyField control.</para>
      </summary>
      <param name="property">Height of the property area.</param>
      <param name="label">Descriptive text or image.</param>
      <param name="includeChildren">Should the returned height include the height of child properties?</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty)">
      <summary>
        <para>Get the height needed for a PropertyField control.</para>
      </summary>
      <param name="property">Height of the property area.</param>
      <param name="label">Descriptive text or image.</param>
      <param name="includeChildren">Should the returned height include the height of child properties?</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Get the height needed for a PropertyField control.</para>
      </summary>
      <param name="property">Height of the property area.</param>
      <param name="label">Descriptive text or image.</param>
      <param name="includeChildren">Should the returned height include the height of child properties?</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Get the height needed for a PropertyField control.</para>
      </summary>
      <param name="property">Height of the property area.</param>
      <param name="label">Descriptive text or image.</param>
      <param name="includeChildren">Should the returned height include the height of child properties?</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.Gradient)">
      <summary>
        <para>Makes a field for editing a Gradient.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="gradient">The gradient to edit.</param>
      <param name="hdr">Display the HDR Gradient Editor.</param>
      <param name="colorSpace">Display the gradient and Gradient Editor in this color space.</param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,System.String,UnityEngine.Gradient)">
      <summary>
        <para>Makes a field for editing a Gradient.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="gradient">The gradient to edit.</param>
      <param name="hdr">Display the HDR Gradient Editor.</param>
      <param name="colorSpace">Display the gradient and Gradient Editor in this color space.</param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient)">
      <summary>
        <para>Makes a field for editing a Gradient.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="gradient">The gradient to edit.</param>
      <param name="hdr">Display the HDR Gradient Editor.</param>
      <param name="colorSpace">Display the gradient and Gradient Editor in this color space.</param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean)">
      <summary>
        <para>Makes a field for editing a Gradient.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="gradient">The gradient to edit.</param>
      <param name="hdr">Display the HDR Gradient Editor.</param>
      <param name="colorSpace">Display the gradient and Gradient Editor in this color space.</param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.ColorSpace)">
      <summary>
        <para>Makes a field for editing a Gradient.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="gradient">The gradient to edit.</param>
      <param name="hdr">Display the HDR Gradient Editor.</param>
      <param name="colorSpace">Display the gradient and Gradient Editor in this color space.</param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a label for some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="labelPosition">Rectangle on the screen to use for the label.</param>
      <param name="label">Label to show for the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="style">Optional GUIStyle to use for the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Makes a label for some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="labelPosition">Rectangle on the screen to use for the label.</param>
      <param name="label">Label to show for the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="style">Optional GUIStyle to use for the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label for some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="labelPosition">Rectangle on the screen to use for the label.</param>
      <param name="label">Label to show for the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="style">Optional GUIStyle to use for the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HelpBox(UnityEngine.Rect,System.String,UnityEditor.MessageType)">
      <summary>
        <para>Makes a help box with a message to the user.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the help box within.</param>
      <param name="message">The message text.</param>
      <param name="type">The type of message.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.IndentLevelScope">
      <summary>
        <para>Scope for managing the indent level of the field labels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.IndentLevelScope.#ctor">
      <summary>
        <para>Creates an IndentLevelScope and increases the EditorGUI indent level.</para>
      </summary>
      <param name="increment">The EditorGUI indent level will be increased by this amount inside the scope.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IndentLevelScope.#ctor(System.Int32)">
      <summary>
        <para>Creates an IndentLevelScope and increases the EditorGUI indent level.</para>
      </summary>
      <param name="increment">The EditorGUI indent level will be increased by this amount inside the scope.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar">
      <summary>
        <para>Makes an inspector-window-like titlebar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the titlebar.</param>
      <param name="foldout">The foldout state shown with the arrow.</param>
      <param name="targetObj">The object (for example a component) that the titlebar is for.</param>
      <param name="targetObjs">The objects that the titlebar is for.</param>
      <param name="expandable">Whether this editor should display a foldout arrow in order to toggle the display of its properties.</param>
      <returns>
        <para>The foldout state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar">
      <summary>
        <para>Makes an inspector-window-like titlebar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the titlebar.</param>
      <param name="foldout">The foldout state shown with the arrow.</param>
      <param name="targetObj">The object (for example a component) that the titlebar is for.</param>
      <param name="targetObjs">The objects that the titlebar is for.</param>
      <param name="expandable">Whether this editor should display a foldout arrow in order to toggle the display of its properties.</param>
      <returns>
        <para>The foldout state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Makes an inspector-window-like titlebar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the titlebar.</param>
      <param name="foldout">The foldout state shown with the arrow.</param>
      <param name="targetObj">The object (for example a component) that the titlebar is for.</param>
      <param name="targetObjs">The objects that the titlebar is for.</param>
      <param name="expandable">Whether this editor should display a foldout arrow in order to toggle the display of its properties.</param>
      <returns>
        <para>The foldout state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object[],System.Boolean)">
      <summary>
        <para>Makes an inspector-window-like titlebar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the titlebar.</param>
      <param name="foldout">The foldout state shown with the arrow.</param>
      <param name="targetObj">The object (for example a component) that the titlebar is for.</param>
      <param name="targetObjs">The objects that the titlebar is for.</param>
      <param name="expandable">Whether this editor should display a foldout arrow in order to toggle the display of its properties.</param>
      <returns>
        <para>The foldout state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Makes a text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Makes a text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Makes a text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the int field.</param>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[])">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[])">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Makes an integer popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para></para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The SerializedProperty to use for the control.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct   mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="label">Optional label in front of the field.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent)">
      <summary>
        <para></para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The SerializedProperty to use for the control.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option. If optionValues a direct   mapping of selectedValue to displayedOptions is assumed.</param>
      <param name="label">Optional label in front of the field.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Makes a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Makes a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Makes a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label field.</param>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="style">Style information (color, etc) for displaying the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Makes a layer selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Makes a layer selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Makes a layer selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a layer selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a layer selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a layer selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.Int64)">
      <summary>
        <para>Makes a text field for entering long integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the long field.</param>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64)">
      <summary>
        <para>Makes a text field for entering long integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the long field.</param>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64)">
      <summary>
        <para>Makes a text field for entering long integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the long field.</param>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering long integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the long field.</param>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field for entering long integers.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the long field.</param>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Makes a field for masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Label for the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="displayedOptions">A string array containing the labels for each flag.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[])">
      <summary>
        <para>Makes a field for masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Label for the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="displayedOptions">A string array containing the labels for each flag.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[])">
      <summary>
        <para>Makes a field for masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Label for the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="displayedOptions">A string array containing the labels for each flag.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a field for masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Label for the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="displayedOptions">A string array containing the labels for each flag.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a field for masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Label for the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="displayedOptions">A string array containing the labels for each flag.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a field for masks.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for this control.</param>
      <param name="label">Label for the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="displayedOptions">A string array containing the labels for each flag.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.GUIContent,UnityEngine.Rect,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Makes a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Makes a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.String,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Makes a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Makes a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Single[])">
      <summary>
        <para>Makes a multi-control with text fields for entering multiple floats in the same line.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="subLabels">Array with small labels to show in front of each float field. There is room for one letter per field only.</param>
      <param name="values">Array with the values to edit.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent[],System.Single[])">
      <summary>
        <para>Makes a multi-control with text fields for entering multiple floats in the same line.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the float field.</param>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="subLabels">Array with small labels to show in front of each float field. There is room for one letter per field only.</param>
      <param name="values">Array with the values to edit.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiIntField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Makes a multi-control with text fields for entering multiple integers in the same line.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the integer field.</param>
      <param name="subLabels">Array with small labels to show in front of each int field. There is room for one letter per field only.</param>
      <param name="values">Array with the values to edit.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a multi-control with several property fields in the same line.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the multi-property field.</param>
      <param name="valuesIterator">The SerializedProperty of the first property to make a control for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="subLabels">Array with small labels to show in front of each float field. There is room for one letter per field only.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty)">
      <summary>
        <para>Makes a multi-control with several property fields in the same line.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the multi-property field.</param>
      <param name="valuesIterator">The SerializedProperty of the first property to make a control for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="subLabels">Array with small labels to show in front of each float field. There is room for one letter per field only.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label to display in front of the field. Pass GUIContent.none to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label to display in front of the field. Pass GUIContent.none to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label to display in front of the field. Pass GUIContent.none to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent)">
      <summary>
        <para>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label to display in front of the field. Pass GUIContent.none to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Makes a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the password field.</param>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Makes a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the password field.</param>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Makes a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the password field.</param>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the password field.</param>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the password field.</param>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the password field.</param>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[])">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a generic popup selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a label in front of some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="label">Label to show in front of the control.</param>
      <param name="style">Style to use for the label.</param>
      <returns>
        <para>Rectangle on the screen to use just for the control itself.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label in front of some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="label">Label to show in front of the control.</param>
      <param name="style">Style to use for the label.</param>
      <returns>
        <para>Rectangle on the screen to use just for the control itself.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a label in front of some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="label">Label to show in front of the control.</param>
      <param name="style">Style to use for the label.</param>
      <returns>
        <para>Rectangle on the screen to use just for the control itself.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a label in front of some control.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the label and the control.</param>
      <param name="id">The unique ID of the control. If none specified, the ID of the following control is used.</param>
      <param name="label">Label to show in front of the control.</param>
      <param name="style">Style to use for the label.</param>
      <returns>
        <para>Rectangle on the screen to use just for the control itself.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ProgressBar(UnityEngine.Rect,System.Single,System.String)">
      <summary>
        <para>Makes a progress bar.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use in total for both the control.</param>
      <param name="value">Value that is shown.</param>
      <param name="position"></param>
      <param name="text"></param>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Boolean)">
      <summary>
        <para>Use this to make a field for a SerializedProperty in the Editor.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the property field.</param>
      <param name="property">The SerializedProperty to make a field for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="includeChildren">If true the property including children is drawn; otherwise only the control itself (such as only a foldout but nothing below it).</param>
      <returns>
        <para>True if the property has children and is expanded and includeChildren was set to false; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Use this to make a field for a SerializedProperty in the Editor.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the property field.</param>
      <param name="property">The SerializedProperty to make a field for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="includeChildren">If true the property including children is drawn; otherwise only the control itself (such as only a foldout but nothing below it).</param>
      <returns>
        <para>True if the property has children and is expanded and includeChildren was set to false; otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUI.PropertyScope">
      <summary>
        <para>Create a Property wrapper, useful for making regular GUI controls work with SerializedProperty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.PropertyScope.content">
      <summary>
        <para>The actual label to use for the control.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
      <summary>
        <para>Create a new PropertyScope and begin the corresponding property.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use for the control, including label if applicable.</param>
      <param name="label">Label in front of the slider. Use null to use the name from the SerializedProperty. Use GUIContent.none to not display a label.</param>
      <param name="property">The SerializedProperty to use for the control.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.Rect)">
      <summary>
        <para>Makes an X, Y, W, and H field for entering a Rect.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,System.String,UnityEngine.Rect)">
      <summary>
        <para>Makes an X, Y, W, and H field for entering a Rect.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Rect)">
      <summary>
        <para>Makes an X, Y, W, and H field for entering a Rect.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField">
      <summary>
        <para>Makes an X, Y, W, and H for Rect using SerializedProperty (not public).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.RectInt)">
      <summary>
        <para>Makes an X, Y, W, and H field for entering a RectInt.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,System.String,UnityEngine.RectInt)">
      <summary>
        <para>Makes an X, Y, W, and H field for entering a RectInt.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.RectInt)">
      <summary>
        <para>Makes an X, Y, W, and H field for entering a RectInt.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String)">
      <summary>
        <para>Makes a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">The text to show.</param>
      <param name="style">Optional GUIStyle.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">The text to show.</param>
      <param name="style">Optional GUIStyle.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.String,System.Single,System.Single,System.Single)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,System.Single,System.Single)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,System.String)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent)">
      <summary>
        <para>Makes a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Makes a tag selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Makes a tag selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Makes a tag selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a tag selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a tag selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a tag selection field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Makes a text area.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text area.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Makes a text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Makes a text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Makes a text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a text field.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Makes a toggle.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean)">
      <summary>
        <para>Makes a toggle.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a toggle.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a toggle.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Makes a toggle.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a toggle.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean)">
      <summary>
        <para>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <returns>
        <para>The value set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <returns>
        <para>The value set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <returns>
        <para>The value set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toggle.</param>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <returns>
        <para>The value set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,System.String,UnityEngine.Vector2)">
      <summary>
        <para>Makes an X and Y field for entering a Vector2.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2)">
      <summary>
        <para>Makes an X and Y field for entering a Vector2.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,System.String,UnityEngine.Vector2Int)">
      <summary>
        <para>Makes an X and Y integer field for entering a Vector2Int.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2Int)">
      <summary>
        <para>Makes an X and Y integer field for entering a Vector2Int.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,System.String,UnityEngine.Vector3)">
      <summary>
        <para>Makes an X, Y, and Z field for entering a Vector3.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3)">
      <summary>
        <para>Makes an X, Y, and Z field for entering a Vector3.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,System.String,UnityEngine.Vector3Int)">
      <summary>
        <para>Makes an X, Y, and Z integer field for entering a Vector3Int.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3Int)">
      <summary>
        <para>Makes an X, Y, and Z integer field for entering a Vector3Int.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector4Field(UnityEngine.Rect,System.String,UnityEngine.Vector4)">
      <summary>
        <para>Makes an X, Y, Z, and W field for entering a Vector4.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the field.</param>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout">
      <summary>
        <para>Auto laid out version of EditorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginBuildTargetSelectionGrouping">
      <summary>
        <para>Begin a build target grouping and get the selected BuildTargetGroup back.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFadeGroup(System.Single)">
      <summary>
        <para>Begins a group that can be be hidden/shown and the transition will be animated.</para>
      </summary>
      <param name="value">A value between 0 and 1, 0 being hidden, and 1 being fully visible.</param>
      <returns>
        <para>If the group is visible or not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="menuAction">The action that happens when you click the icon.</param>
      <param name="menuIcon">Optional GUIStyle for icon.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="menuAction">The action that happens when you click the icon.</param>
      <param name="menuIcon">Optional GUIStyle for icon.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a horizontal group and get its rect back.</para>
      </summary>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a horizontal group and get its rect back.</para>
      </summary>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(System.String,System.Boolean)">
      <summary>
        <para>Begin a vertical group with a toggle to enable or disable all the controls within at once.</para>
      </summary>
      <param name="label">Label to show above the toggled controls.</param>
      <param name="toggle">Enabled state of the toggle group.</param>
      <returns>
        <para>The enabled state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Begin a vertical group with a toggle to enable or disable all the controls within at once.</para>
      </summary>
      <param name="label">Label to show above the toggled controls.</param>
      <param name="toggle">Enabled state of the toggle group.</param>
      <returns>
        <para>The enabled state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical group and get its rect back.</para>
      </summary>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties.
        Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical group and get its rect back.</para>
      </summary>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties.
        Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical">
      <summary>
        <para>Begin a vertical group and get its rect back.</para>
      </summary>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties.
        Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make Center &amp; Extents field for entering a Bounds.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(System.String,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make Center &amp; Extents field for entering a Bounds.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.GUIContent,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make Center &amp; Extents field for entering a Bounds.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make Position &amp; Size field for entering a BoundsInt.</para>
      </summary>
      <param name="label">Make Position &amp; Size field for entering a Bounds.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(System.String,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make Position &amp; Size field for entering a BoundsInt.</para>
      </summary>
      <param name="label">Make Position &amp; Size field for entering a Bounds.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.GUIContent,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make Position &amp; Size field for entering a BoundsInt.</para>
      </summary>
      <param name="label">Make Position &amp; Size field for entering a Bounds.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for selecting a Color.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for selecting a Color.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for selecting a Color.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for selecting a Color.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for selecting a Color.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The color to edit.</param>
      <param name="showEyedropper">If true, the color picker should show the eyedropper control. If false, don't show it.</param>
      <param name="showAlpha">If true, allow the user to set an alpha value for the color. If false, hide the alpha component.</param>
      <param name="hdr">If true, treat the color as an HDR value. If false, treat it as a standard LDR value.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>The color selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The curve edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="property">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="label">Optional label to display in front of the field. Pass [[GUIContent.none] to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing an AnimationCurve.</para>
      </summary>
      <param name="property">The curve to edit.</param>
      <param name="color">The color to show the curve with.</param>
      <param name="ranges">Optional rectangle that the curve is restrained within.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="label">Optional label to display in front of the field. Pass [[GUIContent.none] to hide the label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the double field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="property">The double property to edit.</param>
      <param name="label">Optional label to display in front of the double field. Pass GUIContent.none to hide label.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField">
      <summary>
        <para>Make a delayed text field for entering doubles.</para>
      </summary>
      <param name="property">The double property to edit.</param>
      <param name="label">Optional label to display in front of the double field. Pass GUIContent.none to hide label.</param>
      <param name="options">
          An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
          See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
          GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
        </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the float field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="property">The float property to edit.</param>
      <param name="label">Optional label to display in front of the float field. Pass GUIContent.none to hide label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering floats.</para>
      </summary>
      <param name="property">The float property to edit.</param>
      <param name="label">Optional label to display in front of the float field. Pass GUIContent.none to hide label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the int field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="property">The int property to edit.</param>
      <param name="label">Optional label to display in front of the int field. Pass GUIContent.none to hide label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field for entering integers.</para>
      </summary>
      <param name="property">The int property to edit.</param>
      <param name="label">Optional label to display in front of the int field. Pass GUIContent.none to hide label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user. Note that the return value will not change until the user has pressed enter or focus is moved away from the text field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="property">The text property to edit.</param>
      <param name="label">Optional label to display in front of the int field. Pass GUIContent.none to hide label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a delayed text field.</para>
      </summary>
      <param name="property">The text property to edit.</param>
      <param name="label">Optional label to display in front of the int field. Pass GUIContent.none to hide label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering double values.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering double values.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering double values.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering double values.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering double values.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering double values.</para>
      </summary>
      <param name="label">Optional label to display in front of the double field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a button that reacts to mouse down, for displaying your own dropdown content.</para>
      </summary>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="focusType">Whether the button should be selectable by keyboard or not.</param>
      <param name="style">Optional style to use.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the user clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a button that reacts to mouse down, for displaying your own dropdown content.</para>
      </summary>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="focusType">Whether the button should be selectable by keyboard or not.</param>
      <param name="style">Optional style to use.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the user clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbar(UnityEditor.EditorTools.EditorTool[])">
      <summary>
        <para>Makes a toolbar populated with the specified collection of editor tools.</para>
      </summary>
      <param name="tools">The collection of editor tools for the toolbar.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbar(System.Collections.Generic.IList`1&lt;T&gt;)">
      <summary>
        <para>Makes a toolbar populated with the specified collection of editor tools.</para>
      </summary>
      <param name="tools">The collection of editor tools for the toolbar.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.Object)">
      <summary>
        <para>Makes a toolbar populated with the collection of editor tools that match the EditorToolAttribute of the target object.</para>
      </summary>
      <param name="target">The target object.</param>
      <param name="content">An optional prefix label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.GUIContent,UnityEngine.Object)">
      <summary>
        <para>Makes a toolbar populated with the collection of editor tools that match the EditorToolAttribute of the target object.</para>
      </summary>
      <param name="target">The target object.</param>
      <param name="content">An optional prefix label.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndBuildTargetSelectionGrouping">
      <summary>
        <para>Close a group started with BeginBuildTargetSelectionGrouping.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndFadeGroup">
      <summary>
        <para>Closes a group started with BeginFadeGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndFoldoutHeaderGroup">
      <summary>
        <para>Closes a group started with BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndHorizontal">
      <summary>
        <para>Close a group started with BeginHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndScrollView">
      <summary>
        <para>Ends a scrollview started with a call to BeginScrollView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndToggleGroup">
      <summary>
        <para>Close a group started with BeginToggleGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndVertical">
      <summary>
        <para>Close a group started with BeginVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Displays a menu with an option for every value of the enum type when clicked.</para>
      </summary>
      <param name="label">Optional label to display in front of the enum flags field.</param>
      <param name="enumValue">Enum flags value.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <returns>
        <para>The enum flags value modified by the user. This is a selection BitMask where each bit represents an Enum value index. (Note this returned value is not itself an Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make a field for enum based masks.</para>
      </summary>
      <param name="label">Prefix label for this field.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make a field for enum based masks.</para>
      </summary>
      <param name="label">Prefix label for this field.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make a field for enum based masks.</para>
      </summary>
      <param name="label">Prefix label for this field.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make a field for enum based masks.</para>
      </summary>
      <param name="label">Prefix label for this field.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make a field for enum based masks.</para>
      </summary>
      <param name="label">Prefix label for this field.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make a field for enum based masks.</para>
      </summary>
      <param name="label">Prefix label for this field.</param>
      <param name="enumValue">Enum to use for the flags.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">Optional layout options.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">Optional layout options.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">Optional layout options.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.

Make an enum popup selection field for a bitmask.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum options the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">Optional layout options.</param>
      <returns>
        <para>The enum options that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an enum popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selected">The enum option the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Set to true to include Enum values with ObsoleteAttribute. Set to false to exclude Enum values with ObsoleteAttribute.</param>
      <param name="checkEnabled">Method called for each Enum value displayed. The specified method should return true if the option can be selected, false otherwise.</param>
      <returns>
        <para>The enum option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.FadeGroupScope">
      <summary>
        <para>Begins a group that can be be hidden/shown and the transition will be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.FadeGroupScope.visible">
      <summary>
        <para>Whether the group is visible.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FadeGroupScope.#ctor(System.Single)">
      <summary>
        <para>Create a new FadeGroupScope and begin the corresponding group.</para>
      </summary>
      <param name="value">A value between 0 and 1, 0 being hidden, and 1 being fully visible.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering float values.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering float values.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering float values.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering float values.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering float values.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering float values.</para>
      </summary>
      <param name="label">Optional label to display in front of the float field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Specifies whether clicking the label toggles the foldout state. The default value is false. Set to true to include the label in the clickable area.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Specifies whether clicking the label toggles the foldout state. The default value is false. Set to true to include the label in the clickable area.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Specifies whether clicking the label toggles the foldout state. The default value is false. Set to true to include the label in the clickable area.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Specifies whether clicking the label toggles the foldout state. The default value is false. Set to true to include the label in the clickable area.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Specifies whether clicking the label toggles the foldout state. The default value is false. Set to true to include the label in the clickable area.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label with a foldout arrow to the left of it.</para>
      </summary>
      <param name="foldout">The shown foldout state.</param>
      <param name="content">The label to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="toggleOnLabelClick">Specifies whether clicking the label toggles the foldout state. The default value is false. Set to true to include the label in the clickable area.</param>
      <returns>
        <para>The foldout state selected by the user. If true, you should render sub-objects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Get a rect for an Editor control.</para>
      </summary>
      <param name="hasLabel">Optional boolean to specify if the control has a label. Default is true.</param>
      <param name="height">The height in pixels of the control. Default is EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Optional GUIStyle to use for the control.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Get a rect for an Editor control.</para>
      </summary>
      <param name="hasLabel">Optional boolean to specify if the control has a label. Default is true.</param>
      <param name="height">The height in pixels of the control. Default is EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Optional GUIStyle to use for the control.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Get a rect for an Editor control.</para>
      </summary>
      <param name="hasLabel">Optional boolean to specify if the control has a label. Default is true.</param>
      <param name="height">The height in pixels of the control. Default is EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Optional GUIStyle to use for the control.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Get a rect for an Editor control.</para>
      </summary>
      <param name="hasLabel">Optional boolean to specify if the control has a label. Default is true.</param>
      <param name="height">The height in pixels of the control. Default is EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Optional GUIStyle to use for the control.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing a Gradient.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The gradient to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr"></param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(System.String,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing a Gradient.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The gradient to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr"></param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing a Gradient.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The gradient to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr"></param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for editing a Gradient.</para>
      </summary>
      <param name="label">Optional label to display in front of the field.</param>
      <param name="value">The gradient to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr"></param>
      <returns>
        <para>The gradient edited by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType)">
      <summary>
        <para>Make a help box with a message to the user.</para>
      </summary>
      <param name="message">The message text.</param>
      <param name="type">The type of message.</param>
      <param name="wide">If true, the box will cover the whole width of the window; otherwise it will cover the controls part only.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType,System.Boolean)">
      <summary>
        <para>Make a help box with a message to the user.</para>
      </summary>
      <param name="message">The message text.</param>
      <param name="type">The type of message.</param>
      <param name="wide">If true, the box will cover the whole width of the window; otherwise it will cover the controls part only.</param>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.HorizontalScope">
      <summary>
        <para>Disposable helper class for managing BeginHorizontal / EndHorizontal.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.HorizontalScope.rect">
      <summary>
        <para>The rect of the horizontal group.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HorizontalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HorizontalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object)">
      <summary>
        <para>Make an inspector-window-like titlebar.</para>
      </summary>
      <param name="foldout">The foldout state shown with the arrow.</param>
      <param name="targetObj">The object (for example a component) or objects that the titlebar is for.</param>
      <param name="targetObjs"></param>
      <returns>
        <para>The foldout state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object[])">
      <summary>
        <para>Make an inspector-window-like titlebar.</para>
      </summary>
      <param name="foldout">The foldout state shown with the arrow.</param>
      <param name="targetObj">The object (for example a component) or objects that the titlebar is for.</param>
      <param name="targetObjs"></param>
      <returns>
        <para>The foldout state selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the int field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedValue">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="property">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="property">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an integer popup selection field.</para>
      </summary>
      <param name="property">The value of the option the field shows.</param>
      <param name="displayedOptions">An array with the displayed options the user can choose from.</param>
      <param name="optionValues">An array with the values for each option.</param>
      <param name="label">Optional label in front of the field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(System.String,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change an integer value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a label field. (Useful for showing read-only info.)</para>
      </summary>
      <param name="label">Label in front of the label field.</param>
      <param name="label2">The label to show to the right.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a layer selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a layer selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a layer selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a layer selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a layer selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a layer selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="layer">The layer shown in the field.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The layer selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering long integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering long integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering long integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering long integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering long integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field for entering long integers.</para>
      </summary>
      <param name="label">Optional label to display in front of the long field.</param>
      <param name="value">The value to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for masks.</para>
      </summary>
      <param name="label">Prefix label of the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions"></param>
      <param name="style"></param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for masks.</para>
      </summary>
      <param name="label">Prefix label of the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions"></param>
      <param name="style"></param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for masks.</para>
      </summary>
      <param name="label">Prefix label of the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions"></param>
      <param name="style"></param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for masks.</para>
      </summary>
      <param name="label">Prefix label of the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions"></param>
      <param name="style"></param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for masks.</para>
      </summary>
      <param name="label">Prefix label of the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions"></param>
      <param name="style"></param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for masks.</para>
      </summary>
      <param name="label">Prefix label of the field.</param>
      <param name="mask">The current mask to display.</param>
      <param name="displayedOption">A string array containing the labels for each flag.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions"></param>
      <param name="style"></param>
      <returns>
        <para>The value modified by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.String,System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a special slider the user can use to specify a range between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="minValue">The lower value of the range the slider shows, passed by reference.</param>
      <param name="maxValue">The upper value at the range the slider shows, passed by reference.</param>
      <param name="minLimit">The limit at the left end of the slider.</param>
      <param name="maxLimit">The limit at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(System.String,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="obj">The object the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="allowSceneObjects">Allow assigning Scene objects. See Description for more info.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The object that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label in front of the field. Pass GUIContent.none to hide the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label in front of the field. Pass GUIContent.none to hide the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label in front of the field. Pass GUIContent.none to hide the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field to receive any object type.</para>
      </summary>
      <param name="property">The object reference property the field shows.</param>
      <param name="objType">The type of the objects that can be assigned.</param>
      <param name="label">Optional label in front of the field. Pass GUIContent.none to hide the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="label">Optional label to display in front of the password field.</param>
      <param name="password">The password to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The password entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a generic popup selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="selectedIndex">The index of the option the field shows.</param>
      <param name="displayedOptions">An array with the options shown in the popup.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The index of the option that has been selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String)">
      <summary>
        <para>Make a label in front of some control.</para>
      </summary>
      <param name="label">Label to show to the left of the control.</param>
      <param name="followingStyle"></param>
      <param name="labelStyle"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent)">
      <summary>
        <para>Make a label in front of some control.</para>
      </summary>
      <param name="label">Label to show to the left of the control.</param>
      <param name="followingStyle"></param>
      <param name="labelStyle"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label in front of some control.</para>
      </summary>
      <param name="label">Label to show to the left of the control.</param>
      <param name="followingStyle"></param>
      <param name="labelStyle"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label in front of some control.</para>
      </summary>
      <param name="label">Label to show to the left of the control.</param>
      <param name="followingStyle"></param>
      <param name="labelStyle"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label in front of some control.</para>
      </summary>
      <param name="label">Label to show to the left of the control.</param>
      <param name="followingStyle"></param>
      <param name="labelStyle"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a label in front of some control.</para>
      </summary>
      <param name="label">Label to show to the left of the control.</param>
      <param name="followingStyle"></param>
      <param name="labelStyle"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for SerializedProperty.</para>
      </summary>
      <param name="property">The SerializedProperty to make a field for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="includeChildren">If true the property including children is drawn; otherwise only the control itself (such as only a foldout but nothing below it).</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>True if the property has children and is expanded and includeChildren was set to false; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for SerializedProperty.</para>
      </summary>
      <param name="property">The SerializedProperty to make a field for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="includeChildren">If true the property including children is drawn; otherwise only the control itself (such as only a foldout but nothing below it).</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>True if the property has children and is expanded and includeChildren was set to false; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for SerializedProperty.</para>
      </summary>
      <param name="property">The SerializedProperty to make a field for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="includeChildren">If true the property including children is drawn; otherwise only the control itself (such as only a foldout but nothing below it).</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>True if the property has children and is expanded and includeChildren was set to false; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a field for SerializedProperty.</para>
      </summary>
      <param name="property">The SerializedProperty to make a field for.</param>
      <param name="label">Optional label to use. If not specified the label of the property itself is used. Use GUIContent.none to not display a label at all.</param>
      <param name="includeChildren">If true the property including children is drawn; otherwise only the control itself (such as only a foldout but nothing below it).</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>True if the property has children and is expanded and includeChildren was set to false; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, W &amp; H field for entering a Rect.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(System.String,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, W &amp; H field for entering a Rect.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.GUIContent,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, W &amp; H field for entering a Rect.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, W &amp; H field for entering a RectInt.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(System.String,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, W &amp; H field for entering a RectInt.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.GUIContent,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, W &amp; H field for entering a RectInt.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.ScrollViewScope">
      <summary>
        <para>Disposable helper class for managing BeginScrollView / EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Whether this ScrollView should handle scroll wheel events. (default: true).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ScrollViewScope.scrollPosition">
      <summary>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The scroll position to use.</param>
      <param name="alwaysShowHorizontal">Whether to always show the horizontal scrollbar. If false, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Whether to always show the vertical scrollbar. If false, it is only shown when the content inside the ScrollView is higher than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The scroll position to use.</param>
      <param name="alwaysShowHorizontal">Whether to always show the horizontal scrollbar. If false, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Whether to always show the vertical scrollbar. If false, it is only shown when the content inside the ScrollView is higher than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The scroll position to use.</param>
      <param name="alwaysShowHorizontal">Whether to always show the horizontal scrollbar. If false, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Whether to always show the vertical scrollbar. If false, it is only shown when the content inside the ScrollView is higher than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The scroll position to use.</param>
      <param name="alwaysShowHorizontal">Whether to always show the horizontal scrollbar. If false, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Whether to always show the vertical scrollbar. If false, it is only shown when the content inside the ScrollView is higher than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The scroll position to use.</param>
      <param name="alwaysShowHorizontal">Whether to always show the horizontal scrollbar. If false, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Whether to always show the vertical scrollbar. If false, it is only shown when the content inside the ScrollView is higher than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</para>
      </summary>
      <param name="text">The text to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</para>
      </summary>
      <param name="text">The text to show.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(System.String,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEngine.GUIContent,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="label">Optional label in front of the slider.</param>
      <param name="property">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Space">
      <summary>
        <para>Make a small space between the previous control and the following.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a tag selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a tag selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a tag selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a tag selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a tag selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a tag selection field.</para>
      </summary>
      <param name="label">Optional label in front of the field.</param>
      <param name="tag">The tag the field shows.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The tag selected by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text area.</para>
      </summary>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text area.</para>
      </summary>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field.</para>
      </summary>
      <param name="label">Optional label to display in front of the text field.</param>
      <param name="text">The text to edit.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle.</para>
      </summary>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;

See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle.</para>
      </summary>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;

See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle.</para>
      </summary>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;

See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle.</para>
      </summary>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;

See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle.</para>
      </summary>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;

See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle.</para>
      </summary>
      <param name="label">Optional label in front of the toggle.</param>
      <param name="value">The shown state of the toggle.</param>
      <param name="style">Optional GUIStyle.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;

See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The selected state of the toggle.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.ToggleGroupScope">
      <summary>
        <para>Begin a vertical group with a toggle to enable or disable all the controls within at once.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ToggleGroupScope.enabled">
      <summary>
        <para>The enabled state selected by the user.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleGroupScope.#ctor(System.String,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="label">Label to show above the toggled controls.</param>
      <param name="toggle">Enabled state of the toggle group.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleGroupScope.#ctor(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="label">Label to show above the toggled controls.</param>
      <param name="toggle">Enabled state of the toggle group.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</para>
      </summary>
      <param name="label">Label to display next to the toggle.</param>
      <param name="value">The value to edit.</param>
      <param name="labelStyle">Optional GUIStyle to use for the label.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2Field(System.String,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X &amp; Y field for entering a Vector2.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2Field(UnityEngine.GUIContent,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X &amp; Y field for entering a Vector2.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2IntField(System.String,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X &amp; Y integer field for entering a Vector2Int.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2IntField(UnityEngine.GUIContent,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X &amp; Y integer field for entering a Vector2Int.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3Field(System.String,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y &amp; Z field for entering a Vector3.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3Field(UnityEngine.GUIContent,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y &amp; Z field for entering a Vector3.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout
        properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3IntField(System.String,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y &amp; Z integer field for entering a Vector3Int.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3IntField(UnityEngine.GUIContent,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y &amp; Z integer field for entering a Vector3Int.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector4Field(System.String,UnityEngine.Vector4,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an X, Y, Z &amp; W field for entering a Vector4.</para>
      </summary>
      <param name="label">Label to display above the field.</param>
      <param name="value">The value to edit.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The value entered by the user.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.VerticalScope">
      <summary>
        <para>Disposable helper class for managing BeginVertical / EndVertical.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.VerticalScope.rect">
      <summary>
        <para>The rect of the vertical group.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.VerticalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.VerticalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility">
      <summary>
        <para>Miscellaneous helper stuff for EditorGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.currentViewWidth">
      <summary>
        <para>The width of the GUI area for the current EditorWindow or other view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.editingTextField">
      <summary>
        <para>Is a text field currently editing text?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.fieldWidth">
      <summary>
        <para>The minimum width in pixels reserved for the fields of Editor GUI controls.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.hierarchyMode">
      <summary>
        <para>Is the Editor GUI is hierarchy mode?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.isProSkin">
      <summary>
        <para>Is the user currently using the pro skin? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.labelWidth">
      <summary>
        <para>The width in pixels reserved for labels of Editor GUI controls.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.pixelsPerPoint">
      <summary>
        <para>The scale of GUI points relative to screen pixels for the current view

This value is the number of screen pixels per point of interface space. For instance, 2.0 on retina displays. Note that the value may differ from one view to the next if the views are on monitors with different UI scales.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.singleLineHeight">
      <summary>
        <para>Get the height used for a single Editor control such as a one-line EditorGUI.TextField or EditorGUI.Popup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.standardVerticalSpacing">
      <summary>
        <para>Get the height used by default for vertical spacing between controls.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.systemCopyBuffer">
      <summary>
        <para>The system copy buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.textFieldHasSelection">
      <summary>
        <para>True if a text field currently has focused and the text in it is selected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.whiteTexture">
      <summary>
        <para>Get a white texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.wideMode">
      <summary>
        <para>Is the Editor GUI currently in wide mode?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor)">
      <summary>
        <para>Add a custom mouse pointer to a control.</para>
      </summary>
      <param name="position">The rectangle the control should be shown within.</param>
      <param name="mouse">The mouse cursor to use.</param>
      <param name="controlID">ID of a target control.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor,System.Int32)">
      <summary>
        <para>Add a custom mouse pointer to a control.</para>
      </summary>
      <param name="position">The rectangle the control should be shown within.</param>
      <param name="mouse">The mouse cursor to use.</param>
      <param name="controlID">ID of a target control.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.CommandEvent(System.String)">
      <summary>
        <para>Creates an event that can be sent to another window.</para>
      </summary>
      <param name="commandName">The command to be sent.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawColorSwatch(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Draw a color swatch.</para>
      </summary>
      <param name="position">The rectangle to draw the color swatch within.</param>
      <param name="color">The color to draw.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Draw a curve swatch.</para>
      </summary>
      <param name="position">The rectangle to draw the color swatch within.</param>
      <param name="curve">The curve to draw.</param>
      <param name="property">The curve to draw as a SerializedProperty.</param>
      <param name="color">The color to draw the curve with.</param>
      <param name="bgColor">The color to draw the background with.</param>
      <param name="curveRanges">Optional parameter to specify the range of the curve which should be included in swatch.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Draw a curve swatch.</para>
      </summary>
      <param name="position">The rectangle to draw the color swatch within.</param>
      <param name="curve">The curve to draw.</param>
      <param name="property">The curve to draw as a SerializedProperty.</param>
      <param name="color">The color to draw the curve with.</param>
      <param name="bgColor">The color to draw the background with.</param>
      <param name="curveRanges">Optional parameter to specify the range of the curve which should be included in swatch.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Draw swatch with a filled region between two SerializedProperty curves.</para>
      </summary>
      <param name="position"></param>
      <param name="property"></param>
      <param name="property2"></param>
      <param name="color"></param>
      <param name="bgColor"></param>
      <param name="curveRanges"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Draw swatch with a filled region between two curves.</para>
      </summary>
      <param name="position"></param>
      <param name="curve"></param>
      <param name="curve2"></param>
      <param name="color"></param>
      <param name="bgColor"></param>
      <param name="curveRanges"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.FindTexture(System.String)">
      <summary>
        <para>Get a texture from its source filename.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetBuiltinSkin(UnityEditor.EditorSkin)">
      <summary>
        <para>Get one of the built-in GUI skins, which can be the game view, inspector or Scene view skin as chosen by the parameter.</para>
      </summary>
      <param name="skin"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetFlowLayoutedRects(UnityEngine.Rect,UnityEngine.GUIStyle,System.Single,System.Single,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Layout list of string items left to right, top to bottom in the given area.</para>
      </summary>
      <param name="rect">Area where to layout the items.</param>
      <param name="style">Style for the items.</param>
      <param name="horizontalSpacing">Extra horizontal spacing between successive items.</param>
      <param name="verticalSpacing">Extra vertical spacing between item rows.</param>
      <param name="items">Strings to layout.</param>
      <returns>
        <para>List of rectangles for the passed items.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetIconSize">
      <summary>
        <para>Get the size that has been set using SetIconSize.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetMainWindowPosition">
      <summary>
        <para>Returns position of Unity Editor's main window.</para>
      </summary>
      <returns>
        <para>Position of Unity Editor's main window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerControlID">
      <summary>
        <para>The controlID of the currently showing object picker.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerObject">
      <summary>
        <para>The object currently selected in the object picker.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.HasObjectThumbnail(System.Type)">
      <summary>
        <para>Does a given class have per-object thumbnails?</para>
      </summary>
      <param name="objType"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String)">
      <summary>
        <para>Fetch the GUIContent from the Unity builtin resources with the given name.</para>
      </summary>
      <param name="name">Name of the desired icon.</param>
      <param name="text">Tooltip for hovering over the icon.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String,System.String)">
      <summary>
        <para>Fetch the GUIContent from the Unity builtin resources with the given name.</para>
      </summary>
      <param name="name">Name of the desired icon.</param>
      <param name="text">Tooltip for hovering over the icon.</param>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility.IconSizeScope">
      <summary>
        <para>Disposable scope helper for GetIconSize / SetIconSize.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconSizeScope.#ctor(UnityEngine.Vector2)">
      <summary>
        <para>Begin an IconSizeScope.</para>
      </summary>
      <param name="iconSizeWithinScope">Size to be used for icons rendered as GUIContent within this scope.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IsDisplayReferencedByCameras(System.Int32)">
      <summary>
        <para>Check if any enabled camera can render to a particular display.</para>
      </summary>
      <param name="displayIndex">Display index.</param>
      <returns>
        <para>True if a camera will render to the display.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.Load(System.String)">
      <summary>
        <para>Load a built-in resource.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LoadRequired(System.String)">
      <summary>
        <para>Load a required built-in resource.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls">
      <summary>
        <para>Make all EditorGUI look like regular controls.</para>
      </summary>
      <param name="labelWidth">Width to use for prefixed labels.</param>
      <param name="fieldWidth">Width of text entries.</param>
      <param name="_labelWidth"></param>
      <param name="_fieldWidth"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls">
      <summary>
        <para>Make all EditorGUI look like regular controls.</para>
      </summary>
      <param name="labelWidth">Width to use for prefixed labels.</param>
      <param name="fieldWidth">Width of text entries.</param>
      <param name="_labelWidth"></param>
      <param name="_fieldWidth"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls(System.Single,System.Single)">
      <summary>
        <para>Make all EditorGUI look like regular controls.</para>
      </summary>
      <param name="labelWidth">Width to use for prefixed labels.</param>
      <param name="fieldWidth">Width of text entries.</param>
      <param name="_labelWidth"></param>
      <param name="_fieldWidth"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeInspector">
      <summary>
        <para>Make all EditorGUI look like simplified outline view controls.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.ObjectContent(UnityEngine.Object,System.Type)">
      <summary>
        <para>Return a GUIContent object with the name and icon of an Object.</para>
      </summary>
      <param name="obj"></param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PingObject(UnityEngine.Object)">
      <summary>
        <para>Ping an object in the Scene like clicking it in an inspector.</para>
      </summary>
      <param name="obj">The object to be pinged.</param>
      <param name="targetInstanceID"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PingObject(System.Int32)">
      <summary>
        <para>Ping an object in the Scene like clicking it in an inspector.</para>
      </summary>
      <param name="obj">The object to be pinged.</param>
      <param name="targetInstanceID"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Vector2)">
      <summary>
        <para>Convert a position from pixel to point space.</para>
      </summary>
      <param name="position">A GUI position in pixel space.</param>
      <returns>
        <para>A vector representing the same position in point space.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Rect)">
      <summary>
        <para>Convert a Rect from pixel space to point space.</para>
      </summary>
      <param name="rect">A GUI rect measured in pixels.</param>
      <returns>
        <para>A rect representing the same area in points.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Vector2)">
      <summary>
        <para>Convert a Rect from point space to pixel space.</para>
      </summary>
      <param name="position">A GUI rect measured in points.</param>
      <returns>
        <para>A rect representing the same area in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Rect)">
      <summary>
        <para>Converts a position from point to pixel space.</para>
      </summary>
      <param name="rect">A GUI position in point space.</param>
      <returns>
        <para>The same position in pixel space.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.QueueGameViewInputEvent(UnityEngine.Event)">
      <summary>
        <para>Send an input event into the game.</para>
      </summary>
      <param name="evt"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Render all ingame cameras.</para>
      </summary>
      <param name="cameraRect">The device coordinates to render all game cameras into.</param>
      <param name="gizmos">Show gizmos as well.</param>
      <param name="gui"></param>
      <param name="statsRect"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Render all ingame cameras.</para>
      </summary>
      <param name="cameraRect">The device coordinates to render all game cameras into.</param>
      <param name="gizmos">Show gizmos as well.</param>
      <param name="gui"></param>
      <param name="statsRect"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetIconSize(UnityEngine.Vector2)">
      <summary>
        <para>Set icons rendered as part of GUIContent to be rendered at a specific size.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetMainWindowPosition(UnityEngine.Rect)">
      <summary>
        <para>Sets position of Unity Editor's main window.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.ShowObjectPicker(UnityEngine.Object,System.Boolean,System.String,System.Int32)">
      <summary>
        <para>Show the object picker from code.</para>
      </summary>
      <param name="obj">The object to be selected by default.</param>
      <param name="allowSceneObjects">Is selection of Scene objects allowed, or should it only show assets.</param>
      <param name="searchFilter">Default search filter to apply.</param>
      <param name="controlID">The id of the control to set. This is useful if you are showing more than one of these. You can get the value at a later time.</param>
    </member>
    <member name="T:UnityEditor.EditorJsonUtility">
      <summary>
        <para>Utility functions for working with JSON data and engine objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.FromJsonOverwrite(System.String,System.Object)">
      <summary>
        <para>Overwrite data in an object by reading from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <param name="objectToOverwrite">The object to overwrite.</param>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object)">
      <summary>
        <para>Generate a JSON representation of an object.</para>
      </summary>
      <param name="obj">The object to convert to JSON form.</param>
      <param name="prettyPrint">If true, format the output for readability. If false, format the output for minimum size. Default is false.</param>
      <returns>
        <para>The object's data in JSON format.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object,System.Boolean)">
      <summary>
        <para>Generate a JSON representation of an object.</para>
      </summary>
      <param name="obj">The object to convert to JSON form.</param>
      <param name="prettyPrint">If true, format the output for readability. If false, format the output for minimum size. Default is false.</param>
      <returns>
        <para>The object's data in JSON format.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorPrefs">
      <summary>
        <para>Stores and accesses Unity editor preferences.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorPrefs.DeleteAll">
      <summary>
        <para>Removes all keys and values from the preferences. Use with caution.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorPrefs.DeleteKey(System.String)">
      <summary>
        <para>Removes key and its corresponding value from the preferences.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetBool(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetFloat(System.String)">
      <summary>
        <para>Returns the float value corresponding to key if it exists in the preference file.</para>
      </summary>
      <param name="key">Name of key to read float from.</param>
      <param name="defaultValue">Float value to return if the key is not in the storage.</param>
      <returns>
        <para>The float value stored in the preference file or the defaultValue id the
        requested float does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetFloat(System.String,System.Single)">
      <summary>
        <para>Returns the float value corresponding to key if it exists in the preference file.</para>
      </summary>
      <param name="key">Name of key to read float from.</param>
      <param name="defaultValue">Float value to return if the key is not in the storage.</param>
      <returns>
        <para>The float value stored in the preference file or the defaultValue id the
        requested float does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetInt(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key">Name of key to read integer from.</param>
      <param name="defaultValue">Integer value to return if the key is not in the storage.</param>
      <returns>
        <para>The value stored in the preference file.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetInt(System.String,System.Int32)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key">Name of key to read integer from.</param>
      <param name="defaultValue">Integer value to return if the key is not in the storage.</param>
      <returns>
        <para>The value stored in the preference file.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetString(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetString(System.String,System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.HasKey(System.String)">
      <summary>
        <para>Returns true if key exists in the preferences file.</para>
      </summary>
      <param name="key">Name of key to check for.</param>
      <returns>
        <para>The existence or not of the key.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Sets the value of the preference identified by key.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetFloat(System.String,System.Single)">
      <summary>
        <para>Sets the float value of the preference identified by key.</para>
      </summary>
      <param name="key">Name of key to write float into.</param>
      <param name="value">Float value to write into the storage.</param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetInt(System.String,System.Int32)">
      <summary>
        <para>Sets the value of the preference identified by key as an integer.</para>
      </summary>
      <param name="key">Name of key to write integer to.</param>
      <param name="value">Value of the integer to write into the storage.</param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetString(System.String,System.String)">
      <summary>
        <para>Sets the value of the preference identified by key. Note that EditorPrefs does not support null strings and will store an empty string instead.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="T:UnityEditor.EditorSelectedRenderState">
      <summary>
        <para>The editor selected render mode for Scene View selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Hidden">
      <summary>
        <para>The Renderer has no selection highlight or wireframe in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Highlight">
      <summary>
        <para>The Renderer has selection highlight but no wireframe in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Wireframe">
      <summary>
        <para>The Renderer has wireframe but not selection highlight in the Editor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSettings">
      <summary>
        <para>User settings for Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.assetNamingUsesSpace">
      <summary>
        <para>Controls whether to insert a space before a number in duplicated Asset names.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.assetPipelineMode">
      <summary>
        <para>Select the assetpipeline mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.asyncShaderCompilation">
      <summary>
        <para>Enable asynchronous Shader compilation in Game and Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableAuth">
      <summary>
        <para>Toggle whether to enable authentication to cache server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableDownload">
      <summary>
        <para>Toggle whether to enable downloading from cache server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableTls">
      <summary>
        <para>Toggle whether to enable TLS encryption to cache server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableUpload">
      <summary>
        <para>Toggle whether to enable uploading from cache server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEndpoint">
      <summary>
        <para>Cache server endpoint IP address</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerMode">
      <summary>
        <para>Select cache server mode</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerNamespacePrefix">
      <summary>
        <para>Sets the namespace prefix to use for the cache server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cachingShaderPreprocessor">
      <summary>
        <para>Enables the Caching Shader Preprocessor (experimental).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.disableCookiesInLightmapper">
      <summary>
        <para>This property is now obsolete. Use EditorSettings.enableCookiesInLightmapper. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableCookiesInLightmapper">
      <summary>
        <para>Determines whether cookies should be evaluated by the Progressive Lightmapper during Global Illumination calculations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableTextureStreamingInEditMode">
      <summary>
        <para>Enable texture mipmap streaming system when in Edit Mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableTextureStreamingInPlayMode">
      <summary>
        <para>Enable texture mipmap streaming system when in Play Mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enterPlayModeOptions">
      <summary>
        <para>Determines the state of the Enter Play Mode Options in the Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enterPlayModeOptionsEnabled">
      <summary>
        <para>Determines whether the Enter Play Mode Options are enabled in the Unity Editor or not.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.gameObjectNamingDigits">
      <summary>
        <para>Indicates the amount of digits to use for the numbers in a duplicated GameoObject's name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.gameObjectNamingScheme">
      <summary>
        <para>Indicates which naming scheme to use for duplicated GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabModeAllowAutoSave">
      <summary>
        <para>Allow Auto Save in Prefab Mode for this project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabRegularEnvironment">
      <summary>
        <para>Allows you to specify a Scene to use as the for Prefabs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabUIEnvironment">
      <summary>
        <para>Allows you to specify a Scene to use as the for UI Prefabs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationBuiltinExtensions">
      <summary>
        <para>Built-in list of extensions of files that will be included in the c# projects Unity generates.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationRootNamespace">
      <summary>
        <para>Controls which root namespace gets written into the c# .csproj projects that Unity generates.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationUserExtensions">
      <summary>
        <para>Controls list of extensions of files that will be included in the c# .csproj projects that Unity generates.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.serializeInlineMappingsOnOneLine">
      <summary>
        <para>Forces Unity to write references and other inline mappings on one line, to help reduce version control noise.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.spritePackerPaddingPower">
      <summary>
        <para>Power of 2 value to add a boundary (padding) to Sprites packed to the Atlas (Legacy Sprite Packer).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteCompression">
      <summary>
        <para>Gets or sets compression method used for Unity Remote screen stream.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteDevice">
      <summary>
        <para>Gets or sets device ID used for Unity Remote feature.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteJoystickSource">
      <summary>
        <para>Gets or sets joystick source used in editor when Unity Remote is connected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteResolution">
      <summary>
        <para>Gets or sets resolution used for Unity Remote screen stream.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.useLegacyProbeSampleCount">
      <summary>
        <para>Enable the legacy fixed sample counts for baking Light Probes with Progressive Lightmapper.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.webSecurityEmulationEnabled">
      <summary>
        <para>Determines if the Unity Editor emulates the networking security restrictions of the web player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.webSecurityEmulationHostUrl">
      <summary>
        <para>The url the web security emulation feature will pretend your game is hosted at.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSettings.NamingScheme">
      <summary>
        <para>Which naming scheme to use for duplicated GameObjects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.Dot">
      <summary>
        <para>Adds a dot followed by a number to the name of an instantiated or duplicated GameObject ("Prefab.1").</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.SpaceParenthesis">
      <summary>
        <para>Adds a space and a number in parenthesis to the name of an instantiated or duplicated GameObject ("Prefab (1)").</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.Underscore">
      <summary>
        <para>Adds an underscore and a number to the name of an instantiated or duplicated GameObject ("Prefab_1").</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSkin">
      <summary>
        <para>Enum that selects which skin to return from EditorGUIUtility.GetBuiltinSkin.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Game">
      <summary>
        <para>The skin used for game views.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Inspector">
      <summary>
        <para>The skin used for inspectors.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Scene">
      <summary>
        <para>The skin used for Scene views.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSnapSettings">
      <summary>
        <para>Control the behavior of handle snapping in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.gridSnapEnabled">
      <summary>
        <para>Gets or sets whether grid snapping is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.move">
      <summary>
        <para>Gets or sets the increment that translation handles snap to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.rotate">
      <summary>
        <para>Gets or sets the increment that rotation handles snap to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.scale">
      <summary>
        <para>Gets or sets the increment that scale handles snap to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorSnapSettings.ResetSnapSettings">
      <summary>
        <para>Resets EditorSnap settings to default values.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorStyles">
      <summary>
        <para>Common GUIStyles used for EditorGUI controls.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.boldFont">
      <summary>
        <para>Bold font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.boldLabel">
      <summary>
        <para>Style for bold label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.centeredGreyMiniLabel">
      <summary>
        <para>Style for label with small font which is centered and grey.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.colorField">
      <summary>
        <para>Style used for headings for Color fields.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldout">
      <summary>
        <para>Style used for headings for EditorGUI.Foldout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutHeader">
      <summary>
        <para>Style used for headings for EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutHeaderIcon">
      <summary>
        <para>Style used for icon for EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutPreDrop">
      <summary>
        <para>Style used for headings for EditorGUI.Foldout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.helpBox">
      <summary>
        <para>Style used for background box for EditorGUI.HelpBox.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.inspectorDefaultMargins">
      <summary>
        <para>Wrap content in a vertical group with this style to get the default margins used in the Inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.inspectorFullWidthMargins">
      <summary>
        <para>Wrap content in a vertical group with this style to get full width margins in the Inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.label">
      <summary>
        <para>Style used for the labelled on all EditorGUI overloads that take a prefix label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.largeLabel">
      <summary>
        <para>Style for label with large font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.layerMaskField">
      <summary>
        <para>Style used for headings for Layer masks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.linkLabel">
      <summary>
        <para>Style used for links.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniBoldFont">
      <summary>
        <para>Mini Bold font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniBoldLabel">
      <summary>
        <para>Style for mini bold label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButton">
      <summary>
        <para>Style used for a standalone small button.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonLeft">
      <summary>
        <para>Style used for the leftmost button in a horizontal button group.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonMid">
      <summary>
        <para>Style used for the middle buttons in a horizontal group.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonRight">
      <summary>
        <para>Style used for the rightmost button in a horizontal group.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniFont">
      <summary>
        <para>Mini font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniLabel">
      <summary>
        <para>Style for label with small font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniPullDown">
      <summary>
        <para>Style used for the drop-down controls.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniTextField">
      <summary>
        <para>Smaller text field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.numberField">
      <summary>
        <para>Style used for field editors for numbers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectField">
      <summary>
        <para>Style used for headings for object fields.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectFieldMiniThumb">
      <summary>
        <para>Style used for object fields that have a thumbnail (e.g Textures). </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectFieldThumb">
      <summary>
        <para>Style used for headings for the Select button in object fields.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.popup">
      <summary>
        <para>Style used for EditorGUI.Popup, EditorGUI.EnumPopup,.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.radioButton">
      <summary>
        <para>Style used for a radio button.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.standardFont">
      <summary>
        <para>Standard font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.textArea">
      <summary>
        <para>Style used for EditorGUI.TextArea.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.textField">
      <summary>
        <para>Style used for EditorGUI.TextField.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toggle">
      <summary>
        <para>Style used for headings for EditorGUI.Toggle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toggleGroup">
      <summary>
        <para>Style used for headings for EditorGUILayout.BeginToggleGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbar">
      <summary>
        <para>Toolbar background from top of windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarButton">
      <summary>
        <para>Style for Button and Toggles in toolbars.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarDropDown">
      <summary>
        <para>Toolbar Dropdown.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarPopup">
      <summary>
        <para>Toolbar Popup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarSearchField">
      <summary>
        <para>Toolbar search field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarTextField">
      <summary>
        <para>Toolbar text field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteBoldLabel">
      <summary>
        <para>Style for white bold label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteLabel">
      <summary>
        <para>Style for white label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteLargeLabel">
      <summary>
        <para>Style for white large label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteMiniLabel">
      <summary>
        <para>Style for white mini label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.wordWrappedLabel">
      <summary>
        <para>Style for word wrapped label.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.wordWrappedMiniLabel">
      <summary>
        <para>Style for word wrapped mini label.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorTool">
      <summary>
        <para>Use this class to implement custom editor tools. This is the base class from which all editor tools are inherited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.target">
      <summary>
        <para>The object being inspected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.targets">
      <summary>
        <para>An array of the objects being inspected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.toolbarIcon">
      <summary>
        <para>The icon and tooltip for this custom editor tool. If this function is not implemented, the toolbar displays the Inspector icon for the target type. If no target type is defined, the toolbar displays the Tool Mode icon.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.IsAvailable">
      <summary>
        <para>Checks whether the custom editor tool is available based on the state of the editor.</para>
      </summary>
      <returns>
        <para>Returns true if the custom editor tool is available. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnActivated">
      <summary>
        <para>Invoked after this EditorTool becomes the active tool.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnToolGUI(UnityEditor.EditorWindow)">
      <summary>
        <para>Use this method to implement a custom editor tool.</para>
      </summary>
      <param name="window">The window that is displaying the custom editor tool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnWillBeDeactivated">
      <summary>
        <para>Invoked before this EditorTool stops being the active tool.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolAttribute">
      <summary>
        <para>Registers an EditorTool as either a global tool or a CustomEditor for a specific target type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorToolAttribute.displayName">
      <summary>
        <para>The name that displays in menus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorToolAttribute.targetType">
      <summary>
        <para>The target type that this tool can edit.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Registers an EditorTool as either a global tool or a CustomEditor tool.</para>
      </summary>
      <param name="displayName">The name to display in menus.</param>
      <param name="targetType">Set to the type that this tool can edit. Set to null if the tool is not a CustomEditor tool.</param>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolContext">
      <summary>
        <para>Use this class to implement specialized versions of the built-in transform tools. Built-in transform tools include Move, Rotate, Scale, Rect, and Transform.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.GetEditorToolType(UnityEditor.Tool)">
      <summary>
        <para>Defines the EditorTool type for a given Tool.</para>
      </summary>
      <param name="tool">The Tool that needs to be resolved to an EditorTool type.</param>
      <returns>
        <para>An EditorTool type for the requested Tool.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnToolGUI(UnityEditor.EditorWindow)">
      <summary>
        <para>Implements any common functionality for the set of manipulation tools available for this context.</para>
      </summary>
      <param name="window">The window that is displaying the active EditorTool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.ResolveTool(UnityEditor.Tool)">
      <summary>
        <para>Returns the matching EditorTool type for the specified Tool given the context.</para>
      </summary>
      <param name="tool">The Tool to resolve to an EditorTool type.</param>
      <returns>
        <para>An EditorTool type for the requested Tool.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorTools.GameObjectToolContext">
      <summary>
        <para>This class represents the default context for manipulation tools. When GameObjectToolContext is active, manipulation tools affect the transform property of GameObjects in the SceneView Selection.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.IDrawSelectedHandles">
      <summary>
        <para>Implement this interface to draw handles when the selection contains a type targeted by an EditorTool.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.IDrawSelectedHandles.OnDrawHandles">
      <summary>
        <para>Implement this method to draw non-interactive handles when a custom editor tool is available.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.ToolManager">
      <summary>
        <para>This class manipulates editor tools in the Scene view.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeContextChanged(System.Action)">
      <summary>
        <para>Defines an event handler for when the active EditorToolContext changes.</para>
      </summary>
      <param name="value">An event issued after the active EditorToolContext changes.</param>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeContextChanging(System.Action)">
      <summary>
        <para>Defines an event handler for when the active EditorToolContext will change.</para>
      </summary>
      <param name="value">An event issued before the active EditorToolContext changes.</param>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolManager.activeContextType">
      <summary>
        <para>Gets the type of EditorToolContext that is currently active. The default value is GameObjectToolContext.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeToolChanged(System.Action)">
      <summary>
        <para>Defines an event handler for when the active tool changes.</para>
      </summary>
      <param name="value">An event issued after the active tool changes.</param>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeToolChanging(System.Action)">
      <summary>
        <para>Defines an event handler for when the active tool changes.</para>
      </summary>
      <param name="value">An event issued before the active tool changes.</param>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolManager.activeToolType">
      <summary>
        <para>Gets the type of the EditorTool that is currently active.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.IsActiveTool(UnityEditor.EditorTools.EditorTool)">
      <summary>
        <para>Test if an EditorTool is currently the active tool.</para>
      </summary>
      <param name="tool">The EditorTool to compare with the active tool.</param>
      <returns>
        <para>Returns true if the tool is active, false if it is not the active tool.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.RestorePreviousPersistentTool">
      <summary>
        <para>Sets the last-used global EditorTool as the active tool.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.RestorePreviousTool">
      <summary>
        <para>Sets the last-used EditorTool as the active tool.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveContext(System.Type)">
      <summary>
        <para>Sets the active EditorToolContext.</para>
      </summary>
      <param name="context">The EditorToolContext type to be set as the active tool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveContext">
      <summary>
        <para>Sets the active EditorToolContext.</para>
      </summary>
      <param name="context">The EditorToolContext type to be set as the active tool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool">
      <summary>
        <para>Sets the active EditorTool.</para>
      </summary>
      <param name="type">The EditorTool type to set as the active tool.</param>
      <param name="tool">The EditorTool instance to set as the active tool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool(System.Type)">
      <summary>
        <para>Sets the active EditorTool.</para>
      </summary>
      <param name="type">The EditorTool type to set as the active tool.</param>
      <param name="tool">The EditorTool instance to set as the active tool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool(UnityEditor.EditorTools.EditorTool)">
      <summary>
        <para>Sets the active EditorTool.</para>
      </summary>
      <param name="type">The EditorTool type to set as the active tool.</param>
      <param name="tool">The EditorTool instance to set as the active tool.</param>
    </member>
    <member name="T:UnityEditor.EditorUserBuildSettings">
      <summary>
        <para>User build settings for the Editor</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.activeBuildTarget">
      <summary>
        <para>The currently active build target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorUserBuildSettings.activeBuildTargetChanged">
      <summary>
        <para>Triggered in response to SwitchActiveBuildTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.activeScriptCompilationDefines">
      <summary>
        <para>DEFINE directives for the compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.allowDebugging">
      <summary>
        <para>Enable source-level debuggers to connect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidBuildSubtarget">
      <summary>
        <para>Android platform options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidCreateSymbolsZip">
      <summary>
        <para>Set to true to create a symbols.zip file in the same location as the .apk or .aab file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidETC2Fallback">
      <summary>
        <para>ETC2 texture decompression fallback on Android devices that don't support ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidUseLegacySdkTools">
      <summary>
        <para>Use deprecated Android SDK tools to pack application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildAppBundle">
      <summary>
        <para>Set to true to build an Android App Bundle (aab file) instead of an apk. The default value is false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildScriptsOnly">
      <summary>
        <para>Is build script only enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildWithDeepProfilingSupport">
      <summary>
        <para>Enables Deep Profiling support in the player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.compressFilesInPackage">
      <summary>
        <para>Compress files in package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.compressWithPsArc">
      <summary>
        <para>Build data compressed with PSArc.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.connectProfiler">
      <summary>
        <para>Start the player with a connection to the profiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.development">
      <summary>
        <para>Enables a development build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.enableHeadlessMode">
      <summary>
        <para>Whether the standalone player is built in headless mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitArrayBoundsChecks">
      <summary>
        <para>Are array bounds actively validated?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitDivideByZeroChecks">
      <summary>
        <para>Are divide by zero's actively validated?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitNullChecks">
      <summary>
        <para>Are null references actively validated?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.exportAsGoogleAndroidProject">
      <summary>
        <para>Export Android Project for use with Android Studio/Gradle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.forceInstallation">
      <summary>
        <para>Force installation of package, even if error.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.forceOptimizeScriptCompilation">
      <summary>
        <para>Force full optimizations for script complilation in Development builds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.installInBuildFolder">
      <summary>
        <para>Place the built player in the build folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.iOSBuildConfigType">
      <summary>
        <para>Scheme with which the project will be run in Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.movePackageToDiscOuterEdge">
      <summary>
        <para>Places the package on the outer edge of the disk.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.needSubmissionMaterials">
      <summary>
        <para>Build submission materials.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.ps4BuildSubtarget">
      <summary>
        <para>PS4 Build Subtarget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.ps4HardwareTarget">
      <summary>
        <para>Specifies which version of PS4 hardware to target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.selectedBuildTargetGroup">
      <summary>
        <para>The currently selected build target group.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.selectedStandaloneTarget">
      <summary>
        <para>The currently selected target for a standalone build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.streamingInstallLaunchRange">
      <summary>
        <para>When building an Xbox One Streaming Install package (makepkg.exe) The layout generation code in Unity will assign each Scene and associated assets to individual chunks. Unity will mark Scene 0 as being part of the launch range, IE the set of chunks required to launch the game, you may include additional Scenes in this launch range if you desire, this specifies a range of Scenes (starting at 0) to be included in the launch set. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.symlinkLibraries">
      <summary>
        <para>Symlink runtime libraries with an iOS Xcode project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.waitForManagedDebugger">
      <summary>
        <para>Instructs the player to wait for managed debugger to attach before executing any script code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.waitForPlayerConnection">
      <summary>
        <para>Sets the Player to wait for player connection on player start.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.webGLUsePreBuiltUnityEngine">
      <summary>
        <para>Use prebuilt JavaScript version of Unity engine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalAddress">
      <summary>
        <para>Specifies the Windows DevicePortal connection address of the device to deploy and launch the UWP app on when using Build and Run.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalPassword">
      <summary>
        <para>Specifies the Windows DevicePortal password for the device to deploy and launch the UWP app on when using Build and Run.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalUsername">
      <summary>
        <para>Specifies the Windows DevicePortal username for the device to deploy and launch the UWP app on when using Build and Run.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaBuildAndRunDeployTarget">
      <summary>
        <para>Sets and gets the Windows device to launch the UWP app when using Build and Run.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaSubtarget">
      <summary>
        <para>Sets and gets target device type for the application to run on when building to Windows Store platform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPBuildType">
      <summary>
        <para>The build type for the Universal Windows Platform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPSDK">
      <summary>
        <para>Sets and gets target UWP SDK to build Windows Store application against.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPVisualStudioVersion">
      <summary>
        <para>Sets and gets Visual Studio version to build Windows Store application with.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxBuildSubtarget">
      <summary>
        <para>Xbox Build subtarget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployDrive">
      <summary>
        <para>The currently selected Xbox One Deploy Drive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployMethod">
      <summary>
        <para>The currently selected Xbox One Deploy Method.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneNetworkSharePath">
      <summary>
        <para>Network shared folder path e.g.
MYCOMPUTER\SHAREDFOLDER\.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneRebootIfDeployFailsAndRetry">
      <summary>
        <para>Sets the XBox to reboot and redeploy when the deployment fails.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneUsername">
      <summary>
        <para>Windows account username associated with PC share folder.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.GetBuildLocation(UnityEditor.BuildTarget)">
      <summary>
        <para>Get the current location for the build.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.GetPlatformSettings(System.String,System.String)">
      <summary>
        <para>Returns value for platform specifc Editor setting.</para>
      </summary>
      <param name="platformName">The name of the platform.</param>
      <param name="name">The name of the setting.</param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SetBuildLocation(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Set a new location for the build.</para>
      </summary>
      <param name="target"></param>
      <param name="location"></param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SetPlatformSettings(System.String,System.String,System.String)">
      <summary>
        <para>Set platform specifc Editor setting.</para>
      </summary>
      <param name="platformName">The name of the platform.</param>
      <param name="name">The name of the setting.</param>
      <param name="value">Setting value.</param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTarget)">
      <summary>
        <para>Select a new build target to be active.</para>
      </summary>
      <param name="target">Target build platform.</param>
      <param name="targetGroup">Build target group.</param>
      <returns>
        <para>True if the build target was successfully switched, false otherwise (for example, if license checks fail, files are missing, or if the user has cancelled the operation via the UI).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Select a new build target to be active.</para>
      </summary>
      <param name="target">Target build platform.</param>
      <param name="targetGroup">Build target group.</param>
      <returns>
        <para>True if the build target was successfully switched, false otherwise (for example, if license checks fail, files are missing, or if the user has cancelled the operation via the UI).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTargetAsync(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Select a new build target to be active during the next Editor update.</para>
      </summary>
      <param name="targetGroup">Target build platform.</param>
      <param name="target">Build target group.</param>
      <returns>
        <para>True if the build target was successfully switched, false otherwise (for example, if license checks fail, files are missing, or if the user has cancelled the operation via the UI).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorUtility">
      <summary>
        <para>Editor utility functions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUtility.scriptCompilationFailed">
      <summary>
        <para>True if there are any compilation error messages in the log.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDirty(UnityEngine.Object)">
      <summary>
        <para>Clear target's dirty flag.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearProgressBar">
      <summary>
        <para>Removes the progress bar.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.CollectDeepHierarchy(UnityEngine.Object[])">
      <summary>
        <para>Collect all objects in the hierarchy rooted at each of the given objects.</para>
      </summary>
      <param name="roots">Array of objects where the search will start.</param>
      <returns>
        <para>Array of objects heirarchically attached to the search array.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.CollectDependencies(UnityEngine.Object[])">
      <summary>
        <para>Calculates and returns a list of all assets the assets listed in roots depend on.</para>
      </summary>
      <param name="roots"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Compress a cubemap texture.</para>
      </summary>
      <param name="texture"></param>
      <param name="format"></param>
      <param name="quality"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
      <summary>
        <para>Compress a cubemap texture.</para>
      </summary>
      <param name="texture"></param>
      <param name="format"></param>
      <param name="quality"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Compress a texture.</para>
      </summary>
      <param name="texture"></param>
      <param name="format"></param>
      <param name="quality"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
      <summary>
        <para>Compress a texture.</para>
      </summary>
      <param name="texture"></param>
      <param name="format"></param>
      <param name="quality"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerialized(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Copy all settings of a Unity Object.</para>
      </summary>
      <param name="source"></param>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerializedIfDifferent(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Copy all settings of a Unity Object to a second Object if they differ.</para>
      </summary>
      <param name="source"></param>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerializedManagedFieldsOnly(System.Object,System.Object)">
      <summary>
        <para>Copies the serializable fields from one managed object to another.</para>
      </summary>
      <param name="source">The object to copy data from.</param>
      <param name="dest">The object to copy data to.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CreateGameObjectWithHideFlags(System.String,UnityEngine.HideFlags,System.Type[])">
      <summary>
        <para>Creates a game object with HideFlags and specified components.</para>
      </summary>
      <param name="name"></param>
      <param name="flags"></param>
      <param name="components"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayCancelableProgressBar(System.String,System.String,System.Single)">
      <summary>
        <para>Displays or updates a progress bar that has a cancel button.</para>
      </summary>
      <param name="title"></param>
      <param name="info"></param>
      <param name="progress"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String)">
      <summary>
        <para>This method displays a modal dialog.</para>
      </summary>
      <param name="title">The title of the message box.</param>
      <param name="message">The text of the message.</param>
      <param name="ok">Label displayed on the OK dialog button.</param>
      <param name="cancel">Label displayed on the Cancel dialog button.</param>
      <returns>
        <para>Returns true if the user clicks the OK button. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String)">
      <summary>
        <para>This method displays a modal dialog.</para>
      </summary>
      <param name="title">The title of the message box.</param>
      <param name="message">The text of the message.</param>
      <param name="ok">Label displayed on the OK dialog button.</param>
      <param name="cancel">Label displayed on the Cancel dialog button.</param>
      <returns>
        <para>Returns true if the user clicks the OK button. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>This method displays a modal dialog that lets the user opt-out of being shown the current dialog box again.</para>
      </summary>
      <param name="title">The title of the message box.</param>
      <param name="message">The text of the message.</param>
      <param name="ok">Label displayed on the OK dialog button.</param>
      <param name="cancel">Label displayed on the Cancel dialog button.</param>
      <param name="dialogOptOutDecisionType">The type of opt-out decision a user can make.</param>
      <param name="dialogOptOutDecisionStorageKey">The unique key setting to store the decision under.</param>
      <returns>
        <para>true if the user clicks the ok button, or previously opted out. Returns false if the user cancels or closes the dialog without making a decision.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String,UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>This method displays a modal dialog that lets the user opt-out of being shown the current dialog box again.</para>
      </summary>
      <param name="title">The title of the message box.</param>
      <param name="message">The text of the message.</param>
      <param name="ok">Label displayed on the OK dialog button.</param>
      <param name="cancel">Label displayed on the Cancel dialog button.</param>
      <param name="dialogOptOutDecisionType">The type of opt-out decision a user can make.</param>
      <param name="dialogOptOutDecisionStorageKey">The unique key setting to store the decision under.</param>
      <returns>
        <para>true if the user clicks the ok button, or previously opted out. Returns false if the user cancels or closes the dialog without making a decision.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialogComplex(System.String,System.String,System.String,System.String,System.String)">
      <summary>
        <para>Displays a modal dialog with three buttons.</para>
      </summary>
      <param name="title">Title for dialog.</param>
      <param name="message">Purpose for the dialog.</param>
      <param name="ok">Dialog function chosen.</param>
      <param name="cancel">Close dialog with no operation.</param>
      <param name="alt">Choose alternative dialog purpose.</param>
      <returns>
        <para>Returns the id of the chosen button. The ids are 0, 1 or 2 corresponding to the ok, cancel and alt buttons respectively.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayPopupMenu(UnityEngine.Rect,System.String,UnityEditor.MenuCommand)">
      <summary>
        <para>Displays a popup menu.</para>
      </summary>
      <param name="position"></param>
      <param name="menuItemPath"></param>
      <param name="command"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayProgressBar(System.String,System.String,System.Single)">
      <summary>
        <para>Displays or updates a progress bar.</para>
      </summary>
      <param name="title"></param>
      <param name="info"></param>
      <param name="progress"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.FocusProjectWindow">
      <summary>
        <para>Brings the project window to the front and focuses it.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.FormatBytes(System.Int32)">
      <summary>
        <para>Returns a text for a number of bytes.</para>
      </summary>
      <param name="bytes"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDialogOptOutDecision(UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>This method displays a modal dialog that lets the user opt-out of being shown the current dialog box again.</para>
      </summary>
      <param name="dialogOptOutDecisionType">The type of opt-out decision a user can make.</param>
      <param name="dialogOptOutDecisionStorageKey">The unique key setting to store the decision under.</param>
      <returns>
        <para>true if the user previously opted out of seeing the dialog associated with dialogOptOutDecisionStorageKey. Returns false if the user did not yet opt out.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDirtyCount(System.Int32)">
      <summary>
        <para>Returns an integer that indicates the number of times the specified object's serialized properties have changed.</para>
      </summary>
      <param name="instanceID">The object's instance ID.</param>
      <param name="target">The object.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDirtyCount(UnityEngine.Object)">
      <summary>
        <para>Returns an integer that indicates the number of times the specified object's serialized properties have changed.</para>
      </summary>
      <param name="instanceID">The object's instance ID.</param>
      <param name="target">The object.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetObjectEnabled(UnityEngine.Object)">
      <summary>
        <para>Is the object enabled (0 disabled, 1 enabled, -1 has no enabled button).</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.InstanceIDToObject(System.Int32)">
      <summary>
        <para>Translates an instance ID to a reference to an object.</para>
      </summary>
      <param name="instanceID"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsDirty(System.Int32)">
      <summary>
        <para>Gets a boolean value that indicates whether the specified object has changed since the last time it was saved.</para>
      </summary>
      <param name="instanceID">The object's instance ID.</param>
      <param name="target">The object.</param>
      <returns>
        <para>True if the object has changed; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsDirty(UnityEngine.Object)">
      <summary>
        <para>Gets a boolean value that indicates whether the specified object has changed since the last time it was saved.</para>
      </summary>
      <param name="instanceID">The object's instance ID.</param>
      <param name="target">The object.</param>
      <returns>
        <para>True if the object has changed; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsPersistent(UnityEngine.Object)">
      <summary>
        <para>Determines if an object is stored on disk.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsRunningUnderCPUEmulation">
      <summary>
        <para>Gets a boolean value. This value indicates whether your CPU is unable to execute Unity natively and is running an emulated version.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.NaturalCompare(System.String,System.String)">
      <summary>
        <para>Human-like sorting.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFilePanel(System.String,System.String,System.String)">
      <summary>
        <para>Displays the "open file" dialog and returns the selected path name.</para>
      </summary>
      <param name="title"></param>
      <param name="directory"></param>
      <param name="extension"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFilePanelWithFilters(System.String,System.String,System.String[])">
      <summary>
        <para>Displays the "open file" dialog and returns the selected path name.</para>
      </summary>
      <param name="title">Title for dialog.</param>
      <param name="directory">Default directory.</param>
      <param name="filters">File extensions in form { "Image files", "png,jpg,jpeg", "All files", "*" }.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFolderPanel(System.String,System.String,System.String)">
      <summary>
        <para>Displays the "open folder" dialog and returns the selected path name.</para>
      </summary>
      <param name="title"></param>
      <param name="folder"></param>
      <param name="defaultName"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.RequestScriptReload">
      <summary>
        <para>The Unity Editor reloads script assemblies asynchronously on the next frame. This resets the state of all the scripts, but Unity does not compile any code that has changed since the previous compilation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFilePanel(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Displays the "save file" dialog and returns the selected path name.</para>
      </summary>
      <param name="title"></param>
      <param name="directory"></param>
      <param name="defaultName"></param>
      <param name="extension"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFilePanelInProject(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Displays the "save file" dialog in the Assets folder of the project and returns the selected path name.</para>
      </summary>
      <param name="title"></param>
      <param name="defaultName"></param>
      <param name="extension"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFolderPanel(System.String,System.String,System.String)">
      <summary>
        <para>Displays the "save folder" dialog and returns the selected path name.</para>
      </summary>
      <param name="title"></param>
      <param name="folder"></param>
      <param name="defaultName"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterials(UnityEngine.Camera,System.Boolean)">
      <summary>
        <para>Sets this camera to allow animation of materials in the Editor.</para>
      </summary>
      <param name="camera"></param>
      <param name="animate"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterialsTime(UnityEngine.Camera,System.Single)">
      <summary>
        <para>Sets the global time for this camera to use when rendering.</para>
      </summary>
      <param name="camera"></param>
      <param name="time"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDialogOptOutDecision(UnityEditor.DialogOptOutDecisionType,System.String,System.Boolean)">
      <summary>
        <para>This method displays a modal dialog that lets the user opt-out of being shown the current dialog box again.</para>
      </summary>
      <param name="dialogOptOutDecisionType">The type of opt-out decision a user can make.</param>
      <param name="dialogOptOutDecisionStorageKey">The unique key setting to store the decision under.</param>
      <param name="optOutDecision">The unique key setting to store the decision under.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDirty(UnityEngine.Object)">
      <summary>
        <para>Marks target object as dirty.</para>
      </summary>
      <param name="target">The object to mark as dirty.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetObjectEnabled(UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Set the enabled state of the object.</para>
      </summary>
      <param name="target"></param>
      <param name="enabled"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetSelectedRenderState(UnityEngine.Renderer,UnityEditor.EditorSelectedRenderState)">
      <summary>
        <para>Set the Scene View selected display mode for this Renderer.</para>
      </summary>
      <param name="renderer"></param>
      <param name="renderState"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetSelectedWireframeHidden(UnityEngine.Renderer,System.Boolean)">
      <summary>
        <para>Sets whether the selected Renderer's wireframe will be hidden when the GameObject it is attached to is selected.</para>
      </summary>
      <param name="renderer"></param>
      <param name="enabled"></param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate">
      <summary>
        <para>Unloads assets that are not used.</para>
      </summary>
      <param name="ignoreReferencesFromScript">When true delete assets even if linked in scripts.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate">
      <summary>
        <para>Unloads assets that are not used.</para>
      </summary>
      <param name="ignoreReferencesFromScript">When true delete assets even if linked in scripts.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UpdateGlobalShaderProperties(System.Single)">
      <summary>
        <para>Updates the global shader properties to use when rendering.</para>
      </summary>
      <param name="time">Time to use. -1 to disable.</param>
    </member>
    <member name="T:UnityEditor.EditorWindow">
      <summary>
        <para>Derive from this class to create an editor window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.autoRepaintOnSceneChange">
      <summary>
        <para>Does the window automatically repaint whenever the Scene has changed?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.docked">
      <summary>
        <para>Returns true if EditorWindow is docked.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.focusedWindow">
      <summary>
        <para>The EditorWindow which currently has keyboard focus. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.hasFocus">
      <summary>
        <para>Returns true if EditorWindow is focused.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.hasUnsavedChanges">
      <summary>
        <para>When set to true in a derived class, the editor will prompt the user to save unsaved changes if the window is about to be closed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.maximized">
      <summary>
        <para>Is this window maximized?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.maxSize">
      <summary>
        <para>The maximum size of this window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.minSize">
      <summary>
        <para>The minimum size of this window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.mouseOverWindow">
      <summary>
        <para>The EditorWindow currently under the mouse cursor. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.position">
      <summary>
        <para>The desired position of the window in screen space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.rootVisualElement">
      <summary>
        <para>Retrieves the root visual element of this window hierarchy.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.saveChangesMessage">
      <summary>
        <para>The message that displays to the user if they are prompted to save</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.title">
      <summary>
        <para>The title of this window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.titleContent">
      <summary>
        <para>The GUIContent used for drawing the title of EditorWindows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsLessLayoutEvents">
      <summary>
        <para>Specifies whether a layout pass is performed before all user events (for example, EventType.MouseDown or EventType, KeyDown), or is only performed before repaint events.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow">
      <summary>
        <para>Checks whether MouseEnterWindow and MouseLeaveWindow events are received in the GUI in this Editor window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsMouseMove">
      <summary>
        <para>Checks whether MouseMove events are received in the GUI in this Editor window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.BeginWindows">
      <summary>
        <para>Mark the beginning area of all popup windows.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Close">
      <summary>
        <para>Close the editor window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.CreateWindow(System.Type[])">
      <summary>
        <para>Creates an EditorWindow of type T.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="title">The title of the created window. If this value is null, use the class name as title.</param>
      <param name="desiredDockNextTo">An array of EditorWindow types that the window will attempt to dock onto.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.CreateWindow(System.String,System.Type[])">
      <summary>
        <para>Creates an EditorWindow of type T.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="title">The title of the created window. If this value is null, use the class name as title.</param>
      <param name="desiredDockNextTo">An array of EditorWindow types that the window will attempt to dock onto.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.EndWindows">
      <summary>
        <para>Close a window group started with EditorWindow.BeginWindows.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Focus">
      <summary>
        <para>Moves keyboard focus to another EditorWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)">
      <summary>
        <para>Focuses the first found EditorWindow of specified type if it is open.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen">
      <summary>
        <para>Focuses the first found EditorWindow of type T if it is open.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetExtraPaneTypes">
      <summary>
        <para>Gets the extra panes associated with the window.</para>
      </summary>
      <returns>
        <para>The extra panes that are specific to the window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String)">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String)">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type[])">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="desiredDockNextTo">An array of EditorWindow types that the window will attempt to dock onto.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Type[])">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="desiredDockNextTo">An array of EditorWindow types that the window will attempt to dock onto.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean,System.Type[])">
      <summary>
        <para>Returns the first EditorWindow of type T which is currently on the screen.</para>
      </summary>
      <param name="T">The type of the window. Must derive from EditorWindow.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="desiredDockNextTo">An array of EditorWindow types that the window will attempt to dock onto.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Returns the first EditorWindow of type t which is currently on the screen.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <param name="rect">The position on the screen where a newly created window will show.</param>
      <param name="utility">Set this to true, to create a floating utility window, false to create a normal window.</param>
      <param name="title">If GetWindow creates a new window, it will get this title. If this value is null, use the class name as title.</param>
      <param name="focus">Whether to give the window focus, if it already exists. (If GetWindow creates a new window, it will always get focus).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.HasOpenInstances">
      <summary>
        <para>Checks if an editor window is open.</para>
      </summary>
      <param name="t">The type of the window. Must derive from EditorWindow.</param>
      <returns>
        <para>Returns true if an EditorWindow, matching the specified type, is open. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorWindow.RemoveNotification">
      <summary>
        <para>Stop showing notification message.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Repaint">
      <summary>
        <para>Make the window repaint.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.SaveChanges">
      <summary>
        <para>Performs a save action on the contents of the window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)">
      <summary>
        <para>Sends an Event to a window.</para>
      </summary>
      <param name="e"></param>
    </member>
    <member name="M:UnityEditor.EditorWindow.Show">
      <summary>
        <para>Show the EditorWindow window.</para>
      </summary>
      <param name="immediateDisplay">Immediately display Show.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.Show(System.Boolean)">
      <summary>
        <para>Show the EditorWindow window.</para>
      </summary>
      <param name="immediateDisplay">Immediately display Show.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)">
      <summary>
        <para>Shows a window with dropdown behaviour and styling.</para>
      </summary>
      <param name="buttonRect">The button from which the position of the window will be determined (see description).</param>
      <param name="windowSize">The initial size of the window.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowAuxWindow">
      <summary>
        <para>Show the editor window in the auxiliary window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowModal">
      <summary>
        <para>Show modal editor window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowModalUtility">
      <summary>
        <para>Show the EditorWindow as a floating modal window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)">
      <summary>
        <para>Show a notification message.</para>
      </summary>
      <param name="notification">The contents of the notification message.</param>
      <param name="fadeoutWait">The duration the notification is displayed. Measured in seconds.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)">
      <summary>
        <para>Show a notification message.</para>
      </summary>
      <param name="notification">The contents of the notification message.</param>
      <param name="fadeoutWait">The duration the notification is displayed. Measured in seconds.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowPopup">
      <summary>
        <para>Shows an Editor window using popup-style framing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowUtility">
      <summary>
        <para>Show the EditorWindow as a floating utility window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorWindowTitleAttribute">
      <summary>
        <para>Use this class to set title text and icon for an Editor window. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.icon">
      <summary>
        <para>Specifies the path to an Editor window's default icon.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.title">
      <summary>
        <para>Specifies an Editor window's title text.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.useTypeNameAsIconName">
      <summary>
        <para>When set to true Unity sets the window's icon name to be the same as its type name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindowTitleAttribute.#ctor">
      <summary>
        <para>Creates Editor window title content.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EnterPlayModeOptions">
      <summary>
        <para>Determines the flags for the Enter Play Mode Options in the Unity Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.DisableDomainReload">
      <summary>
        <para>When Domain Reload is disabled, scripts are not reloaded when entering Play Mode. This makes it quicker to switch to Play Mode, because there's no need to destroy, create and reload the .NET Application Domain.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.DisableSceneReload">
      <summary>
        <para>When Scene Reload is disabled, Unity resets the Scene state and emulates all of the required post-processor calls when entering Play Mode, instead of reloading the whole Scene. This makes it quicker to switch to Play Mode, because there's no need to destroy, create and awaken all the Scene objects, and serialize and deserialize the Scene from disk.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.None">
      <summary>
        <para>This makes Unity reload the .NET Application Domain and entire Scene when entering Play Mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Events.UnityEventTools">
      <summary>
        <para>Editor tools for working with persistent UnityEvents.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddBoolPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Boolean&gt;,System.Boolean)">
      <summary>
        <para>Adds a persistent, preset call to the listener.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddFloatPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Single&gt;,System.Single)">
      <summary>
        <para>Adds a persistent, preset call to the listener.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddIntPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Adds a persistent, preset call to the listener.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddObjectPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;T&gt;,T)">
      <summary>
        <para>Adds a persistent, preset call to the listener.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEventBase)">
      <summary>
        <para>Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`1&lt;T0&gt;,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`2&lt;T0,T1&gt;,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`3&lt;T0,T1,T2&gt;,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`4&lt;T0,T1,T2,T3&gt;,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Adds a persistent, call to the listener. Will be invoked with the arguments as defined by the Event and sent from the call location.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddStringPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.String&gt;,System.String)">
      <summary>
        <para>Adds a persistent, preset call to the listener.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddVoidPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Adds a persistent, preset call to the listener.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterBoolPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Boolean&gt;,System.Boolean)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterFloatPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Single&gt;,System.Single)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterIntPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterObjectPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;T&gt;,T)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent,System.Int32,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`1&lt;T0&gt;,System.Int32,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`2&lt;T0,T1&gt;,System.Int32,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`3&lt;T0,T1,T2&gt;,System.Int32,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`4&lt;T0,T1,T2,T3&gt;,System.Int32,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterStringPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.String&gt;,System.String)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
      <param name="argument">Argument to use when invoking.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterVoidPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Modifies the event at the given index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to modify.</param>
      <param name="call">Function to call.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,System.Int32)">
      <summary>
        <para>Removes the given function from the event.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to remove (if specified).</param>
      <param name="call">Function to remove (if specified).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Removes the given function from the event.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to remove (if specified).</param>
      <param name="call">Function to remove (if specified).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Removes the given function from the event.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to remove (if specified).</param>
      <param name="call">Function to remove (if specified).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Removes the given function from the event.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to remove (if specified).</param>
      <param name="call">Function to remove (if specified).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Removes the given function from the event.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to remove (if specified).</param>
      <param name="call">Function to remove (if specified).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Removes the given function from the event.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to remove (if specified).</param>
      <param name="call">Function to remove (if specified).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.UnregisterPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32)">
      <summary>
        <para>Unregisters the given listener at the specified index.</para>
      </summary>
      <param name="unityEvent">Event to modify.</param>
      <param name="index">Index to unregister.</param>
    </member>
    <member name="T:UnityEditor.Experimental.ArtifactID">
      <summary>
        <para>Uniquely identifies a produced artifact such as an imported asset (e.g. result of importing a texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.ArtifactID.isValid">
      <summary>
        <para>True if this ArtifactID is valid.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactID.value">
      <summary>
        <para>The unique value.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.ArtifactKey">
      <summary>
        <para>An ArtifactKey is used for specifying an artifact to lookup or produce.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactKey.guid">
      <summary>
        <para>The guid specifying the asset in question.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactKey.importerType">
      <summary>
        <para>The managed type of the importer to use for producing the artifact.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.ArtifactKey.isValid">
      <summary>
        <para>Returns true is the hash value is valid. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.ArtifactKey.#ctor(UnityEditor.GUID)">
      <summary>
        <para>Construct an ArtifactKey.</para>
      </summary>
      <param name="g">The guid.</param>
      <param name="guid">The guid.</param>
      <param name="importerType">The managed type of the importer.</param>
    </member>
    <member name="M:UnityEditor.Experimental.ArtifactKey.#ctor(UnityEditor.GUID,System.Type)">
      <summary>
        <para>Construct an ArtifactKey.</para>
      </summary>
      <param name="g">The guid.</param>
      <param name="guid">The guid.</param>
      <param name="importerType">The managed type of the importer.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Licensing.LicensingUtility">
      <summary>
        <para>Use the Licensing Utility class to request user permissions. User permissions are referred to as entitlements. Entitlements are simple strings. For example, "com.unity.editor.ui".</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Licensing.LicensingUtility.HasEntitlement(System.String)">
      <summary>
        <para>Checks if the current user is entitled to a specific entitlement.</para>
      </summary>
      <param name="entitlement">The requested entitlement string.</param>
      <returns>
        <para>Returns true if the user is entitled to the entitlement string. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Licensing.LicensingUtility.HasEntitlements(System.String[])">
      <summary>
        <para>Checks if the current user is entitled to a list of entitlements.</para>
      </summary>
      <param name="entitlements">The requested list of entitlement strings.</param>
      <returns>
        <para>Returns a list of entitlement strings that the user is entitled to based on the requested list.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Experimental.Lightmapping">
      <summary>
        <para>Experimental lightmapping features.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Experimental.Lightmapping.additionalBakedProbesCompleted(System.Action)">
      <summary>
        <para>Event which is called when additional probe bakes have completed and results are ready to be fetched.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.Experimental.Lightmapping.extractAmbientOcclusion">
      <summary>
        <para>Writes out the filtered Ambient Occlusion texture to disk when the Lighting Data Asset is created and will be located next to the other lightmaps. This only works in On Demand mode and if Ambient Occlusion is turned on. Please note that the values from the direct and indirect exposure sliders are not applied. Currently not supported by the Progressive GPU lightmapper.  </para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Lightmapping.probesIgnoreDirectEnvironment">
      <summary>
        <para>If enabled ignores the direct contribution from the environment lighting in baked probes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.Bake(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Starts a synchronous lighting bake job for the target Scene.</para>
      </summary>
      <param name="targetScene">The Scene to generate lighting data for.</param>
      <returns>
        <para>Returns true if Unity successfully completes the lighting bake job. Returns false if Unity does not successfully complete the lighting bake job.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.BakeAsync(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Starts an asynchronous lighting bake job for the target Scene.</para>
      </summary>
      <param name="targetScene">The Scene to generate lighting data for.</param>
      <returns>
        <para>Returns true if Unity successfully starts the lighting bake job. Returns false if Unity does not successfully start the lighting bake job.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.GetAdditionalBakedProbes">
      <summary>
        <para>Retrieve the bake result of additional probes.</para>
      </summary>
      <param name="id">The identifier that was used to submit an array of positions to be baked.</param>
      <returns>
        <para>True if outBakedProbeSH and outBakedProbeValidity could be successfully returned.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.GetCustomBakeResults(UnityEngine.Vector4[])">
      <summary>
        <para>Retrieve the custom bake results.</para>
      </summary>
      <param name="results">The unnormalized amount of sky visibility for the input points (in xyz). The w component is the fraction of rays that strike backfaces.</param>
      <returns>
        <para>True if the results were retrieved. False if there is no data available or the results array does not match the number of points in the bake.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetAdditionalBakedProbes">
      <summary>
        <para>Submit additional probe positions to be baked using an identifier.</para>
      </summary>
      <param name="id">An ID to identify the positions to be baked. This ID is used later to retrieve the result for those positions.</param>
      <param name="positions">An array of probe positions.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetCustomBakeInputs(UnityEngine.Vector4[],System.Int32)">
      <summary>
        <para>Set the custom bake inputs.</para>
      </summary>
      <param name="inputData">The positions (xyz) of the points for which the amount of sky visibility is calculated. The w component is an offset that will be applied to the ray originating at the position.</param>
      <param name="sampleCount">The number of samples on the upper hemisphere used to calculate the sky visibility.</param>
    </member>
    <member name="?:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem">
      <summary>
        <para>Defines the required members for a ScriptableBakedReflectionSystem implementation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.stageCount">
      <summary>
        <para>Number of stages of the baking process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.stateHashes">
      <summary>
        <para>The hashes of the current baked state of the ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.BakeAllReflectionProbes">
      <summary>
        <para>Implement this method to bake all of the loaded reflection probes.</para>
      </summary>
      <returns>
        <para>Returns true when the reflection probe baking process completed successfully. Returns false when the baking did not complete - for example if the current scene has never been saved.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Cancel">
      <summary>
        <para>Cancel the running bake jobs.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Clear">
      <summary>
        <para>Clear the state of the ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.SynchronizeReflectionProbes">
      <summary>
        <para>Synchronize the baked data with the actual components and rendering settings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Tick(UnityEditor.Experimental.Rendering.SceneStateHash,UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier)">
      <summary>
        <para>This method is called every Editor update until the ScriptableBakedReflectionSystem indicates that the baking is complete, with handle.SetIsDone(true). (See IScriptableBakedReflectionSystemStageNotifier.SetIsDone).</para>
      </summary>
      <param name="sceneStateHash">Current Scene state hash.</param>
      <param name="handle">A handle to receive notifications about the status of the stages of the baking process.</param>
    </member>
    <member name="?:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier">
      <summary>
        <para>An implementation of this interface is provided while ticking an ScriptableBakedReflectionSystem. (See IScriptableBakedReflectionSystem.Tick).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.EnterStage(System.Int32,System.String,System.Single)">
      <summary>
        <para>Update the baking stage progress information.</para>
      </summary>
      <param name="stage">The current stage in progress.</param>
      <param name="progressMessage">The progress message to display.</param>
      <param name="progress">The progress to report (between 0 and 1).</param>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.ExitStage(System.Int32)">
      <summary>
        <para>Indicates that a stage is complete.</para>
      </summary>
      <param name="stage">The completed stage.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.SetIsDone(System.Boolean)">
      <summary>
        <para>Indicates whether the baking is complete.</para>
      </summary>
      <param name="isDone">Whether the baking is complete.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.SceneStateHash">
      <summary>
        <para>This class contains hashes that represents the Scene state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.ambientProbeHash">
      <summary>
        <para>A hash representing the state of the ambient probe.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.sceneObjectsHash">
      <summary>
        <para>A hash representing the state of Scene objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.skySettingsHash">
      <summary>
        <para>A hash representing the settings of the sky.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem">
      <summary>
        <para>Empty implementation of IScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.stageCount">
      <summary>
        <para>Number of stages of the baking process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.stateHashes">
      <summary>
        <para>The hashes of the current baked state of the ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.BakeAllReflectionProbes">
      <summary>
        <para>Implement this method to bake all of the loaded reflection probes.</para>
      </summary>
      <returns>
        <para>True when the probe were baked, false when baking was not completed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Cancel">
      <summary>
        <para>Cancel the running bake jobs.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Clear">
      <summary>
        <para>Clear the state of ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.SynchronizeReflectionProbes">
      <summary>
        <para>Synchronize the baked data with the actual components and rendering settings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Tick(UnityEditor.Experimental.Rendering.SceneStateHash,UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier)">
      <summary>
        <para>This method is called during the Editor update until the ScriptableBakedReflectionSystem indicates that the baking is complete, with handle.SetIsDone(true). (See IScriptableBakedReflectionSystemStageNotifier.SetIsDone).</para>
      </summary>
      <param name="sceneStateHash">Current Scene state hash.</param>
      <param name="handle">A handle to receive notifications about the status of the stages of the baking process.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystemSettings">
      <summary>
        <para>Global settings for the scriptable baked reflection system.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystemSettings.system">
      <summary>
        <para>The currently active ScriptableBakedReflectionSystem, see IScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.SceneManagement.PrefabStage">
      <summary>
        <para>The PrefabStage class represents an editing context for Prefab Assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.SceneManagement.PrefabStage.assetPath">
      <summary>
        <para>The asset path where the Prefab Asset file is stored, relative to the project root.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.SceneManagement.PrefabStage.mode">
      <summary>
        <para>The Prefab Stage can be opened either in isolation or in context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.SceneManagement.PrefabStage.openedFromInstanceObject">
      <summary>
        <para>A GameObject inside the Prefab instance that you opened Prefab Mode through.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.SceneManagement.PrefabStage.openedFromInstanceRoot">
      <summary>
        <para>The root of the Prefab instance that you opened Prefab Mode through.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabAssetPath">
      <summary>
        <para>The path of the Prefab Asset that is open in this Prefab stage.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabContentsRoot">
      <summary>
        <para>The root GameObject of the loaded Prefab Asset contents.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabSaved(System.Action`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Callback that is invoked whenever the contents of a Prefab stage has been saved.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabSaving(System.Action`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Callback that's invoked whenever the contents of a Prefab stage is about to be saved.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabStageClosing(System.Action`1&lt;UnityEditor.Experimental.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Callback that's invoked whenever a Prefab stage is about to be opened.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabStageDirtied(System.Action`1&lt;UnityEditor.Experimental.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Callback that's invoked whenever a Prefab stage changes from unmodified to modified.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Experimental.SceneManagement.PrefabStage.prefabStageOpened(System.Action`1&lt;UnityEditor.Experimental.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Callback that's invoked whenever a Prefab stage has been opened.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.Experimental.SceneManagement.PrefabStage.ClearDirtiness">
      <summary>
        <para>Clear the dirtyness flag for the Prefab stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.SceneManagement.PrefabStage.IsPartOfPrefabContents(UnityEngine.GameObject)">
      <summary>
        <para>Is this GameObject part of the loaded Prefab Asset contents in the Prefab stage?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is part of the Prefab contents.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Experimental.SceneManagement.PrefabStage.Mode">
      <summary>
        <para>Specifies the mode that Unity uses to open a Prefab stage. You can open the stage either in isolation or in context.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.SceneManagement.PrefabStage.Mode.InContext">
      <summary>
        <para>Editing in context means that you can edit a Prefab Asset in Prefab Mode and still retain the context of the Prefab instance you opened through.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.SceneManagement.PrefabStage.Mode.InIsolation">
      <summary>
        <para>Editing in isolation means that you can edit a Prefab Asset on its own in Prefab Mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.SceneManagement.PrefabStageUtility">
      <summary>
        <para>Utility methods related to Prefab stages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.SceneManagement.PrefabStageUtility.GetCurrentPrefabStage">
      <summary>
        <para>Get the current Prefab stage, or null if there is none.</para>
      </summary>
      <returns>
        <para>The current Prefab stage or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.SceneManagement.PrefabStageUtility.GetPrefabStage(UnityEngine.GameObject)">
      <summary>
        <para>Get the Prefab stage which contains the given GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>The containing Prefab stage.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags">
      <summary>
        <para>Flags that specify which brush controls the [IOnInspectorGUI.ShowBrushesGUI] method displays.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags.All">
      <summary>
        <para>Display all brush controls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags.Inspect">
      <summary>
        <para>Display the brush inspector for the currently selected brush.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags.Opacity">
      <summary>
        <para>Display the brush opacity control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags.Select">
      <summary>
        <para>Display the brush selection control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags.SelectAndInspect">
      <summary>
        <para>Display the brush selection control, and the brush inspector for the currently selected brush.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags.Size">
      <summary>
        <para>Display the brush size control.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Experimental.TerrainAPI.IOnInspectorGUI">
      <summary>
        <para>Interface that provides parameters and utility functions for the OnInspectorGUI event in the terrain paint tools.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnInspectorGUI.Repaint(UnityEditor.Experimental.TerrainAPI.RepaintFlags)">
      <summary>
        <para>Instructs the Editor to repaint the tool UI and/or the scene view.</para>
      </summary>
      <param name="flags">What to repaint.</param>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnInspectorGUI.ShowBrushesGUI(System.Int32)">
      <summary>
        <para>Displays the default controls for the brush in the tool inspector.</para>
      </summary>
      <param name="spacing">Pixel spacing for the brush GUI controls.</param>
      <param name="flags">Specifies which brush controls to display in the Terrain tool UI.</param>
      <param name="textureResolutionPerTile">The resolution per Terrain tile of the Texture, which the tool is editing.  Unity uses this value to calculate Brush size limits.</param>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnInspectorGUI.ShowBrushesGUI(System.Int32,UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags)">
      <summary>
        <para>Displays the default controls for the brush in the tool inspector.</para>
      </summary>
      <param name="spacing">Pixel spacing for the brush GUI controls.</param>
      <param name="flags">Specifies which brush controls to display in the Terrain tool UI.</param>
      <param name="textureResolutionPerTile">The resolution per Terrain tile of the Texture, which the tool is editing.  Unity uses this value to calculate Brush size limits.</param>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnInspectorGUI.ShowBrushesGUI(System.Int32,UnityEditor.Experimental.TerrainAPI.BrushGUIEditFlags,System.Int32)">
      <summary>
        <para>Displays the default controls for the brush in the tool inspector.</para>
      </summary>
      <param name="spacing">Pixel spacing for the brush GUI controls.</param>
      <param name="flags">Specifies which brush controls to display in the Terrain tool UI.</param>
      <param name="textureResolutionPerTile">The resolution per Terrain tile of the Texture, which the tool is editing.  Unity uses this value to calculate Brush size limits.</param>
    </member>
    <member name="?:UnityEditor.Experimental.TerrainAPI.IOnPaint">
      <summary>
        <para>Interface that provides parameters and utility functions for the OnPaint event of the terrain paint tools.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnPaint.brushSize">
      <summary>
        <para>Read only. Current brush size in Terrain units (equivalent size to world units).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnPaint.brushStrength">
      <summary>
        <para>Read only. Current brush strength.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnPaint.brushTexture">
      <summary>
        <para>Read only. Current selected brush texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnPaint.hitValidTerrain">
      <summary>
        <para>Read only. True if the mouse is over a valid Terrain object; otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnPaint.raycastHit">
      <summary>
        <para>Read only. The raycast result for the current mouse position.  This is valid when hitValidTerrain is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnPaint.uv">
      <summary>
        <para>Read only. The normalized position (between 0 and 1) on the active Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnPaint.Repaint(UnityEditor.Experimental.TerrainAPI.RepaintFlags)">
      <summary>
        <para>Instructs the Editor to repaint the tool UI, the Scene view, or both.</para>
      </summary>
      <param name="flags">Specifies what to repaint.</param>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnPaint.RepaintAllInspectors">
      <summary>
        <para>Instructs the Editor to repaint the inspector UI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI">
      <summary>
        <para>Interface that provides parameters and utility functions for the OnSceneGUI event of the terrain paint tools.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.brushSize">
      <summary>
        <para>Read only. Current brush size in terrain units (equivalent size to world units).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.brushStrength">
      <summary>
        <para>Read only. Current brush strength.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.brushTexture">
      <summary>
        <para>Read only. Current selected brush texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.hitValidTerrain">
      <summary>
        <para>Read only. True if the mouse is over a valid Terrain object; otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.raycastHit">
      <summary>
        <para>Read only. The raycast result for the current mouse position.  This is valid when hitValidTerrain is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.sceneView">
      <summary>
        <para>Read only. SceneView object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.IOnSceneGUI.Repaint(UnityEditor.Experimental.TerrainAPI.RepaintFlags)">
      <summary>
        <para>Instructs the Editor to repaint the tool UI, the Scene view, or both.</para>
      </summary>
      <param name="flags">Specifies what to repaint.</param>
    </member>
    <member name="T:UnityEditor.Experimental.TerrainAPI.RepaintFlags">
      <summary>
        <para>Flags that indicate what to repaint on the Terrain tools.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.RepaintFlags.Scene">
      <summary>
        <para>Repaint the Scene view.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.RepaintFlags.UI">
      <summary>
        <para>Repaint the tool UI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool`1">
      <summary>
        <para>Base class for terrain painting tools.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.GetDesc">
      <summary>
        <para>Retrieves the description of the custom terrain tool.</para>
      </summary>
      <returns>
        <para>Tool description.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.GetName">
      <summary>
        <para>Retrieves the name of the custom terrain tool.</para>
      </summary>
      <returns>
        <para>Tool name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnDisable">
      <summary>
        <para>Called when the tool is destroyed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnEnable">
      <summary>
        <para>Called when the tool is created.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnEnterToolMode">
      <summary>
        <para>Called when the tool is activated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnExitToolMode">
      <summary>
        <para>Called when the tool becomes inactive.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnInspectorGUI(UnityEngine.Terrain,UnityEditor.Experimental.TerrainAPI.IOnInspectorGUI)">
      <summary>
        <para>Custom terrain tool OnInspectorGUI callback.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface used to communicate between Editor and Paint tools.</param>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnPaint(UnityEngine.Terrain,UnityEditor.Experimental.TerrainAPI.IOnPaint)">
      <summary>
        <para>Custom terrain tool paint callback.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface used to communicate between Editor and Paint tools.</param>
      <returns>
        <para>Return true to temporarily hide tree, grass, and detail layers on the terrain.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintTool_1.OnSceneGUI(UnityEngine.Terrain,UnityEditor.Experimental.TerrainAPI.IOnSceneGUI)">
      <summary>
        <para>Custom terrain tool OnSceneGUI callback.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface used to communicate between Editor and Paint tools.</param>
    </member>
    <member name="T:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor">
      <summary>
        <para>Terrain paint utility editor helper functions.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor.BrushPreview">
      <summary>
        <para>Enum to specify whether DrawBrushPreview previews the source render texture or the destination render texture of a PaintContext.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor.BrushPreview.DestinationRenderTexture">
      <summary>
        <para>Specifies that Experimental.TerrainAPI.TerrainPaintUtilityEditor.DrawBrushPreview uses the destination render texture of the PaintContext.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor.BrushPreview.SourceRenderTexture">
      <summary>
        <para>Specifies that Experimental.TerrainAPI.TerrainPaintUtilityEditor.DrawBrushPreview uses the source render texture of the PaintContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor.DrawBrushPreview(UnityEngine.Experimental.TerrainAPI.PaintContext,UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor/BrushPreview,UnityEngine.Texture,UnityEngine.Experimental.TerrainAPI.BrushTransform,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Draws a Terrain brush preview mesh from a heightmap PaintContext using the provided procedural material.</para>
      </summary>
      <param name="heightmapPC">PaintContext describing the heightmap from which to build the preview mesh.</param>
      <param name="previewTexture">Specifies Whether to build the mesh using the source or destination render texture in heightmapPC.</param>
      <param name="brushTexture">The brush texture to preview.</param>
      <param name="brushXform">Describes the position and orientation of the brush.</param>
      <param name="proceduralMaterial">Material used to render the preview.</param>
      <param name="materialPassIndex">Material pass to render.</param>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor.GetDefaultBrushPreviewMaterial">
      <summary>
        <para>Returns the default brush preview material.  This material supports procedural mesh generation for use with DrawBrushPreview.</para>
      </summary>
      <returns>
        <para>Default brush preview material.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainPaintUtilityEditor.ShowDefaultPreviewBrush(UnityEngine.Terrain,UnityEngine.Texture,System.Single)">
      <summary>
        <para>Helper function to display a default preview brush with no rotation or custom materials.</para>
      </summary>
      <param name="terrain">Terrain object.</param>
      <param name="brushTexture">Brush texture.</param>
      <param name="brushSize">Brush size.</param>
    </member>
    <member name="T:UnityEditor.Experimental.TerrainAPI.TerrainToolShortcutContext">
      <summary>
        <para>The shortcut context that is active while editing Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.TerrainAPI.TerrainToolShortcutContext.SelectPaintTool">
      <summary>
        <para>Changes the selected Terrain paint tool.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ExportPackageOptions">
      <summary>
        <para>Export package option. Multiple options can be combined together using the | operator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Default">
      <summary>
        <para>Default mode. Will not include dependencies or subdirectories nor include Library assets unless specifically included in the asset list.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.IncludeDependencies">
      <summary>
        <para>In addition to the assets paths listed, all dependent assets will be included as well.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.IncludeLibraryAssets">
      <summary>
        <para>The exported package will include all library assets, ie. the project settings located in the Library folder of the project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Interactive">
      <summary>
        <para>The export operation will be run asynchronously and reveal the exported package file in a file browser window after the export is finished.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Recurse">
      <summary>
        <para>Will recurse through any subdirectories listed and include all assets inside them.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ExpressionEvaluator">
      <summary>
        <para>Evaluates simple math expressions; supports int  float and operators: + - *  % ^ ( ).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ExpressionEvaluator.Evaluate">
      <summary>
        <para>Evaluates a math expression and returns the result as a float or int.</para>
      </summary>
      <param name="expression">A string containing a mathematical expression (e.g. "4 + 3").</param>
      <returns>
        <para>The result of the evaluation (0 for invalid expressions).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.FilePathAttribute">
      <summary>
        <para>An attribute that specifies a file location relative to the Project folder or Unity's preferences folder. See Also: FilePathAttribute.Location.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FilePathAttribute.#ctor(System.String,UnityEditor.FilePathAttribute/Location)">
      <summary>
        <para></para>
      </summary>
      <param name="relativePath">Relative path to the specified 'location'.</param>
      <param name="location">Location option that specifies which root folder to combine the 'relativePath' with.</param>
    </member>
    <member name="T:UnityEditor.FilePathAttribute.Location">
      <summary>
        <para>Specifies the folder location that Unity uses together with the relative path provided in the FilePathAttribute constructor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FilePathAttribute.Location.PreferencesFolder">
      <summary>
        <para>Use this location to save a file relative to the preferences folder. Useful for per-user files that are across all projects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FilePathAttribute.Location.ProjectFolder">
      <summary>
        <para>Use this location to save a file relative to the Project Folder. Useful for per-project files (not shared between projects).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.FileUtil">
      <summary>
        <para>Lets you do move, copy, delete operations over files or directories.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FileUtil.CopyFileOrDirectory(System.String,System.String)">
      <summary>
        <para>Copies a file or a directory.</para>
      </summary>
      <param name="source"></param>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEditor.FileUtil.CopyFileOrDirectoryFollowSymlinks(System.String,System.String)">
      <summary>
        <para>Copies the file or directory.</para>
      </summary>
      <param name="source"></param>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEditor.FileUtil.DeleteFileOrDirectory(System.String)">
      <summary>
        <para>Deletes a file or a directory given a path.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.FileUtil.GetUniqueTempPathInProject">
      <summary>
        <para>Returns a unique path in the Temp folder within your current project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FileUtil.MoveFileOrDirectory(System.String,System.String)">
      <summary>
        <para>Moves a file or a directory from a given path to another path.</para>
      </summary>
      <param name="source"></param>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEditor.FileUtil.ReplaceDirectory(System.String,System.String)">
      <summary>
        <para>Replaces a directory.</para>
      </summary>
      <param name="src"></param>
      <param name="dst"></param>
    </member>
    <member name="M:UnityEditor.FileUtil.ReplaceFile(System.String,System.String)">
      <summary>
        <para>Replaces a file.</para>
      </summary>
      <param name="src"></param>
      <param name="dst"></param>
    </member>
    <member name="T:UnityEditor.FontRenderingMode">
      <summary>
        <para>Font rendering mode constants for TrueTypeFontImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.HintedRaster">
      <summary>
        <para>Use hinted font rendering without anti-aliasing. This is the crispest font rendering option, and may be most readable for small font sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.HintedSmooth">
      <summary>
        <para>Use Anti-Aliased Font rendering with hinting. This forces character lines to run along pixel boundaries.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.OSDefault">
      <summary>
        <para>Use the OS default font rendering mode. This mode is only available for dynamic fonts, as static fonts are generated at build time.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.Smooth">
      <summary>
        <para>Use Anti-Aliased Font rendering. When using dynamic fonts, this is the mode which is fastest in rendering font textures.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.FontTextureCase">
      <summary>
        <para>Texture case constants for TrueTypeFontImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCII">
      <summary>
        <para>Import basic ASCII character set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCIILowerCase">
      <summary>
        <para>Only import lower case ASCII character set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCIIUpperCase">
      <summary>
        <para>Only import upper case ASCII character set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.CustomSet">
      <summary>
        <para>Custom set of characters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.Dynamic">
      <summary>
        <para>Render characters into font texture at runtime as needed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.Unicode">
      <summary>
        <para>Import a set of Unicode characters common for latin scripts.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ForceReserializeAssetsOptions">
      <summary>
        <para>Options for AssetDatabase.ForceReserializeAssets.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeAssets">
      <summary>
        <para>Specifies that AssetDatabase.ForceReserializeAssets should load, upgrade, and save the assets at the paths passed to the function, but not their accompanying .meta files.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeAssetsAndMetadata">
      <summary>
        <para>Specifies that AssetDatabase.ForceReserializeAssets should load, upgrade, and save both the assets at the paths passed to the function, and also their accompanying .meta files.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeMetadata">
      <summary>
        <para>Specifies that AssetDatabase.ForceReserializeAssets should load, upgrade, and save the .meta files for the assets at the paths passed to the function, but not the assets themselves.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GameObjectUtility">
      <summary>
        <para>GameObject utility functions.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.AreStaticEditorFlagsSet(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Returns true if the passed in StaticEditorFlags are set on the GameObject specified.</para>
      </summary>
      <param name="go">The GameObject to check.</param>
      <param name="flags">The flags you want to check.</param>
      <returns>
        <para>Whether the GameObject's static flags match the flags specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.EnsureUniqueNameForSibling(UnityEngine.GameObject)">
      <summary>
        <para>You can use this method after parenting one GameObject to another to ensure the child GameObject has a unique name compared to its siblings in the hierarchy.</para>
      </summary>
      <param name="self">The GameObject whose name you want to ensure is unique.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetMonoBehavioursWithMissingScriptCount(UnityEngine.GameObject)">
      <summary>
        <para>Gets the number of MonoBehaviours with a missing script for the given GameObject.</para>
      </summary>
      <param name="go">GameObject to query.</param>
      <returns>
        <para>The number of MonoBehaviours with a missing script.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshArea(UnityEngine.GameObject)">
      <summary>
        <para>Get the navmesh area index for the GameObject.</para>
      </summary>
      <param name="go">The GameObject to query.</param>
      <returns>
        <para>NavMesh area index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaFromName(System.String)">
      <summary>
        <para>Get the navmesh area index from the area name.</para>
      </summary>
      <param name="name">NavMesh area name to query.</param>
      <returns>
        <para>The NavMesh area index. If there is no NavMesh area with the requested name, the return value is -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaNames">
      <summary>
        <para>Get all the navmesh area names.</para>
      </summary>
      <returns>
        <para>Names of all the NavMesh areas.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayer(UnityEngine.GameObject)">
      <summary>
        <para>Get the navmesh layer for the GameObject.</para>
      </summary>
      <param name="go">The GameObject to check.</param>
      <returns>
        <para>The navmesh layer for the GameObject specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerFromName(System.String)">
      <summary>
        <para>Get the navmesh layer from the layer name.</para>
      </summary>
      <param name="name">The name of the navmesh layer.</param>
      <returns>
        <para>The layer number of the navmesh layer name specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerNames">
      <summary>
        <para>Get all the navmesh layer names.</para>
      </summary>
      <returns>
        <para>An array of the names of all navmesh layers.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetStaticEditorFlags(UnityEngine.GameObject)">
      <summary>
        <para>Gets the StaticEditorFlags of the GameObject specified.</para>
      </summary>
      <param name="go">The GameObject whose flags you are interested in.</param>
      <returns>
        <para>The static editor flags of the GameObject specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetUniqueNameForSibling(UnityEngine.Transform,System.String)">
      <summary>
        <para>You can use this method before instantiating a new sibling, or before parenting one GameObject to another, to ensure the new child GameObject has a unique name compared to its siblings in the hierarchy.</para>
      </summary>
      <param name="parent">Target parent for a new GameObject. Null means root level.</param>
      <param name="name">Requested name for a new GameObject.</param>
      <returns>
        <para>Unique name for a new GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.ModifyMaskIfGameObjectIsHiddenForPrefabModeInContext(System.UInt64,UnityEngine.GameObject)">
      <summary>
        <para>Use this method if a custom scene culling mask is needed for renderers that should be shown or hidden in a Scene view when Prefab Mode in Context is active.</para>
      </summary>
      <param name="sceneCullingMask">The scene culling mask intended to be used with the custom renderer.</param>
      <param name="gameObject">The GameObject associated with the custom renderer.</param>
      <returns>
        <para>If the GameObject is hidden for Prefab Mode in Context, a modified scene culling mask is returned. If it's not hidden, then the input scene culling mask is returned.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.RemoveMonoBehavioursWithMissingScript(UnityEngine.GameObject)">
      <summary>
        <para>Removes the MonoBehaviours with a missing script from the given GameObject.</para>
      </summary>
      <param name="go">The GameObject to remove MonoBehaviours with a missing script from.</param>
      <returns>
        <para>The number of MonoBehaviours with a missing script that were removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetNavMeshArea(UnityEngine.GameObject,System.Int32)">
      <summary>
        <para>Set the navmesh area for the gameobject.</para>
      </summary>
      <param name="go">GameObject to modify.</param>
      <param name="areaIndex">NavMesh area index to set.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetNavMeshLayer(UnityEngine.GameObject,System.Int32)">
      <summary>
        <para>Set the navmesh layer for the GameObject.</para>
      </summary>
      <param name="go">The GameObject on which to set the navmesh layer.</param>
      <param name="areaIndex">The layer number you want to set.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetParentAndAlign(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Sets the parent and gives the child the same layer and position.</para>
      </summary>
      <param name="child">The GameObject that should have a new parent set.</param>
      <param name="parent">The GameObject that the child should get as a parent and have position and layer copied from. If null, this function does nothing.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetStaticEditorFlags(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Sets the StaticEditorFlags of the specified GameObject.</para>
      </summary>
      <param name="go">The GameObject whose Static Editor Flags you want to set.</param>
      <param name="flags">The StaticEditorFlags to set on the GameObject.</param>
    </member>
    <member name="T:UnityEditor.GenericMenu">
      <summary>
        <para>GenericMenu lets you create custom context menus and dropdown menus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GenericMenu.allowDuplicateNames">
      <summary>
        <para>Allow the menu to have multiple items with the same name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent)">
      <summary>
        <para>Add a disabled item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to display as a disabled menu item.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Add a disabled item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to display as a disabled menu item.</param>
      <param name="on">Specifies whether to show that the item is currently activated (i.e. a tick next to the item in the menu).</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu/MenuFunction)">
      <summary>
        <para>Add an item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to add as a menu item.</param>
      <param name="on">Specifies whether to show the item is currently activated (i.e. a tick next to the item in the menu).</param>
      <param name="func">The function to call when the menu item is selected.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu/MenuFunction2,System.Object)">
      <summary>
        <para>Add an item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to add as a menu item.</param>
      <param name="on">Specifies whether to show the item is currently activated (i.e. a tick next to the item in the menu).</param>
      <param name="func">The function to call when the menu item is selected.</param>
      <param name="userData">The data to pass to the function called when the item is selected.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddSeparator(System.String)">
      <summary>
        <para>Add a seperator item to the menu.</para>
      </summary>
      <param name="path">The path to the submenu, if adding a separator to a submenu. When adding a separator to the top level of a menu, use an empty string as the path.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.DropDown(UnityEngine.Rect)">
      <summary>
        <para>Show the menu at the given screen rect.</para>
      </summary>
      <param name="position">The position at which to show the menu.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.GetItemCount">
      <summary>
        <para>Get number of items in the menu.</para>
      </summary>
      <returns>
        <para>The number of items in the menu.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.GenericMenu.MenuFunction">
      <summary>
        <para>Callback function, called when a menu item is selected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GenericMenu.MenuFunction2">
      <summary>
        <para>Callback function with user data, called when a menu item is selected.</para>
      </summary>
      <param name="userData">The data to pass through to the callback function.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.ShowAsContext">
      <summary>
        <para>Show the menu under the mouse when right-clicked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GizmoType">
      <summary>
        <para>Determines how a gizmo is drawn or picked in the Unity editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Active">
      <summary>
        <para>Draw the gizmo if it is active (shown in the inspector).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.InSelectionHierarchy">
      <summary>
        <para>Draw the gizmo if it is selected or it is a child/descendent of the selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.NonSelected">
      <summary>
        <para>Draw the gizmo if it is not selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.NotInSelectionHierarchy">
      <summary>
        <para>Draw the gizmo if it is not selected and also no parent/ancestor is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Pickable">
      <summary>
        <para>The gizmo can be picked in the editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Selected">
      <summary>
        <para>Draw the gizmo if it is selected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GlobalObjectId">
      <summary>
        <para>Struct providing an API for stable, project-global object identifiers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.assetGUID">
      <summary>
        <para>The GUID for the asset to which this object belongs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.identifierType">
      <summary>
        <para>The identifier type represented as an integer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.targetObjectId">
      <summary>
        <para>The local file ID of the object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.targetPrefabId">
      <summary>
        <para>The prefab instance id of the object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.Equals(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Check equality between two GlobalObjectIds.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdSlow(UnityEngine.Object)">
      <summary>
        <para>Converts an Object reference or InstanceID to a GlobalObjectId.</para>
      </summary>
      <param name="targetObject">The Object to be converted.</param>
      <param name="instanceId">The InstanceID of the Object to be converted.</param>
      <returns>
        <para>The converted GlobalObjectId. If the conversion is unsuccessful, the GlobalObjectId is set to the default null ID: "GlobalObjectId_V1-0-00000000000000000000000000000000-0-0".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdSlow(System.Int32)">
      <summary>
        <para>Converts an Object reference or InstanceID to a GlobalObjectId.</para>
      </summary>
      <param name="targetObject">The Object to be converted.</param>
      <param name="instanceId">The InstanceID of the Object to be converted.</param>
      <returns>
        <para>The converted GlobalObjectId. If the conversion is unsuccessful, the GlobalObjectId is set to the default null ID: "GlobalObjectId_V1-0-00000000000000000000000000000000-0-0".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdsSlow(UnityEngine.Object[],UnityEditor.GlobalObjectId[])">
      <summary>
        <para>Creates an array of GlobalObjectIds based on an array of Objects or InstanceIDs.</para>
      </summary>
      <param name="objects">Array of Objects to convert.</param>
      <param name="outputIdentifiers">Resulting array of GlobalObjectIds.</param>
      <param name="instanceIds">Array of InstanceIDs to convert.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdsSlow(System.Int32[],UnityEditor.GlobalObjectId[])">
      <summary>
        <para>Creates an array of GlobalObjectIds based on an array of Objects or InstanceIDs.</para>
      </summary>
      <param name="objects">Array of Objects to convert.</param>
      <param name="outputIdentifiers">Resulting array of GlobalObjectIds.</param>
      <param name="instanceIds">Array of InstanceIDs to convert.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifiersToInstanceIDsSlow(UnityEditor.GlobalObjectId[],System.Int32[])">
      <summary>
        <para>Creates an array of InstanceIDs based on an array of GlobalObjectIds.</para>
      </summary>
      <param name="identifiers">Array of GlobalObjectIds to convert.</param>
      <param name="outputInstanceIDs">Resulting array of InstanceIDs.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifiersToObjectsSlow(UnityEditor.GlobalObjectId[],UnityEngine.Object[])">
      <summary>
        <para>Creates an array of Objects based on an array of GlobalObjectIds.</para>
      </summary>
      <param name="identifiers">Array of GlobalObjectIds to convert.</param>
      <param name="outputObjects">Resulting array of Object references.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifierToInstanceIDSlow(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Converts a GlobalObjectId to an InstanceID.</para>
      </summary>
      <param name="id">The GlobalObjectId to lookup.</param>
      <returns>
        <para>If the GlobalObjectId is found, this method returns the converted InstanceID. Returns 0 if the GlobalObjectId is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifierToObjectSlow(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Converts a GlobalObjectId to an Object reference.</para>
      </summary>
      <param name="id">The GlobalObjectId to lookup.</param>
      <returns>
        <para>If the GlobalObjectId is found, this method returns the converted Object reference. Returns null if the GlobalObjectId is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.ToString">
      <summary>
        <para>Get the string representation of the GlobalObjectId.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.TryParse(System.String,UnityEditor.GlobalObjectId&amp;)">
      <summary>
        <para>Parses the string representation of a GlobalObjectId into a GlobalObjectId struct.</para>
      </summary>
      <param name="stringValue">The string representation of a GlobalObjectId.
Example: "GlobalObjectId_V1-2-74c253e3f16be4776bb2d88e01f77c8a-902906726-0".</param>
      <param name="id">The GlobalObjectId struct for the parsed values.</param>
      <returns>
        <para>Returns true if the string representation is successfully parsed. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.GraphicsJobMode">
      <summary>
        <para>Enum used to specify the graphics jobs mode to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GraphicsJobMode.Legacy">
      <summary>
        <para>Legacy graphics jobs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GraphicsJobMode.Native">
      <summary>
        <para>Native graphics jobs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GridPalette">
      <summary>
        <para>GridPalette stores settings for Palette assets when shown in the Palette window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.cellSizing">
      <summary>
        <para>Determines the sizing of cells for a Palette.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GridPalette.transparencySortAxis">
      <summary>
        <para>Determines the sorting axis if the Transparency Sort Mode is set to Custom Axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GridPalette.transparencySortMode">
      <summary>
        <para>Determines the Transparency Sorting Mode of Renderers in the Palette.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GridPalette.CellSizing">
      <summary>
        <para>Controls the sizing of cells for a Palette.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.CellSizing.Automatic">
      <summary>
        <para>Automatically resizes the Palette cells by the size of Sprites in the Palette.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.CellSizing.Manual">
      <summary>
        <para>Size of Palette cells will be changed manually by the user.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GUIDrawer">
      <summary>
        <para>Base class for PropertyDrawer and DecoratorDrawer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Handles">
      <summary>
        <para>Custom 3D GUI controls and drawing in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.centerColor">
      <summary>
        <para>Color to use for handles that represent the center of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.color">
      <summary>
        <para>Colors of the handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.currentCamera">
      <summary>
        <para>Setup viewport and stuff for a current camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.inverseMatrix">
      <summary>
        <para>The inverse of the matrix for all handle operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.lighting">
      <summary>
        <para>Are handles lit?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.lineThickness">
      <summary>
        <para>Retrieves the user preference setting that controls the thickness of tool handle lines. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.matrix">
      <summary>
        <para>Matrix for all handle operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.preselectionColor">
      <summary>
        <para>Color to use to highlight an unselected handle currently under the mouse pointer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.secondaryColor">
      <summary>
        <para>Soft color to use for for general things.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.selectedColor">
      <summary>
        <para>Color to use for the currently active handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.xAxisColor">
      <summary>
        <para>Color to use for handles that manipulates the X coordinate of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.yAxisColor">
      <summary>
        <para>Color to use for handles that manipulates the Y coordinate of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.zAxisColor">
      <summary>
        <para>Color to use for handles that manipulates the Z coordinate of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.zTest">
      <summary>
        <para>zTest of the handles.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.ArrowHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw an arrow like those used by the move tool.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.BeginGUI">
      <summary>
        <para>Begin a 2D GUI block inside the 3D handle GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.Button(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Make a 3D Button.</para>
      </summary>
      <param name="position">The position to draw the button in the space of Handles.matrix.</param>
      <param name="direction">The rotation of the button in the space of Handles.matrix.</param>
      <param name="size">The visual size of the handle. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="pickSize">The size of the button for the purpose of detecting a click. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="capFunction">The draw style of the button.</param>
      <returns>
        <para>True when the user clicks the button.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Handles.CapFunction">
      <summary>
        <para>The function to use for drawing the handle e.g. Handles.RectangleCap.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in world-space units.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.CircleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a circle handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.ClearCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Clears the camera.</para>
      </summary>
      <param name="position">Where in the Scene to clear.</param>
      <param name="camera">The camera to clear.</param>
    </member>
    <member name="M:UnityEditor.Handles.ConeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a cone handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.CubeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a cube handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.CylinderHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a cylinder handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.Disc(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
      <summary>
        <para>Make a 3D disc that can be dragged with the mouse.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">The rotation of the disc.</param>
      <param name="position">The center of the disc.</param>
      <param name="axis">The axis to rotate around.</param>
      <param name="size">The size of the disc in world space.</param>
      <param name="cutoffPlane">If true, only the front-facing half of the circle is draw / draggable. This is useful when you have many overlapping rotation axes (like in the default rotate tool) to avoid clutter.</param>
      <param name="snap">The grid size to snap to.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Disc(UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
      <summary>
        <para>Make a 3D disc that can be dragged with the mouse.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">The rotation of the disc.</param>
      <param name="position">The center of the disc.</param>
      <param name="axis">The axis to rotate around.</param>
      <param name="size">The size of the disc in world space.</param>
      <param name="cutoffPlane">If true, only the front-facing half of the circle is draw / draggable. This is useful when you have many overlapping rotation axes (like in the default rotate tool) to avoid clutter.</param>
      <param name="snap">The grid size to snap to.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.DotHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a dot handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAConvexPolygon(UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased convex polygon specified with point array.</para>
      </summary>
      <param name="points">List of points describing the convex polygon.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,System.Int32,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Texture2D,System.Single)">
      <summary>
        <para>Draw textured bezier line through start and end points with the given tangents.</para>
      </summary>
      <param name="startPosition">The start point of the bezier line.</param>
      <param name="endPosition">The end point of the bezier line.</param>
      <param name="startTangent">The start tangent of the bezier line.</param>
      <param name="endTangent">The end tangent of the bezier line.</param>
      <param name="color">The color to use for the bezier line.</param>
      <param name="texture">The texture to use for drawing the bezier line.</param>
      <param name="width">The width of the bezier line.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera">
      <summary>
        <para>Draws a camera inside a rectangle.</para>
      </summary>
      <param name="position">The area to draw the camera within in GUI coordinates.</param>
      <param name="camera">The camera to draw.</param>
      <param name="drawMode">How the camera is drawn (textured, wireframe, etc).</param>
      <param name="gridParam">Parameters of grid drawing (can be omitted).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Draws a camera inside a rectangle.</para>
      </summary>
      <param name="position">The area to draw the camera within in GUI coordinates.</param>
      <param name="camera">The camera to draw.</param>
      <param name="drawMode">How the camera is drawn (textured, wireframe, etc.).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera,UnityEditor.DrawCameraMode)">
      <summary>
        <para>Draws a camera inside a rectangle.</para>
      </summary>
      <param name="position">The area to draw the camera within in GUI coordinates.</param>
      <param name="camera">The camera to draw.</param>
      <param name="drawMode">How the camera is drawn (textured, wireframe, etc.).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draw a dotted line from p1 to p2.</para>
      </summary>
      <param name="p1">The start point.</param>
      <param name="p2">The end point.</param>
      <param name="screenSpaceSize">The size in pixels for the lengths of the line segments and the gaps between them.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Single)">
      <summary>
        <para>Draw a list of dotted line segments.</para>
      </summary>
      <param name="lineSegments">A list of pairs of points that represent the start and end of line segments.</param>
      <param name="screenSpaceSize">The size in pixels for the lengths of the line segments and the gaps between them.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Int32[],System.Single)">
      <summary>
        <para>Draw a list of indexed dotted line segments.</para>
      </summary>
      <param name="points">A list of points.</param>
      <param name="segmentIndices">A list of pairs of indices to the start and end points of the line segments.</param>
      <param name="screenSpaceSize">The size in pixels for the lengths of the line segments and the gaps between them.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawGizmos">
      <summary>
        <para>Draw a subset of Gizmos (before or after postprocessing) for the given camera.</para>
      </summary>
      <param name="camera">The camera of the current view.</param>
    </member>
    <member name="T:UnityEditor.Handles.DrawingScope">
      <summary>
        <para>Disposable helper struct for automatically setting and reverting Handles.color and/or Handles.matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.DrawingScope.originalColor">
      <summary>
        <para>The value of Handles.color at the time this DrawingScope was created.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.DrawingScope.originalMatrix">
      <summary>
        <para>The value of Handles.matrix at the time this DrawingScope was created.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Color)">
      <summary>
        <para>Create a new DrawingScope and set Handles.color and/or Handles.matrix to the specified values.</para>
      </summary>
      <param name="matrix">The matrix to use for displaying Handles inside the scope block.</param>
      <param name="color">The color to use for displaying Handles inside the scope block.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Color,UnityEngine.Matrix4x4)">
      <summary>
        <para>Create a new DrawingScope and set Handles.color and/or Handles.matrix to the specified values.</para>
      </summary>
      <param name="matrix">The matrix to use for displaying Handles inside the scope block.</param>
      <param name="color">The color to use for displaying Handles inside the scope block.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Matrix4x4)">
      <summary>
        <para>Create a new DrawingScope and set Handles.color and/or Handles.matrix to the specified values.</para>
      </summary>
      <param name="matrix">The matrix to use for displaying Handles inside the scope block.</param>
      <param name="color">The color to use for displaying Handles inside the scope block.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.Dispose">
      <summary>
        <para>Automatically reverts Handles.color and Handles.matrix to their values prior to entering the scope, when the scope is exited. You do not need to call this method manually.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draws a line from p1 to p2.</para>
      </summary>
      <param name="p1">The position of the first line's end point in world space.</param>
      <param name="p2">The position of the second line's end point in world space.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draws a line from p1 to p2.</para>
      </summary>
      <param name="p1">The position of the first line's end point in world space.</param>
      <param name="p2">The position of the second line's end point in world space.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[])">
      <summary>
        <para>Draw a list of line segments.</para>
      </summary>
      <param name="lineSegments">A list of pairs of points that represent the start and end of line segments.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[],System.Int32[])">
      <summary>
        <para>Draw a list of indexed line segments.</para>
      </summary>
      <param name="points">A list of points.</param>
      <param name="segmentIndices">A list of pairs of indices to the start and end points of the line segments.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Draw a line going through the list of points.</para>
      </summary>
      <param name="points"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSelectionFrame(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a camera facing selection frame.</para>
      </summary>
      <param name="controlID"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <param name="size"></param>
      <param name="eventType"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Draw a circular sector (pie piece) in 3D space.</para>
      </summary>
      <param name="center">The center of the circle.</param>
      <param name="normal">The normal of the circle.</param>
      <param name="from">The direction of the point on the circumference, relative to the center, where the sector begins.</param>
      <param name="angle">The angle of the sector, in degrees.</param>
      <param name="radius">The radius of the circle

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draw a solid flat disc in 3D space.</para>
      </summary>
      <param name="center">The center of the dics.</param>
      <param name="normal">The normal of the disc.</param>
      <param name="radius">The radius of the dics

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidRectangleWithOutline(UnityEngine.Vector3[],UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Draw a solid outlined rectangle in 3D space.</para>
      </summary>
      <param name="verts">The 4 vertices of the rectangle in world coordinates.</param>
      <param name="faceColor">The color of the rectangle's face.</param>
      <param name="outlineColor">The outline color of the rectangle.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DSDF(UnityEngine.Texture,System.Single,System.Single,UnityEngine.Gradient)">
      <summary>
        <para>Draws a 3D texture using Signed Distance Field rendering mode in 3D space.</para>
      </summary>
      <param name="texture">The volumetric texture to draw.</param>
      <param name="stepScale">The number by which to multiply the ray step size. The ray step size is the distance between 2 neighboring pixels. The default value is 1.</param>
      <param name="surfaceOffset">The intensity of the pixels at which the surface is rendered. When this value is positive, Unity will expand the rendered surface. When this value is negative, Unity will render empty space as a surface, and a surface as empty space. The default value is 0.</param>
      <param name="customColorRamp">The custom gradient that Unity uses as a color ramp. If this is not specified, Unity uses &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;Google Turbo color ramp&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DSlice(UnityEngine.Texture,UnityEngine.Vector3,UnityEngine.FilterMode,System.Boolean,UnityEngine.Gradient)">
      <summary>
        <para>Draws a 3D texture using Slice rendering mode in 3D space.</para>
      </summary>
      <param name="texture">The volumetric texture to draw.</param>
      <param name="slicePositions">The positions of the texture sampling planes.</param>
      <param name="filterMode">Sets the texture filtering mode to use.</param>
      <param name="useColorRamp">Enables color ramp visualization.</param>
      <param name="customColorRamp">The custom gradient that Unity uses as a color ramp. If this is not specified, Unity uses &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;Google Turbo color ramp&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DVolume(UnityEngine.Texture,System.Single,System.Single,UnityEngine.FilterMode,System.Boolean,UnityEngine.Gradient)">
      <summary>
        <para>Draws a 3D texture using Volume rendering mode in 3D space.</para>
      </summary>
      <param name="texture">The volumetric texture to draw.</param>
      <param name="opacity">The non-linear volume opacity modifier. Use this to control the opacity of the visualization. Valid values are 0-1, inclusive. A value of 1 is fully opaque and a value of 0 is fully transparent. The default value is 1.</param>
      <param name="qualityModifier">Sets the sample per texture pixel count. Higher values result in a higher quality render. The default value is 1.</param>
      <param name="filterMode">Sets the texture filtering mode to use.</param>
      <param name="useColorRamp">Enables color ramp visualization.</param>
      <param name="customColorRamp">The custom gradient that Unity uses as a color ramp. If this is not specified, Unity uses &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;Google Turbo color ramp&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a circular arc in 3D space.</para>
      </summary>
      <param name="center">The center of the circle in world space.</param>
      <param name="normal">The normal of the circle in world space.</param>
      <param name="from">The direction of the point on the circle circumference, relative to the center, where the arc begins.</param>
      <param name="angle">The angle of the arc, in degrees.</param>
      <param name="radius">The radius of the circle in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Draws a circular arc in 3D space.</para>
      </summary>
      <param name="center">The center of the circle in world space.</param>
      <param name="normal">The normal of the circle in world space.</param>
      <param name="from">The direction of the point on the circle circumference, relative to the center, where the arc begins.</param>
      <param name="angle">The angle of the arc, in degrees.</param>
      <param name="radius">The radius of the circle in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireCube(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draw a wireframe box with center and size.</para>
      </summary>
      <param name="center"></param>
      <param name="size"></param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draws the outline of a flat disc in 3D space.</para>
      </summary>
      <param name="center">The center of the disc in world space.</param>
      <param name="normal">The normal of the disc in world space.</param>
      <param name="radius">The radius of the disc in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Draws the outline of a flat disc in 3D space.</para>
      </summary>
      <param name="center">The center of the disc in world space.</param>
      <param name="normal">The normal of the disc in world space.</param>
      <param name="radius">The radius of the disc in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.EndGUI">
      <summary>
        <para>End a 2D GUI block and get back to the 3D handle GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.FreeMoveHandle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Make an unconstrained movement handle.</para>
      </summary>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment on all axes. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <param name="controlID">The control ID for the handle.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeMoveHandle(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Make an unconstrained movement handle.</para>
      </summary>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment on all axes. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <param name="controlID">The control ID for the handle.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeRotateHandle(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Make an unconstrained rotation handle.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="size">The size of the handle.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeRotateHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Make an unconstrained rotation handle.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="size">The size of the handle.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.GetMainGameViewSize">
      <summary>
        <para>Get the width and height of the main game view.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.Texture)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.MakeBezierPoints(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)">
      <summary>
        <para>Retuns an array of points to representing the bezier curve.</para>
      </summary>
      <param name="startPosition"></param>
      <param name="endPosition"></param>
      <param name="startTangent"></param>
      <param name="endTangent"></param>
      <param name="division"></param>
    </member>
    <member name="M:UnityEditor.Handles.PositionHandle(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Make a position handle.</para>
      </summary>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="rotation">Orientation of the handle in 3D space.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
        <para>Make a Scene view radius handle.</para>
      </summary>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="radius">Radius to modify.</param>
      <param name="handlesOnly">Whether to omit the circular outline of the radius and only draw the point handles.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Make a Scene view radius handle.</para>
      </summary>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="radius">Radius to modify.</param>
      <param name="handlesOnly">Whether to omit the circular outline of the radius and only draw the point handles.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RectangleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a rectangle handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.RotationHandle(UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Make a Scene view rotation handle.</para>
      </summary>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleHandle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Make a Scene view scale handle.</para>
      </summary>
      <param name="scale">Scale to modify.</param>
      <param name="position">The position of the handle.</param>
      <param name="rotation">The rotation of the handle.</param>
      <param name="size">Allows you to scale the size of the handle on-scren.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleSlider(System.Single,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
      <summary>
        <para>Make a directional scale slider.</para>
      </summary>
      <param name="scale">The value the user can modify.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="direction">The direction of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleValueHandle(System.Single,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEditor.Handles/CapFunction,System.Single)">
      <summary>
        <para>Make a 3D handle that scales a single float.</para>
      </summary>
      <param name="value">The value the user can modify.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Camera)">
      <summary>
        <para>Set the current camera so all Handles and Gizmos are draw with its settings.</para>
      </summary>
      <param name="camera"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Set the current camera so all Handles and Gizmos are draw with its settings.</para>
      </summary>
      <param name="camera"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.Handles.ShouldRenderGizmos">
      <summary>
        <para>Determines whether or not to draw Gizmos.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Handles.SizeFunction">
      <summary>
        <para>A delegate type for getting a handle's size based on its current position.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
    </member>
    <member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Make a 3D slider that moves along one axis.</para>
      </summary>
      <param name="position">The position of the current point in the space of Handles.matrix.</param>
      <param name="direction">The direction axis of the slider in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing. By default it is Handles.ArrowHandleCap, but any function that has the same signature can be used.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,System.Single)">
      <summary>
        <para>Make a 3D slider that moves along one axis.</para>
      </summary>
      <param name="position">The position of the current point in the space of Handles.matrix.</param>
      <param name="direction">The direction axis of the slider in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing. By default it is Handles.ArrowHandleCap, but any function that has the same signature can be used.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,System.Single,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapToGrid(UnityEngine.Transform[],UnityEngine.SnapAxis)">
      <summary>
        <para>Rounds each Transform.position to the closest multiple of EditorSnap.move.</para>
      </summary>
      <param name="transforms">The transforms to snap.</param>
      <param name="axis">The axes on which to apply snapping.</param>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(System.Single,System.Single)">
      <summary>
        <para>Rounds value to the closest multiple of snap if snapping is active. Note that snap can only be positive.</para>
      </summary>
      <param name="value">The value to snap.</param>
      <param name="snap">The increment to snap to.</param>
      <returns>
        <para>If snapping is active, rounds value to the closest multiple of snap (snap can only be positive).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Rounds value to the closest multiple of snap if snapping is active. Note that snap can only be positive.</para>
      </summary>
      <param name="value">The value to snap.</param>
      <param name="snap">The increment to snap to.</param>
      <returns>
        <para>If snapping is active, rounds value to the closest multiple of snap (snap can only be positive).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Rounds value to the closest multiple of snap if snapping is active. Note that snap can only be positive.</para>
      </summary>
      <param name="value">The value to snap.</param>
      <param name="snap">The increment to snap to.</param>
      <returns>
        <para>If snapping is active, rounds value to the closest multiple of snap (snap can only be positive).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SphereHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a sphere handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Creates a transform handle.</para>
      </summary>
      <param name="position">Position of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="scale">Scale value to modify.</param>
      <param name="uniformScale">Uniform scale value to modify.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,System.Single&amp;)">
      <summary>
        <para>Creates a transform handle.</para>
      </summary>
      <param name="position">Position of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="scale">Scale value to modify.</param>
      <param name="uniformScale">Uniform scale value to modify.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Creates a transform handle.</para>
      </summary>
      <param name="position">Position of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="scale">Scale value to modify.</param>
      <param name="uniformScale">Uniform scale value to modify.</param>
    </member>
    <member name="T:UnityEditor.HandleUtility">
      <summary>
        <para>Helper functions for Scene View style 3D GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.acceleration">
      <summary>
        <para>Get standard acceleration for dragging values (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.niceMouseDelta">
      <summary>
        <para>Get nice mouse delta to use for dragging a float value (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.niceMouseDeltaZoom">
      <summary>
        <para>Get nice mouse delta to use for zooming (Read Only).</para>
      </summary>
    </member>
    <member name="?:UnityEditor.HandleUtility.pickGameObjectCustomPasses(UnityEditor.HandleUtility/PickGameObjectCallback)">
      <summary>
        <para>Subscribe to this event to add additional picking objects to the HandleUtility.PickGameObject method.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.HandleUtility.placeObjectCustomPasses(UnityEditor.HandleUtility/PlaceObjectDelegate)">
      <summary>
        <para>Subscribe to this event to handle object placement in the SceneView.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.AddControl(System.Int32,System.Single)">
      <summary>
        <para>Record a distance measurement from a handle.</para>
      </summary>
      <param name="controlId"></param>
      <param name="distance"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.AddDefaultControl(System.Int32)">
      <summary>
        <para>Add the ID for a default control. This will be picked if nothing else is.</para>
      </summary>
      <param name="controlId"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.CalcLineTranslation(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Map a mouse drag onto a movement along a line in 3D space.</para>
      </summary>
      <param name="src">The source point of the drag.</param>
      <param name="dest">The destination point of the drag.</param>
      <param name="srcPosition">The 3D position the dragged object had at src ray.</param>
      <param name="constraintDir">3D direction of constrained movement.</param>
      <returns>
        <para>The distance travelled along constraintDir.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Get the point on an arc (in 3D space) which is closest to the current mouse position.</para>
      </summary>
      <param name="center"></param>
      <param name="normal"></param>
      <param name="from"></param>
      <param name="angle"></param>
      <param name="radius"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Get the point on an disc (in 3D space) which is closest to the current mouse position.</para>
      </summary>
      <param name="center"></param>
      <param name="normal"></param>
      <param name="radius"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Get the point on a polyline (in 3D space) which is closest to the current mouse position.</para>
      </summary>
      <param name="vertices"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Calculate distance between a point and a Bezier curve.</para>
      </summary>
      <param name="point"></param>
      <param name="startPosition"></param>
      <param name="endPosition"></param>
      <param name="startTangent"></param>
      <param name="endTangent"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Calculate distance between a point and a line.</para>
      </summary>
      <param name="point"></param>
      <param name="lineStart"></param>
      <param name="lineEnd"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointToLine(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Distance from a point p in 2d to a line defined by two points a and b.</para>
      </summary>
      <param name="p"></param>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointToLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Distance from a point p in 2d to a line segment defined by two points a and b.</para>
      </summary>
      <param name="p"></param>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a 3D section of a disc.</para>
      </summary>
      <param name="center"></param>
      <param name="normal"></param>
      <param name="from"></param>
      <param name="angle"></param>
      <param name="radius"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCircle(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a camera facing circle.</para>
      </summary>
      <param name="position"></param>
      <param name="radius"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCone(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a cone.</para>
      </summary>
      <param name="position">Position of the cone.</param>
      <param name="rotation">Rotation of the cone.</param>
      <param name="size">Size of the cone.</param>
      <returns>
        <para>Distance from mouse to cone in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCube(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a cube.</para>
      </summary>
      <param name="position">Position of the cube.</param>
      <param name="rotation">Rotation of the cube.</param>
      <param name="size">Size of the cube.</param>
      <returns>
        <para>Distance from mouse to cube in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a 3D disc.</para>
      </summary>
      <param name="center"></param>
      <param name="normal"></param>
      <param name="radius"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a line.</para>
      </summary>
      <param name="p1"></param>
      <param name="p2"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a polyline.</para>
      </summary>
      <param name="points"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToRectangle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a rectangle on screen.</para>
      </summary>
      <param name="position"></param>
      <param name="rotation"></param>
      <param name="size"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Returns the nearest vertex to a guiPoint within a maximum radius of 50 pixels.</para>
      </summary>
      <param name="guiPoint">A point in GUI space.</param>
      <param name="vertex">The nearest vertex position to guiPoint, or a default value if no vertex is within the minimum picking distance.</param>
      <param name="objectsToSearch">An array of Transform to consider when picking the nearest vertex. If null, all active objects in open scenes are considered.</param>
      <param name="objectsToIgnore">An array of Transform to exclude from consideration when picking nearest vertex.</param>
      <returns>
        <para>Returns true if a vertex within 50 pixels of the guiPoint was found, false if no vertex found within the minimum picking radius.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Transform[],UnityEngine.Vector3&amp;)">
      <summary>
        <para>Returns the nearest vertex to a guiPoint within a maximum radius of 50 pixels.</para>
      </summary>
      <param name="guiPoint">A point in GUI space.</param>
      <param name="vertex">The nearest vertex position to guiPoint, or a default value if no vertex is within the minimum picking distance.</param>
      <param name="objectsToSearch">An array of Transform to consider when picking the nearest vertex. If null, all active objects in open scenes are considered.</param>
      <param name="objectsToIgnore">An array of Transform to exclude from consideration when picking nearest vertex.</param>
      <returns>
        <para>Returns true if a vertex within 50 pixels of the guiPoint was found, false if no vertex found within the minimum picking radius.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Transform[],UnityEngine.Transform[],UnityEngine.Vector3&amp;)">
      <summary>
        <para>Returns the nearest vertex to a guiPoint within a maximum radius of 50 pixels.</para>
      </summary>
      <param name="guiPoint">A point in GUI space.</param>
      <param name="vertex">The nearest vertex position to guiPoint, or a default value if no vertex is within the minimum picking distance.</param>
      <param name="objectsToSearch">An array of Transform to consider when picking the nearest vertex. If null, all active objects in open scenes are considered.</param>
      <param name="objectsToIgnore">An array of Transform to exclude from consideration when picking nearest vertex.</param>
      <returns>
        <para>Returns true if a vertex within 50 pixels of the guiPoint was found, false if no vertex found within the minimum picking radius.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.GetHandleSize(UnityEngine.Vector3)">
      <summary>
        <para>Get world space size of a manipulator handle at given position.</para>
      </summary>
      <param name="position">The position of the handle in 3d space.</param>
      <returns>
        <para>A constant screen-size for the handle, based on the distance between from the supplied handle's position to the camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.GUIPointToScreenPixelCoordinate(UnityEngine.Vector2)">
      <summary>
        <para>Converts a 2D GUI position to screen pixel coordinates.</para>
      </summary>
      <param name="guiPoint"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.GUIPointToWorldRay(UnityEngine.Vector2)">
      <summary>
        <para>Convert 2D GUI position to a world space ray.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[],UnityEngine.GameObject[])">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Int32&amp;)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[])">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.HandleUtility.PickGameObjectCallback">
      <summary>
        <para>This is the method definition for pickGameObjectCustomPasses.</para>
      </summary>
      <param name="cam">The camera with which to render pickable objects.</param>
      <param name="layers">A layer mask specifying what layers to consider valid for picking. See also Camera.cullingMask.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects that will be tested for picking intersection. If this argument is not null, only GameObjects in the filter array will be selected.</param>
      <param name="materialIndex">Returns the index of the Renderer component in the material array that is closest to the specified position. If the picked object does not contain a MeshRenderer, or the picking intersection does not fall within a mesh boundary, this returns -1.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect)">
      <summary>
        <para>Pick GameObjects that lie within a specified screen rectangle.</para>
      </summary>
      <param name="rect">An screen rectangle specified with pixel coordinates.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="rect"></param>
      <param name="selectPrefabRootsOnly"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PlaceObject(UnityEngine.Vector2,UnityEngine.Vector3&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Casts a ray against the loaded scenes and returns the nearest intersected point on a collider.</para>
      </summary>
      <param name="guiPosition">The GUI position in the SceneView. You can pass Event.current.mousePosition to this parameter in most cases.</param>
      <param name="position">Returns the nearest intersected point to a ray cast from the mouse position into the scene.</param>
      <param name="normal">Returns the normal of the nearest intersected point to a ray cast from the mouse position into the scene.</param>
      <returns>
        <para>Returns true if the raycast intersected something in the scene; otherwise, false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.HandleUtility.PlaceObjectDelegate">
      <summary>
        <para>This is the method definition for placeObjectCustomPasses.</para>
      </summary>
      <param name="guiPosition">The GUI position in the SceneView. You can pass Event.current.mousePosition to this parameter in most cases.</param>
      <param name="position">Returns the nearest intersected point to a ray cast from the guiPosition into the scene.</param>
      <param name="normal">Returns the normal of the nearest intersected point to a ray cast from the mouse position into the scene.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PointOnLineParameter(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns the parameter for the projection of the point on the given line.</para>
      </summary>
      <param name="point"></param>
      <param name="linePoint"></param>
      <param name="lineDirection"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PopCamera(UnityEngine.Camera)">
      <summary>
        <para>Retrieve all camera settings.</para>
      </summary>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ProjectPointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Project point onto a line.</para>
      </summary>
      <param name="point"></param>
      <param name="lineStart"></param>
      <param name="lineEnd"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PushCamera(UnityEngine.Camera)">
      <summary>
        <para>Store all camera settings.</para>
      </summary>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEditor.HandleUtility.RaySnap(UnityEngine.Ray)">
      <summary>
        <para>Casts ray against the Scene and report if an object lies in its path.</para>
      </summary>
      <param name="ray"></param>
      <returns>
        <para>A boxed RaycastHit, null if nothing hit it.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.Repaint">
      <summary>
        <para>Repaint the current view.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldPointToSizedRect(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Calculate a rectangle to display a 2D GUI element near a projected point in 3D space.</para>
      </summary>
      <param name="position">The world-space position to use.</param>
      <param name="content">The content to make room for.</param>
      <param name="style">The style to use. The style's alignment.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldToGUIPoint(UnityEngine.Vector3)">
      <summary>
        <para>Convert a world space point to a 2D GUI position.</para>
      </summary>
      <param name="world">Point in world space.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldToGUIPointWithDepth(UnityEngine.Vector3)">
      <summary>
        <para>Convert a world space point to a 2D GUI position.</para>
      </summary>
      <param name="world">Point in world space.</param>
      <returns>
        <para>A Vector3 where the x and y values relate to the 2D GUI position. The z value is the distance in world units from the camera.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Help">
      <summary>
        <para>Helper class to access Unity documentation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Help.BrowseURL(System.String)">
      <summary>
        <para>Open url in the default web browser.</para>
      </summary>
      <param name="url"></param>
    </member>
    <member name="M:UnityEditor.Help.GetHelpURLForObject(UnityEngine.Object)">
      <summary>
        <para>Get the URL for this object's documentation.</para>
      </summary>
      <param name="obj">The object to retrieve documentation for.</param>
      <returns>
        <para>The documentation URL for the object. Note that this could use the http: or file: schemas.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Help.HasHelpForObject(UnityEngine.Object)">
      <summary>
        <para>Is there a help page for this object?</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Help.ShowHelpForObject(UnityEngine.Object)">
      <summary>
        <para>Show help page for this object.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Help.ShowHelpPage(System.String)">
      <summary>
        <para>Show a help page.</para>
      </summary>
      <param name="page"></param>
    </member>
    <member name="T:UnityEditor.Highlighter">
      <summary>
        <para>Use this class to highlight elements in the editor for use in in-editor tutorials and similar.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.active">
      <summary>
        <para>Is there currently an active highlight?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeRect">
      <summary>
        <para>The rect in screenspace of the current active highlight.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeText">
      <summary>
        <para>The text of the current active highlight.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeVisible">
      <summary>
        <para>Is the current active highlight visible yet?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String)">
      <summary>
        <para>Highlights an element in the editor.</para>
      </summary>
      <param name="windowTitle">The title of the window the element is inside.</param>
      <param name="text">The text to identify the element with.</param>
      <param name="mode">Optional mode to specify how to search for the element.</param>
      <returns>
        <para>true if the requested element was found; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String,UnityEditor.HighlightSearchMode)">
      <summary>
        <para>Highlights an element in the editor.</para>
      </summary>
      <param name="windowTitle">The title of the window the element is inside.</param>
      <param name="text">The text to identify the element with.</param>
      <param name="mode">Optional mode to specify how to search for the element.</param>
      <returns>
        <para>true if the requested element was found; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Highlighter.HighlightIdentifier(UnityEngine.Rect,System.String)">
      <summary>
        <para>Call this method to create an identifiable rect that the Highlighter can find.</para>
      </summary>
      <param name="position">The position to make highlightable.</param>
      <param name="identifier">The identifier text of the rect.</param>
    </member>
    <member name="M:UnityEditor.Highlighter.Stop">
      <summary>
        <para>Stops the active highlight.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HighlightSearchMode">
      <summary>
        <para>Used to specify how to find a given element in the editor to highlight.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Auto">
      <summary>
        <para>Highlights the first element found using any of the search modes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Content">
      <summary>
        <para>Highlights an element containing text using the text as identifier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Identifier">
      <summary>
        <para>Highlights an element with a given identifier text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.None">
      <summary>
        <para>Highlights nothing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.PrefixLabel">
      <summary>
        <para>Highlights an entire editor control using its label text as identifier.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IconKind">
      <summary>
        <para>Icon kind.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Any">
      <summary>
        <para>This icon can be used for any purpose in an application.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Application">
      <summary>
        <para>This icon is used for the main application icons.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Notification">
      <summary>
        <para>This icon is used for push notifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Settings">
      <summary>
        <para>This icon is used for settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Spotlight">
      <summary>
        <para>This icon is used for Spotlight searches. (iOS only).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Store">
      <summary>
        <para>This icon is used by the iOS App Store.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IHasCustomMenu">
      <summary>
        <para>Defines a method to add custom menu items to an Editor Window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IHasCustomMenu.AddItemsToMenu(UnityEditor.GenericMenu)">
      <summary>
        <para>Adds your custom menu items to an Editor Window.</para>
      </summary>
      <param name="menu"></param>
    </member>
    <member name="T:UnityEditor.IHVImageFormatImporter">
      <summary>
        <para>Use IHVImageFormatImporter to modify Texture2D import settings for Textures in IHV (Independent Hardware Vendor) formats such as .DDS and .PVR from Editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.isReadable">
      <summary>
        <para>Is texture data readable from scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmaps">
      <summary>
        <para>Enable mipmap streaming for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmapsPriority">
      <summary>
        <para>Relative priority for this texture when reducing memory size in order to hit the memory budget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapMode">
      <summary>
        <para>Texture coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeU">
      <summary>
        <para>Texture U coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeV">
      <summary>
        <para>Texture V coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeW">
      <summary>
        <para>Texture W coordinate wrapping mode for Texture3D.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Il2Cpp.Il2CppBuildPipelineData">
      <summary>
        <para>Contains information for various IIl2CppProcessor callbacks.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.inputDirectory">
      <summary>
        <para>The directory containing the assemblies that IL2CPP will process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.target">
      <summary>
        <para>The build target.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.#ctor(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Creates a new instance of an Il2CppBuildPipelineData.</para>
      </summary>
      <param name="target"></param>
      <param name="inputDirectory"></param>
    </member>
    <member name="T:UnityEditor.Il2CppCompilerConfiguration">
      <summary>
        <para>C++ compiler configuration used when compiling IL2CPP generated code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Debug">
      <summary>
        <para>Debug configuration turns off all optimizations, which makes the code quicker to build but slower to run.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Master">
      <summary>
        <para>Master configuration enables all possible optimizations, squeezing every bit of performance possible. For instance, on platforms that use the MSVC++ compiler, this option enables link-time code generation. Compiling code using this configuration can take significantly longer than it does using the Release configuration. Unity recommends building the shipping version of your game using the Master configuration if the increase in build time is acceptable.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Release">
      <summary>
        <para>Release configuration enables optimizations, so the compiled code runs faster and the binary size is smaller but it takes longer to compile.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ILightingExplorerExtension">
      <summary>
        <para>Interface for when you extend the Lighting Explorer. Used in full overrides of the default behavior.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.GetContentTabs">
      <summary>
        <para>Returns the tabs that you have selected to display in the Lighting Explorer.</para>
      </summary>
      <returns>
        <para>Tabs for the Lighting Explorer.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.OnDisable">
      <summary>
        <para>This is called when the Lighting Explorer OnDisable is called, or when you switch to another extension.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.OnEnable">
      <summary>
        <para>This is called when the Lighting Explorer OnEnable is called, or when you switch to another extension.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdown">
      <summary>
        <para>Inherit from this class to implement your own drop-down control.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdown.minimumSize">
      <summary>
        <para>Minimum size of the drop-down window. By default, the drop-down will try to match the width of the given rect or the rendered content.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.BuildRoot">
      <summary>
        <para>Implement this method to generate the content of the drop-down.
This method is called when the drop-down is being shown.</para>
      </summary>
      <returns>
        <para>Root of the list.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.ItemSelected(UnityEditor.IMGUI.Controls.AdvancedDropdownItem)">
      <summary>
        <para>Override this method to get notified when an item is selected.</para>
      </summary>
      <param name="item">Item that got selected.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.Show(UnityEngine.Rect)">
      <summary>
        <para>Call this method to show the drop-down at the given position.</para>
      </summary>
      <param name="rect">Position of the button that triggered the drop-down.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdownItem">
      <summary>
        <para>Items that build the drop-down list.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.children">
      <summary>
        <para>The list of child items of this item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.enabled">
      <summary>
        <para>True if the item is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.icon">
      <summary>
        <para>If set, this icon will be rendered to the left of the item name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.id">
      <summary>
        <para>The unique identifier for an item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.name">
      <summary>
        <para>Name shown for this item when rendered.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.AddChild(UnityEditor.IMGUI.Controls.AdvancedDropdownItem)">
      <summary>
        <para>Adds the given AdvancedDropdownItem child to the children list.</para>
      </summary>
      <param name="child">AdvancedDropdownItem to be added to the children list.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.AddSeparator">
      <summary>
        <para>Adds a separator to the list of children in the drop-down.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdownState">
      <summary>
        <para>The state of the drop-down. This Object can be serialized.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.ArcHandle">
      <summary>
        <para>A class for a compound handle to edit an angle and a radius in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angle">
      <summary>
        <para>Returns or specifies the angle of the arc for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleColor">
      <summary>
        <para>Returns or specifies the color of the angle control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleDrawFunction">
      <summary>
        <para>The Handles.CapFunction to use when displaying the angle control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the angle control handle should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.fillColor">
      <summary>
        <para>Returns or specifies the color of the arc shape.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the arc for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleColor">
      <summary>
        <para>Returns or specifies the color of the radius control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleDrawFunction">
      <summary>
        <para>The Handles.CapFunction to use when displaying the radius control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the angle control handle should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.wireframeColor">
      <summary>
        <para>Returns or specifies the color of the curved line along the outside of the arc.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.#ctor">
      <summary>
        <para>Creates a new instance of the ArcHandle class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultAngleHandleDrawFunction(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>A Handles.CapFunction that draws a line terminated with Handles.CylinderHandleCap.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultAngleHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>A Handles.SizeFunction that returns a fixed screen-space size.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
      <returns>
        <para>The size to use for a handle at the specified position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultRadiusHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>A Handles.SizeFunction that returns a fixed screen-space size.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
      <returns>
        <para>The size to use for a handle at the specified position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DrawHandle">
      <summary>
        <para>A function to display this instance in the current handle camera using its current configuration.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.SetColorWithoutRadiusHandle(UnityEngine.Color,System.Single)">
      <summary>
        <para>Sets angleHandleColor, wireframeColor, and fillColor to the same value, where fillColor will have the specified alpha value. radiusHandleColor will be set to Color.clear and the radius handle will be disabled.</para>
      </summary>
      <param name="color">The color to use for the angle control handle and the fill shape.</param>
      <param name="fillColorAlpha">The alpha value to use for fillColor.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.SetColorWithRadiusHandle(UnityEngine.Color,System.Single)">
      <summary>
        <para>Sets angleHandleColor, radiusHandleColor, wireframeColor, and fillColor to the same value, where fillColor will have the specified alpha value.</para>
      </summary>
      <param name="color">The color to use for the angle and radius control handles and the fill shape.</param>
      <param name="fillColorAlpha">The alpha value to use for fillColor.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.BoxBoundsHandle">
      <summary>
        <para>A compound handle to edit a box-shaped bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.BoxBoundsHandle.size">
      <summary>
        <para>Returns or specifies the size of the bounding box.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the BoxBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your BoxBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the BoxBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your BoxBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe box for this instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle">
      <summary>
        <para>A compound handle to edit a capsule-shaped bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.height">
      <summary>
        <para>Returns or specifies the height of the capsule bounding volume.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.heightAxis">
      <summary>
        <para>Returns or specifies the axis in the handle's space to which height maps. The radius maps to the remaining axes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the capsule bounding volume.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the CapsuleBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your CapsuleBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the CapsuleBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your CapsuleBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe capsule for this instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis">
      <summary>
        <para>An enumeration for specifying which axis on a CapsuleBoundsHandle object maps to the CapsuleBoundsHandle.height parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.X">
      <summary>
        <para>X-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.Y">
      <summary>
        <para>Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.Z">
      <summary>
        <para>Z-axis.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>A callback for when a control handle was dragged in the Scene.</para>
      </summary>
      <param name="handle">The handle that was dragged.</param>
      <param name="boundsOnClick">The raw Bounds for this instance's volume at the time the control handle was clicked.</param>
      <param name="newBounds">The raw Bounds for this instance's volume based on the updated handle position.</param>
      <returns>
        <para>The bounds that should be applied to this instance, with any necessary modifications applied.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.JointAngularLimitHandle">
      <summary>
        <para>A class for a compound handle to edit multiaxial angular motion limits in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.angleHandleDrawFunction">
      <summary>
        <para>The Handles.CapFunction to use when displaying the angle control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.angleHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the angle control handle should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.fillAlpha">
      <summary>
        <para>Returns or specifies the opacity to use when rendering fill shapes for the range of motion for each axis. Defaults to 0.1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the arc for the handle. Defaults to 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.wireframeAlpha">
      <summary>
        <para>Returns or specifies the opacity to use for the curved lines along the outside of the arcs of motion. Defaults to 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xHandleColor">
      <summary>
        <para>Returns or specifies the color to use for the handle limiting motion around the x-axis. Defaults to Handles.xAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMax">
      <summary>
        <para>Returns or specifies the maximum angular motion about the x-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMin">
      <summary>
        <para>Returns or specifies the minimum angular motion about the x-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMotion">
      <summary>
        <para>Returns or specifies how angular motion is limited about the x-axis. Defaults to ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xRange">
      <summary>
        <para>Returns or specifies the range of valid values for angular motion about the x-axis. Defaults to [-180.0, 180.0].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yHandleColor">
      <summary>
        <para>Returns or specifies the color to use for the handle limiting motion around the y-axis. Defaults to Handles.yAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMax">
      <summary>
        <para>Returns or specifies the maximum angular motion about the y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMin">
      <summary>
        <para>Returns or specifies the minimum angular motion about the y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMotion">
      <summary>
        <para>Returns or specifies how angular motion is limited about the y-axis. Defaults to ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yRange">
      <summary>
        <para>Returns or specifies the range of valid values for angular motion about the y-axis. Defaults to [-180.0, 180.0].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zHandleColor">
      <summary>
        <para>Returns or specifies the color to use for the handle limiting motion around the z-axis. Defaults to Handles.zAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMax">
      <summary>
        <para>Returns or specifies the maximum angular motion about the z-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMin">
      <summary>
        <para>Returns or specifies the minimum angular motion about the z-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMotion">
      <summary>
        <para>Returns or specifies how angular motion is limited about the z-axis. Defaults to ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zRange">
      <summary>
        <para>Returns or specifies the range of valid values for angular motion about the z-axis. Defaults to [-180.0, 180.0].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.#ctor">
      <summary>
        <para>Creates a new instance of the JointAngularLimitHandle class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.DrawHandle">
      <summary>
        <para>A function to display this instance in the current handle camera using its current configuration.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader">
      <summary>
        <para>The MultiColumnHeader is a general purpose class that e.g can be used with the TreeView to create multi-column tree views and list views.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.canSort">
      <summary>
        <para>Use this property to control whether sorting is enabled for all the columns.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.height">
      <summary>
        <para>Customizable height of the multi column header.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.sortedColumnIndex">
      <summary>
        <para>The index of the column that is set to be the primary sorting column. This is the column that shows the sorting arrow above the header text.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.sortingChanged(UnityEditor.IMGUI.Controls.MultiColumnHeader/HeaderCallback)">
      <summary>
        <para>Subscribe to this event to get notified when sorting has changed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.state">
      <summary>
        <para>This is the state of the MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.visibleColumnsChanged(UnityEditor.IMGUI.Controls.MultiColumnHeader/HeaderCallback)">
      <summary>
        <para>Subscribe to this event to get notified when the number of visible columns has changed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.AddColumnHeaderContextMenuItems(UnityEditor.GenericMenu)">
      <summary>
        <para>Override this method to extend the default context menu items shown when context clicking the header area.</para>
      </summary>
      <param name="menu">Context menu shown.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ColumnHeaderClicked(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,System.Int32)">
      <summary>
        <para>Override to customize the behavior when clicking a column header.</para>
      </summary>
      <param name="column">Column clicked.</param>
      <param name="columnIndex">Column index clicked.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ColumnHeaderGUI(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Override to customize the GUI of a single column header.</para>
      </summary>
      <param name="column">Column header data.</param>
      <param name="headerRect">Rect for column header.</param>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.#ctor(UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="state">Column header state and Column state.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI">
      <summary>
        <para>Default GUI methods and properties for the MultiColumnHeader class.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.columnContentMargin">
      <summary>
        <para>Margin that can be used by clients of the MultiColumnHeader to control spacing between content in multiple columns.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.defaultHeight">
      <summary>
        <para>Default height of the header.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.minimumHeight">
      <summary>
        <para>This height is the minium height the header can have and can only be used if sorting is disabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles">
      <summary>
        <para>Default styles used by the MultiColumnHeader class.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.background">
      <summary>
        <para>Style used for rendering the background of the header.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeader">
      <summary>
        <para>Style used for left aligned header text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeaderCenterAligned">
      <summary>
        <para>Style used for centered header text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeaderRightAligned">
      <summary>
        <para>Style used for right aligned header text.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetCellRect(System.Int32,UnityEngine.Rect)">
      <summary>
        <para>Calculates a cell rect for a column and row using the visibleColumnIndex and rowRect parameters.</para>
      </summary>
      <param name="visibleColumnIndex"></param>
      <param name="rowRect"></param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetColumn(System.Int32)">
      <summary>
        <para>Returns the column data for a given column index.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <returns>
        <para>Column data.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetColumnRect(System.Int32)">
      <summary>
        <para>Returns the header column Rect for a given visible column index.</para>
      </summary>
      <param name="visibleColumnIndex">Index of a visible column.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetVisibleColumnIndex(System.Int32)">
      <summary>
        <para>Convert from column index to visible column index.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <returns>
        <para>Visible column index.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.HeaderCallback">
      <summary>
        <para>Delegate used for events from the MultiColumnHeader.</para>
      </summary>
      <param name="multiColumnHeader">The MultiColumnHeader that dispatched this event.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.IsColumnVisible(System.Int32)">
      <summary>
        <para>Check if a column is currently visible in the MultiColumnHeader.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.IsSortedAscending(System.Int32)">
      <summary>
        <para>Check the sorting order state for a column.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <returns>
        <para>True if sorted ascending.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnGUI(UnityEngine.Rect,System.Single)">
      <summary>
        <para>Render and handle input for the MultiColumnHeader at the given rect.</para>
      </summary>
      <param name="xScroll">Horizontal scroll offset.</param>
      <param name="rect">Rect where the MultiColumnHeader is drawn in.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnSortingChanged">
      <summary>
        <para>Called when sorting changes and dispatches the sortingChanged event.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnVisibleColumnsChanged">
      <summary>
        <para>Called when the number of visible column changes and dispatches the visibleColumnsChanged event.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.Repaint">
      <summary>
        <para>Requests the window which contains the MultiColumnHeader to repaint.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ResizeToFit">
      <summary>
        <para>Resizes the column widths of the columns that have auto-resize enabled to make all the columns fit to the width of the MultiColumnHeader render rect.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSortDirection(System.Int32,System.Boolean)">
      <summary>
        <para>Change sort direction for a given column.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <param name="sortAscending">Direction of the sorting.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSorting(System.Int32,System.Boolean)">
      <summary>
        <para>Sets the primary sorting column and its sorting order.</para>
      </summary>
      <param name="columnIndex">Column to sort.</param>
      <param name="sortAscending">Sorting order for the column specified.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSortingColumns(System.Int32[],System.Boolean[])">
      <summary>
        <para>Sets multiple sorting columns and the associated sorting orders.</para>
      </summary>
      <param name="columnIndices">Column indices of the sorted columns.</param>
      <param name="sortAscending">Sorting order for the column indices specified.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SortingButton(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Provides the button logic for a column header and the rendering of the sorting arrow (if visible).</para>
      </summary>
      <param name="column">Column data.</param>
      <param name="headerRect">Column header rect.</param>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ToggleVisibility(System.Int32)">
      <summary>
        <para>Method for toggling the visibility of a column.</para>
      </summary>
      <param name="columnIndex">Toggle visibility for this column.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeaderState">
      <summary>
        <para>State used by the MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.columns">
      <summary>
        <para>The array of column states used by the MultiColumnHeader class.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.maximumNumberOfSortedColumns">
      <summary>
        <para>This property controls the maximum number of columns returned by the sortedColumns property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.sortedColumnIndex">
      <summary>
        <para>This property holds the index to the primary sorted column.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.sortedColumns">
      <summary>
        <para>The array of column indices for multiple column sorting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.visibleColumns">
      <summary>
        <para>This is the array of currently visible column indices.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.widthOfAllVisibleColumns">
      <summary>
        <para>Returns the sum of all the widths of the visible columns in the visibleColumns array.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.CanOverwriteSerializedFields(UnityEditor.IMGUI.Controls.MultiColumnHeaderState,UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Checks if the source state can transfer its serialized data to the destination state.</para>
      </summary>
      <param name="source">State that have serialized data to be transfered to the destination state.</param>
      <param name="destination">Destination state.</param>
      <returns>
        <para>Returns true if the source state have the same number of columns as the destination state.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column">
      <summary>
        <para>Column state.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.allowToggleVisibility">
      <summary>
        <para>Option to allow/disallow hiding the column from the context menu.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.autoResize">
      <summary>
        <para>Option to allow the column to resize automatically when resizing the entire MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.canSort">
      <summary>
        <para>Is sorting enabled for this column. If false, left-clicking this column header has no effect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.contextMenuText">
      <summary>
        <para>If this is set then it is used for the context menu for toggling visibility, if not set then the ::headerContent is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.headerContent">
      <summary>
        <para>This is the GUIContent that will be rendered in the column header.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.headerTextAlignment">
      <summary>
        <para>Alignment of the header content.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.maxWidth">
      <summary>
        <para>Maximum width of the column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.minWidth">
      <summary>
        <para>Minimum width of the column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.sortedAscending">
      <summary>
        <para>Value that controls if this column is sorted ascending or descending.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.sortingArrowAlignment">
      <summary>
        <para>Alignment of the sorting arrow.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.width">
      <summary>
        <para>The width of the column.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.#ctor(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column[])">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="columns">Column data.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.OverwriteSerializedFields(UnityEditor.IMGUI.Controls.MultiColumnHeaderState,UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Overwrites the seralized fields from the source state to the destination state.</para>
      </summary>
      <param name="source">State that have serialized data to be transfered to the destination state.</param>
      <param name="destination">Destination state.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle">
      <summary>
        <para>Base class for a compound handle to edit a bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.axes">
      <summary>
        <para>Flags specifying which axes should display control handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.center">
      <summary>
        <para>Returns or specifies the center of the bounding volume for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.handleColor">
      <summary>
        <para>Returns or specifies the color of the control handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.midpointHandleDrawFunction">
      <summary>
        <para>An optional Handles.CapFunction to use when displaying the control handles. Defaults to Handles.DotHandleCap if no value is specified.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.midpointHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the midpoint control handles should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.wireframeColor">
      <summary>
        <para>Returns or specifies the color of the wireframe shape.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes">
      <summary>
        <para>A flag enumeration for specifying which axes on a PrimitiveBoundsHandle object should be enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.All">
      <summary>
        <para>All axes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.None">
      <summary>
        <para>No axes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.X">
      <summary>
        <para>X-axis (bit 0).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.Y">
      <summary>
        <para>Y-axis (bit 1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.Z">
      <summary>
        <para>Z-axis (bit 2).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the PrimitiveBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your PrimitiveBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the PrimitiveBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your PrimitiveBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>A Handles.SizeFunction that returns a fixed screen-space size.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
      <returns>
        <para>The size to use for a handle at the specified position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DrawHandle">
      <summary>
        <para>A function to display this instance in the current handle camera using its current configuration.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe shape for this instance. Subclasses must implement this method.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.GetSize">
      <summary>
        <para>Gets the current size of the bounding volume for this instance.</para>
      </summary>
      <returns>
        <para>The current size of the bounding volume for this instance.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection">
      <summary>
        <para>An enumeration of directions the handle moves in.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeX">
      <summary>
        <para>This value corresponds to the handle moving in a negative direction away from PrimitiveBoundsHandle.center along the x-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeY">
      <summary>
        <para>This value corresponds to the handle moving in a negative direction away from PrimitiveBoundsHandle.center along the y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeZ">
      <summary>
        <para>This value corresponds to the handle moving in a negative direction away from PrimitiveBoundsHandle.center along the z-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveX">
      <summary>
        <para>This value corresponds to the handle moving in a positive direction away from PrimitiveBoundsHandle.center along the x-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveY">
      <summary>
        <para>This value corresponds to the handle moving in a positive direction away from PrimitiveBoundsHandle.center along the y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveZ">
      <summary>
        <para>This value corresponds to the handle moving in a positive direction away from PrimitiveBoundsHandle.center along the z-axis.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.IsAxisEnabled(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/Axes)">
      <summary>
        <para>Gets a value indicating whether the specified axis is enabled for the current instance.</para>
      </summary>
      <param name="axis">An Axes.</param>
      <param name="vector3Axis">An integer corresponding to an axis on a Vector3. For example, 0 is x, 1 is y, and 2 is z.</param>
      <returns>
        <para>true if the specified axis is enabled; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.IsAxisEnabled(System.Int32)">
      <summary>
        <para>Gets a value indicating whether the specified axis is enabled for the current instance.</para>
      </summary>
      <param name="axis">An Axes.</param>
      <param name="vector3Axis">An integer corresponding to an axis on a Vector3. For example, 0 is x, 1 is y, and 2 is z.</param>
      <returns>
        <para>true if the specified axis is enabled; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>A callback for when a control handle was dragged in the Scene.</para>
      </summary>
      <param name="handle">The handle that was dragged.</param>
      <param name="boundsOnClick">The raw Bounds for this instance's volume at the time the control handle was clicked.</param>
      <param name="newBounds">The raw Bounds for this instance's volume based on the updated handle position.</param>
      <returns>
        <para>The bounds that should be applied to this instance, with any necessary modifications applied.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.SetColor(UnityEngine.Color)">
      <summary>
        <para>Sets handleColor and wireframeColor to the same value.</para>
      </summary>
      <param name="color">The color to use for the control handles and the wireframe shape.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.SetSize(UnityEngine.Vector3)">
      <summary>
        <para>Sets the current size of the bounding volume for this instance.</para>
      </summary>
      <param name="size">A Vector3 specifying how large the bounding volume is along all of its axes.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SearchField">
      <summary>
        <para>The SearchField control creates a text field for a user to input text that can be used for searching.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SearchField.autoSetFocusOnFindCommand">
      <summary>
        <para>Changes the keyboard focus to the search field when the user presses ‘Ctrl/Cmd + F’ when set to true. It is true by default.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.SearchField.downOrUpArrowKeyPressed(UnityEditor.IMGUI.Controls.SearchField/SearchFieldCallback)">
      <summary>
        <para>This event is dispatched when the focused search field detects that the down or up key is pressed and can be used to change keyboard focus to another control, such as the TreeView.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SearchField.searchFieldControlID">
      <summary>
        <para>This is the controlID used for the text field to obtain keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.HasFocus">
      <summary>
        <para>This function returns true if the search field has keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This function displays the search field with the default UI style and uses the GUILayout class to automatically calculate the position and size of the Rect it is rendered to. Pass an optional list to specify extra layout properties.</para>
      </summary>
      <param name="text">Text string to display in the search field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. &lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(UnityEngine.Rect,System.String)">
      <summary>
        <para>This function displays the search field with the default UI style in the given Rect.</para>
      </summary>
      <param name="rect">Rectangle to use for the search field.</param>
      <param name="text">Text string to display in the search field.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(UnityEngine.Rect,System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>This function displays a search text field with the given Rect and UI style parameters.</para>
      </summary>
      <param name="rect">Rectangle to use for the search field.</param>
      <param name="text">Text string to display in the search field.</param>
      <param name="style">The text field style.</param>
      <param name="cancelButtonStyle">The cancel button style used when there is text in the search field.</param>
      <param name="emptyCancelButtonStyle">The cancel button style used when there is no text in the search field.</param>
      <returns>
        <para>The text entered in the SearchField. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnToolbarGUI(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This function displays the search field with the toolbar UI style and uses the GUILayout class to automatically calculate the position and size of the Rect it is rendered to. Pass an optional list to specify extra layout properties.</para>
      </summary>
      <param name="text">Text string to display in the search field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. &lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnToolbarGUI(UnityEngine.Rect,System.String)">
      <summary>
        <para>This function displays the search field with a toolbar style in the given Rect.</para>
      </summary>
      <param name="rect">Rectangle to use for the search field.</param>
      <param name="text">Text string to display in the search field.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SearchField.SearchFieldCallback">
      <summary>
        <para>This is a generic callback delegate for SearchField events and does not take any parameters.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.SetFocus">
      <summary>
        <para>This function changes keyboard focus to the search field so a user can start typing.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SphereBoundsHandle">
      <summary>
        <para>A compound handle to edit a sphere-shaped bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SphereBoundsHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the sphere bounding volume.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the SphereBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your SphereBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the SphereBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your SphereBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe sphere for this instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>A callback for when a control handle was dragged in the Scene.</para>
      </summary>
      <param name="handle">The handle that was dragged.</param>
      <param name="boundsOnClick">The raw Bounds for this instance's volume at the time the control handle was clicked.</param>
      <param name="newBounds">The raw Bounds for this instance's volume based on the updated handle position.</param>
      <returns>
        <para>The bounds that should be applied to this instance, with any necessary modifications applied.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView">
      <summary>
        <para>The TreeView is an IMGUI control that lets you create tree views, list views and multi-column tables for Editor tools.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.baseIndent">
      <summary>
        <para>Indent used for all rows before the tree foldout arrows and content.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.cellMargin">
      <summary>
        <para>When using a MultiColumnHeader this value adjusts the cell rects provided for all columns except the tree foldout column.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.columnIndexForTreeFoldouts">
      <summary>
        <para>When using a MultiColumnHeader this value should be set to the column index in which the foldout arrows should appear.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.customFoldoutYOffset">
      <summary>
        <para>Custom vertical offset of the foldout arrow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.depthIndentWidth">
      <summary>
        <para>Value that returns how far the foldouts are indented for each increasing depth value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.extraSpaceBeforeIconAndLabel">
      <summary>
        <para>Value to control the spacing before the default icon and label. Can be used e.g for placing a toggle button to the left of the content.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.foldoutOverride">
      <summary>
        <para>Register a callback to this property to override the Foldout button in the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.foldoutWidth">
      <summary>
        <para>Width of the built-in foldout arrow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.getNewSelectionOverride">
      <summary>
        <para>Register a callback to this field to override how the TreeView handles selection changes in response to keys and mouse clicks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.hasSearch">
      <summary>
        <para>The current search state of the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.isDragging">
      <summary>
        <para>True if the user is currently dragging one or more items in the TreeView, and false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.isInitialized">
      <summary>
        <para>The TreeView is initialized by calling Reload(). Therefore returns false until Reload() is called the first time.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.multiColumnHeader">
      <summary>
        <para>Get the MultiColumnHeader of the TreeView. Can be null if the TreeView was created without a MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.rootItem">
      <summary>
        <para>The hidden root item of the TreeView (it is never rendered).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.rowHeight">
      <summary>
        <para>The fixed height used for each row in the TreeView if GetCustomRowHeight have not been overridden.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.searchString">
      <summary>
        <para>Current search string of the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showAlternatingRowBackgrounds">
      <summary>
        <para>Enable this to show alternating row background colors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showBorder">
      <summary>
        <para>Enable this to show a border around the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showingHorizontalScrollBar">
      <summary>
        <para>Returns true if the horizontal scroll bar is showing, otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showingVerticalScrollBar">
      <summary>
        <para>Returns true if the vertical scroll bar is showing, otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.state">
      <summary>
        <para>The state of the TreeView (expanded state, selection, scroll etc.)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.totalHeight">
      <summary>
        <para>Returns the sum of the TreeView row heights, the MultiColumnHeader height (if used) and the border (if used).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.treeViewControlID">
      <summary>
        <para>The controlID used by the TreeView to obtain keyboard control focus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.treeViewRect">
      <summary>
        <para>The Rect the TreeView is being rendered to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.useScrollView">
      <summary>
        <para>When drawing the TreeView contents, will it be enclosed within a ScrollView?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.AddExpandedRows(UnityEditor.IMGUI.Controls.TreeViewItem,System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Adds the expanded rows of the full tree to the input list. Only use this method if a full tree was built in BuildRoot.</para>
      </summary>
      <param name="root">Root of the TreeView.</param>
      <param name="rows">Rows that will be refilled using the expanded state of TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.AfterRowsGUI">
      <summary>
        <para>This is called after all rows have their RowGUI called.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeforeRowsGUI">
      <summary>
        <para>This is called before any rows have their RowGUI called.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeginRename(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Shows the rename overlay for a TreeViewItem.</para>
      </summary>
      <param name="item">Item to rename.</param>
      <param name="delay">Delay in seconds until the rename overlay shows.</param>
      <returns>
        <para>Returns true if renaming was started. Returns false if renaming was already active.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeginRename(UnityEditor.IMGUI.Controls.TreeViewItem,System.Single)">
      <summary>
        <para>Shows the rename overlay for a TreeViewItem.</para>
      </summary>
      <param name="item">Item to rename.</param>
      <param name="delay">Delay in seconds until the rename overlay shows.</param>
      <returns>
        <para>Returns true if renaming was started. Returns false if renaming was already active.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BuildRoot">
      <summary>
        <para>Abstract method that is required to be implemented. By default this method should create the full tree of TreeViewItems and return the root.</para>
      </summary>
      <returns>
        <para>The root of the tree. This item can later be accessed by 'rootItem'.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BuildRows(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to take control of how the rows are generated.</para>
      </summary>
      <param name="root">Root item that was created in the BuildRoot method.</param>
      <returns>
        <para>The rows list shown in the TreeView. Can later be accessed using GetRows().</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanBeParent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control which items are allowed to be parents.</para>
      </summary>
      <param name="item">Can this item be a parent?</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanChangeExpandedState(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control whether an item can be expanded or collapsed by key or mouse.</para>
      </summary>
      <param name="item">Can this item be expanded/collapsed.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanMultiSelect(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control whether the item can be part of a multiselection.</para>
      </summary>
      <param name="item">Can this item be part of a multiselection.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanRename(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control whether the item can be renamed using a keyboard shortcut or when clicking an already selected item.</para>
      </summary>
      <param name="item">Can this item be renamed?</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanStartDrag(UnityEditor.IMGUI.Controls.TreeView/CanStartDragArgs)">
      <summary>
        <para>This function is called whenever a TreeViewItem is clicked and dragged. It returns false by default.</para>
      </summary>
      <param name="args"></param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs">
      <summary>
        <para>Method arguments for the CanStartDrag virtual method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs.draggedItem">
      <summary>
        <para>Item about to be dragged.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs.draggedItemIDs">
      <summary>
        <para>The multi-selection about to be dragged.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CenterRectUsingSingleLineHeight(UnityEngine.Rect&amp;)">
      <summary>
        <para>Modifies the input rect so it is centered and have a height equal to EditorGUIUtility.singleLineHeight.</para>
      </summary>
      <param name="rect">Rect to be modified and centered.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CollapseAll">
      <summary>
        <para>Collapse all expanded items in the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CommandEventHandling">
      <summary>
        <para>This function is called automatically and handles the ExecuteCommand events for “SelectAll” and “FrameSelection”. Override this function to extend or avoid Command events.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ContextClicked">
      <summary>
        <para>Override this method to handle context clicks outside any items (but still in the TreeView rect).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ContextClickedItem(System.Int32)">
      <summary>
        <para>Override this method to handle a context click on an item with ID TreeViewItem.id.</para>
      </summary>
      <param name="id">TreeViewItem id.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CreateChildListForCollapsedParent">
      <summary>
        <para>Creates a dummy TreeViewItem list. Useful when overriding BuildRows to prevent building a full tree of items.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.#ctor(UnityEditor.IMGUI.Controls.TreeViewState)">
      <summary>
        <para>The TreeView is always constructed with a state object and optionally a multi-column header object if a header is needed.</para>
      </summary>
      <param name="state">TreeView state (expanded items, selection etc.)</param>
      <param name="multiColumnHeader">Multi-column header for the TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.#ctor(UnityEditor.IMGUI.Controls.TreeViewState,UnityEditor.IMGUI.Controls.MultiColumnHeader)">
      <summary>
        <para>The TreeView is always constructed with a state object and optionally a multi-column header object if a header is needed.</para>
      </summary>
      <param name="state">TreeView state (expanded items, selection etc.)</param>
      <param name="multiColumnHeader">Multi-column header for the TreeView.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI">
      <summary>
        <para>Default GUI methods and properties for the TreeView class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.BoldLabel(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a bold label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.BoldLabelRightAligned(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a bold right aligned label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.FoldoutLabel(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a foldout label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.Label(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.LabelRightAligned(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a right aligned label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles">
      <summary>
        <para>Default styles used by the TreeView class.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.backgroundEven">
      <summary>
        <para>Background style used for alternating row background colors when enabling TreeView.showAlternatingRowBackgrounds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.backgroundOdd">
      <summary>
        <para>Background style used for alternating row background colors when enabling TreeView.showAlternatingRowBackgrounds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.boldLabel">
      <summary>
        <para>Bold label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.boldLabelRightAligned">
      <summary>
        <para>Right aligned bold label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.foldoutLabel">
      <summary>
        <para>The label that is used for foldout label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.label">
      <summary>
        <para>Left aligned label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.labelRightAligned">
      <summary>
        <para>Right aligend label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DoesItemMatchSearch(UnityEditor.IMGUI.Controls.TreeViewItem,System.String)">
      <summary>
        <para>Override this function to extend or change the search behavior.</para>
      </summary>
      <param name="item">Item used for matching against the search string.</param>
      <param name="search">The search string of the TreeView.</param>
      <returns>
        <para>True if item matches search string, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DoFoldoutCallback">
      <summary>
        <para>Callback signature used to override the TreeView foldout. See foldoutOverride.</para>
      </summary>
      <param name="position">Rect to draw the foldout.</param>
      <param name="expandedState">Current foldout state.</param>
      <param name="style">Toggle button style.</param>
      <returns>
        <para>Returns true if the foldout is still expanded. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DoubleClickedItem(System.Int32)">
      <summary>
        <para>Override this method to handle double click events on an item.</para>
      </summary>
      <param name="id">ID of TreeViewItem that was double clicked.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs">
      <summary>
        <para>Method arguments for the HandleDragAndDrop virtual method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.dragAndDropPosition">
      <summary>
        <para>When dragging items the current drag can have the following 3 positions relative to the items: Upon an item, Between two items or Outside items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.insertAtIndex">
      <summary>
        <para>This index refers to the index in the children list of the parentItem where the current drag is positioned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.parentItem">
      <summary>
        <para>The parent item is set if the drag is either upon this item or between two of its children.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.performDrop">
      <summary>
        <para>This value is false as long as the mouse button is down, when the mouse button is released it is true.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition">
      <summary>
        <para>Enum describing the possible positions a drag can have relative to the items: upon a item, between two items or outside items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.BetweenItems">
      <summary>
        <para>This value is used when dragging between two items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.OutsideItems">
      <summary>
        <para>This value is used when dragging outside all items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.UponItem">
      <summary>
        <para>This value is used when the drag is upon a item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.EndRename">
      <summary>
        <para>Ends renaming if the rename overlay is shown. If called while the rename overlay is not being shown, this method does nothing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ExpandAll">
      <summary>
        <para>Expand all collapsed items in the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ExpandedStateChanged">
      <summary>
        <para>Override to get notified when items are expanded or collapsed. This is a general notification that the expanded state has changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindItem(System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Finds a TreeViewItem by an ID.</para>
      </summary>
      <param name="id">Find the TreeViewItem with this ID.</param>
      <param name="searchFromThisItem">Sets the search to start from an item. Use 'rootItem' to search the entire tree.</param>
      <returns>
        <para>This search method returns the TreeViewItem found and returns null if not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindRowOfItem(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Returns the row of the given TreeViewItem.</para>
      </summary>
      <param name="item">The item to find the row of.</param>
      <returns>
        <para>The row of the TreeViewItem.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindRows(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Useful for converting from TreeViewItem IDs to TreeViewItems using the current rows.</para>
      </summary>
      <param name="ids">TreeViewItem IDs.</param>
      <returns>
        <para>TreeViewItems.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FrameItem(System.Int32)">
      <summary>
        <para>This will reveal the item with ID id (by expanding the ancestors of that item) and will make sure it is visible in the ScrollView.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetAncestors(System.Int32)">
      <summary>
        <para>This method is e.g. used for revealing items that are currently under a collapsed item.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <returns>
        <para>List of all the ancestors of a given item with ID id.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetCellRectForTreeFoldouts(UnityEngine.Rect)">
      <summary>
        <para>Utility for multi column setups. This method will clip the input rowRect against the column rect defined by columnIndexForTreeFoldouts to get the cell rect where the the foldout arrows appear.</para>
      </summary>
      <param name="rowRect">Rect for a row.</param>
      <returns>
        <para>Cell rect in a multi column setup.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetContentIndent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Returns the horizontal content offset for an item. This is where the content should begin (after the foldout arrow).</para>
      </summary>
      <param name="item">Item used to determine the indent.</param>
      <returns>
        <para>Indent.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetCustomRowHeight(System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override to control individual row heights.</para>
      </summary>
      <param name="row">Row index.</param>
      <param name="item">Item for given row.</param>
      <returns>
        <para>Height of row.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetDescendantsThatHaveChildren(System.Int32)">
      <summary>
        <para>Returns all descendants for the item with ID id that have children.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <returns>
        <para>Descendants that have children.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetExpanded">
      <summary>
        <para>Returns a list of TreeViewItem IDs that are currently expanded in the TreeView.</para>
      </summary>
      <returns>
        <para>TreeViewItem IDs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetFirstAndLastVisibleRows(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Returns the first and the last indices of the rows that are visible in the scroll view of the TreeView.</para>
      </summary>
      <param name="firstRowVisible">First row visible.</param>
      <param name="lastRowVisible">Last row visible.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetFoldoutIndent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Returns the horizontal foldout offset for an item. This is where the foldout arrow is rendered.</para>
      </summary>
      <param name="item">Item used to determine the indent.</param>
      <returns>
        <para>Indent for the foldout arrow.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.GetNewSelectionFunction">
      <summary>
        <para>A callback which determines how TreeView handles selection changes in response to keys and mouse clicks.</para>
      </summary>
      <param name="clickedItem">The item clicked, or selected via keyboard.</param>
      <param name="keepMultiSelection">Should existing selection be kept? This is used to support dragging or right-clicking one item in a multi-selection.</param>
      <param name="useShiftAsActionKey">Should the action key be treated like the shift key? If so, the action key also indicates a range selection.</param>
      <param name="useActionKeyAsShift"></param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRenameRect(UnityEngine.Rect,System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method if custom GUI handling are used in RowGUI. This method for controls where the rename overlay appears.</para>
      </summary>
      <param name="rowRect">Row rect for the item currently being renamed.</param>
      <param name="row">Row index for the item currently being renamed.</param>
      <param name="item">TreeViewItem that are currently being renamed.</param>
      <returns>
        <para>The rect where the rename overlay should appear.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRowRect(System.Int32)">
      <summary>
        <para>Get the rect for a row.</para>
      </summary>
      <param name="row">Row index.</param>
      <returns>
        <para>Row rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRows">
      <summary>
        <para>This is the list of TreeViewItems that have been built in BuildRows.</para>
      </summary>
      <returns>
        <para>Rows.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetSelection">
      <summary>
        <para>Returns the list of TreeViewItem IDs that are currently selected.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HandleDragAndDrop(UnityEditor.IMGUI.Controls.TreeView/DragAndDropArgs)">
      <summary>
        <para>Override this function to control the drag and drop behavior of the TreeView.</para>
      </summary>
      <param name="args">Drag and drop arguments.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HasFocus">
      <summary>
        <para>Returns true if the TreeView and its EditorWindow have keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HasSelection">
      <summary>
        <para>Returns true if the TreeView has a selection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsChildListForACollapsedParent(System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Utility method for checking if the childList is identical to the one returned by the CreateChildListForCollapsedParent method.</para>
      </summary>
      <param name="childList">Children list of a TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsExpanded(System.Int32)">
      <summary>
        <para>Returns true if the TreeViewItem with ID id is currently expanded.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsSelected(System.Int32)">
      <summary>
        <para>Returns true if the TreeViewItem with ID id is currently selected.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.KeyEvent">
      <summary>
        <para>Override this method to handle events when the TreeView has keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>This is the main GUI method of the TreeView, where the TreeViewItems are processed and drawn.</para>
      </summary>
      <param name="rect">Rect where the TreeView is rendered.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RefreshCustomRowHeights">
      <summary>
        <para>Refreshes the cache of custom row rects based on the heights returned by GetCustomRowHeight.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.Reload">
      <summary>
        <para>Call this to force the TreeView to reload its data. This in turn causes BuildRoot and BuildRows to be called.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RenameEnded(UnityEditor.IMGUI.Controls.TreeView/RenameEndedArgs)">
      <summary>
        <para>Called when rename ends either by the user completing the renaming process, when the rename overlay loses focus or is closed using  EndRename.</para>
      </summary>
      <param name="args"></param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs">
      <summary>
        <para>Method arguments for the virtual method RenameEnded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.acceptedRename">
      <summary>
        <para>Is true if the rename is accepted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.itemID">
      <summary>
        <para>Item with ID that are being renamed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.newName">
      <summary>
        <para>Name entered in the rename overlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.originalName">
      <summary>
        <para>The original name when starting the rename.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.Repaint">
      <summary>
        <para>Request a repaint of the window that the TreeView is rendered in.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUI(UnityEditor.IMGUI.Controls.TreeView/RowGUIArgs)">
      <summary>
        <para>Override this method to add custom GUI content for the rows in the TreeView.</para>
      </summary>
      <param name="args">Row data.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs">
      <summary>
        <para>Method arguments for the virtual method RowGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.focused">
      <summary>
        <para>This value is true only when the TreeView has keyboard focus and the TreeView's window has focus.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.isRenaming">
      <summary>
        <para>This value is true when the ::item is currently being renamed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.item">
      <summary>
        <para>Item for the current row being handled in TreeView.RowGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.label">
      <summary>
        <para>Label used for text rendering of the item displayName. Note this is an empty string when isRenaming == true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.row">
      <summary>
        <para>Row index into the list of current rows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.rowRect">
      <summary>
        <para>Row rect for the current row being handled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.selected">
      <summary>
        <para>This value is true when the current row's item is part of the current selection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetCellRect(System.Int32)">
      <summary>
        <para>If using a MultiColumnHeader for the TreeView this method can be used to get the cell rects of a row using the visible columns of the MultiColumnHeader.</para>
      </summary>
      <param name="visibleColumnIndex">Index into the list of visible columns of the multi column header.</param>
      <returns>
        <para>Cell rect defined by the intersection between the row rect and the rect of the visible column.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetColumn(System.Int32)">
      <summary>
        <para>If using a MultiColumnHeader for the TreeView this method can be used to convert an index from the visible columns list to a index into the actual columns in the MultiColumnHeaderState.</para>
      </summary>
      <param name="visibleColumnIndex">This index is the index into the current visible columns.</param>
      <returns>
        <para>Column index into the columns array in MultiColumnHeaderState.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetNumVisibleColumns">
      <summary>
        <para>If using a MultiColumnHeader for the TreeView use this method to get the number of visible columns currently being shown in the MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SearchChanged(System.String)">
      <summary>
        <para>Override the method to get notified of search string changes.</para>
      </summary>
      <param name="newSearch"></param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectAllRows">
      <summary>
        <para>Selects all rows in the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectionChanged(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Override the method to get notified of selection changes.</para>
      </summary>
      <param name="selectedIds">TreeViewItem IDs.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectionClick(UnityEditor.IMGUI.Controls.TreeViewItem,System.Boolean)">
      <summary>
        <para>Use this method in RowGUI to peform the logic of a mouse click.</para>
      </summary>
      <param name="item">TreeViewItem clicked.</param>
      <param name="keepMultiSelection">If true then keeps the multiselection when clicking on a item already part of the selection. If false then clears the selection before selecting the item clicked. For left button clicks this is usually false. For context clicks it is usually true so a context opereration can operate on the multiselection.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpanded(System.Int32,System.Boolean)">
      <summary>
        <para>Set a single TreeViewItem to be expanded or collapsed.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <param name="expanded">True expands item. False collapses item.</param>
      <returns>
        <para>True if item changed expanded state, false if item already had the expanded state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpanded(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Set the current expanded TreeViewItems of the TreeView. This will overwrite the previous expanded state.</para>
      </summary>
      <param name="ids">List of item IDs that should be expanded.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpandedRecursive(System.Int32,System.Boolean)">
      <summary>
        <para>Expand or collapse all items under item with id.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <param name="expanded">Expanded state: true expands, false collapses.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetFocus">
      <summary>
        <para>Calling this function changes the keyboard focus to the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetFocusAndEnsureSelectedItem">
      <summary>
        <para>Calling this function changes the keyboard focus to the TreeView and ensures an item is selected. Use this function to enable key navigation of the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetSelection(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Set the selected items of the TreeView.</para>
      </summary>
      <param name="selectedIDs">TreeViewItem IDs.</param>
      <param name="options">Options for extra logic performed after the selection. See TreeViewSelectionOptions.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetSelection(System.Collections.Generic.IList`1&lt;System.Int32&gt;,UnityEditor.IMGUI.Controls.TreeViewSelectionOptions)">
      <summary>
        <para>Set the selected items of the TreeView.</para>
      </summary>
      <param name="selectedIDs">TreeViewItem IDs.</param>
      <param name="options">Options for extra logic performed after the selection. See TreeViewSelectionOptions.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupDepthsFromParentsAndChildren(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Utility method using the depth of the input TreeViewItem to set the correct depths for all its descendant TreeViewItems.</para>
      </summary>
      <param name="root">TreeViewItem from which the descendentans should have their depth updated.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDrop(UnityEditor.IMGUI.Controls.TreeView/SetupDragAndDropArgs)">
      <summary>
        <para>This function is called when CanStartDrag returns true.</para>
      </summary>
      <param name="args"></param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDropArgs">
      <summary>
        <para>Method arguments to the virtual method SetupDragAndDrop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDropArgs.draggedItemIDs">
      <summary>
        <para>TreeViewItem IDs being dragged.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupParentsAndChildrenFromDepths(UnityEditor.IMGUI.Controls.TreeViewItem,System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Utility method for initializing all the parent and children properties of the rows using the order and the depths values that have been set.</para>
      </summary>
      <param name="root">The hidden root item.</param>
      <param name="rows">TreeViewItems where only the depth property have been set.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SingleClickedItem(System.Int32)">
      <summary>
        <para>Override this method to handle single click events on an item.</para>
      </summary>
      <param name="id">ID of TreeViewItem that was single clicked.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SortItemIDsInRowOrder(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Returns a list sorted in the order in which they are shown in the TreeView.</para>
      </summary>
      <param name="ids">TreeViewItem IDs.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewItem">
      <summary>
        <para>The TreeViewItem is used to build the tree representation of a tree data structure.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.children">
      <summary>
        <para>The list of child items of this TreeViewItem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.depth">
      <summary>
        <para>The depth refers to how many ancestors this item has, and corresponds to the number of horizontal ‘indents’ this item has.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.displayName">
      <summary>
        <para>Name shown for this item when rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.hasChildren">
      <summary>
        <para>Returns true if children has any items.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.icon">
      <summary>
        <para>If set, this icon will be rendered to the left of the displayName. The icon is rendered at 16x16 points by default.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.id">
      <summary>
        <para>Unique ID for an item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.parent">
      <summary>
        <para>The parent of this TreeViewItem. If it is null then it is considered the root of the TreeViewItem tree.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.AddChild(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Helper method that adds the child TreeViewItem to the children list and sets the parent property on the child.</para>
      </summary>
      <param name="child">TreeViewItem to be added to the children list.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32)">
      <summary>
        <para>TreeViewItem constructor.</para>
      </summary>
      <param name="id">Unique ID to identify this TreeViewItem with among all TreeViewItems of the TreeView. See Also id.</param>
      <param name="depth">Depth of this TreeViewItem. See Also depth.</param>
      <param name="displayName">Rendered name of this TreeViewItem. See Also displayName.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>TreeViewItem constructor.</para>
      </summary>
      <param name="id">Unique ID to identify this TreeViewItem with among all TreeViewItems of the TreeView. See Also id.</param>
      <param name="depth">Depth of this TreeViewItem. See Also depth.</param>
      <param name="displayName">Rendered name of this TreeViewItem. See Also displayName.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32,System.Int32,System.String)">
      <summary>
        <para>TreeViewItem constructor.</para>
      </summary>
      <param name="id">Unique ID to identify this TreeViewItem with among all TreeViewItems of the TreeView. See Also id.</param>
      <param name="depth">Depth of this TreeViewItem. See Also depth.</param>
      <param name="displayName">Rendered name of this TreeViewItem. See Also displayName.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions">
      <summary>
        <para>Enum used by the TreeView.SetSelection method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.FireSelectionChanged">
      <summary>
        <para>If this flag is passed to TreeView.SetSelection then the TreeView will call the its TreeView.SelectionChanged method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.None">
      <summary>
        <para>If this flag is passed to TreeView.SetSelection no extra logic is be performed after setting selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.RevealAndFrame">
      <summary>
        <para>If this flag is passed to TreeView.SetSelection then the TreeView will make sure the last item in the input selection list is visible on screen.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewState">
      <summary>
        <para>The TreeViewState contains serializable state information for the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.expandedIDs">
      <summary>
        <para>This is the list of currently expanded TreeViewItem IDs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.lastClickedID">
      <summary>
        <para>The ID for the TreeViewItem that currently is being used for multi selection and key navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewState.scrollPos">
      <summary>
        <para>The current scroll values of the TreeView's scroll view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.searchString">
      <summary>
        <para>Search string state that can be used in the TreeView to filter the tree data when creating the TreeViewItems.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.selectedIDs">
      <summary>
        <para>Selected TreeViewItem IDs. Use of the SetSelection and IsSelected API will access this state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ImportAssetOptions">
      <summary>
        <para>Asset importing options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.Default">
      <summary>
        <para>Default import options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.DontDownloadFromCacheServer">
      <summary>
        <para>Force a full reimport but don't download the assets from the cache server.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceSynchronousImport">
      <summary>
        <para>Import all assets synchronously.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceUncompressedImport">
      <summary>
        <para>Forces asset import as uncompressed for edition facilities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceUpdate">
      <summary>
        <para>User initiated asset import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ImportRecursive">
      <summary>
        <para>When a folder is imported, import all its contents as well.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnEnterPlayModeAttribute">
      <summary>
        <para>Allow an editor class method to be initialized when Unity enters Play Mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnLoadAttribute">
      <summary>
        <para>Allows you to initialize an Editor class when Unity loads, and when your scripts are recompiled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnLoadMethodAttribute">
      <summary>
        <para>Allow an editor class method to be initialized when Unity loads without action from the user.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InteractionMode">
      <summary>
        <para>The mode of interaction, user or automated, that an API method is called with.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.InteractionMode.AutomatedAction">
      <summary>
        <para>Use this setting to prevent a method from showing any dialog boxes to the user, and to prevent it recording to the undo history.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.InteractionMode.UserAction">
      <summary>
        <para>Use this setting to allow a method to show dialog boxes to the user, and to allow it to record to the undo history.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSAppInBackgroundBehavior">
      <summary>
        <para>Application behavior when entering background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Custom">
      <summary>
        <para>Custom background behavior, see iOSBackgroundMode for specific background modes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Exit">
      <summary>
        <para>Application should exit when entering background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Suspend">
      <summary>
        <para>Application should suspend execution when entering background.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSBackgroundMode">
      <summary>
        <para>Background modes supported by the application corresponding to project settings in Xcode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Audio">
      <summary>
        <para>Audio, AirPlay and Picture in Picture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.BluetoothCentral">
      <summary>
        <para>Uses Bluetooth LE accessories.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.BluetoothPeripheral">
      <summary>
        <para>Acts as a Bluetooth LE accessory.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.ExternalAccessory">
      <summary>
        <para>External accessory communication.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Fetch">
      <summary>
        <para>Background fetch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Location">
      <summary>
        <para>Location updates.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.NewsstandContent">
      <summary>
        <para>Newsstand downloads.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.None">
      <summary>
        <para>No background modes supported.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.RemoteNotification">
      <summary>
        <para>Remote notifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.VOIP">
      <summary>
        <para>Voice over IP.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSBuildType">
      <summary>
        <para>Build configurations for the generated Xcode project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBuildType.Debug">
      <summary>
        <para>Build configuration set to Debug for the generated Xcode project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBuildType.Release">
      <summary>
        <para>Build configuration set to Release for the generated Xcode project with optimization enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSDeviceRequirement">
      <summary>
        <para>A device requirement description used for configuration of App Slicing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.iOSDeviceRequirement.values">
      <summary>
        <para>The values of the device requirement description.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.iOSDeviceRequirement.#ctor">
      <summary>
        <para>Constructs new device requirement description.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSLaunchScreenImageType">
      <summary>
        <para>iOS launch screen settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPadImage">
      <summary>
        <para>Launch screen image on the iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPhoneLandscapeImage">
      <summary>
        <para>Landscape oriented launch screen image on the iPhone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPhonePortraitImage">
      <summary>
        <para>Portrait oriented launch screen image on the iPhone.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSLaunchScreenType">
      <summary>
        <para>iOS launch screen settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.CustomStoryboard">
      <summary>
        <para>Use a specified custom Storyboard (.storyboard) file in Player Settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.CustomXib">
      <summary>
        <para>Use a specified custom Interface Builder (.xib) file in Player Settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.Default">
      <summary>
        <para>Use the default launch screen (dark blue background).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.ImageAndBackgroundConstant">
      <summary>
        <para>Use a custom launch screen image specified in the iOS Player Settings or with PlayerSettings.iOS.SetLaunchScreenImage and use its original dimensions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.ImageAndBackgroundRelative">
      <summary>
        <para>Use a custom launch screen image specified in the iOS Player Settings or with PlayerSettings.iOS.SetLaunchScreenImage which will be scaled across the entire screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.None">
      <summary>
        <para>Generate the Xcode project without any custom launch screens.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSSdkVersion">
      <summary>
        <para>Supported iOS SDK versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSSdkVersion.DeviceSDK">
      <summary>
        <para>Device SDK.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSSdkVersion.SimulatorSDK">
      <summary>
        <para>Simulator SDK.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSShowActivityIndicatorOnLoading">
      <summary>
        <para>Activity Indicator on loading.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.DontShow">
      <summary>
        <para>Don't Show.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.Gray">
      <summary>
        <para>Gray.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.White">
      <summary>
        <para>White.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.WhiteLarge">
      <summary>
        <para>White Large.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSStatusBarStyle">
      <summary>
        <para>iOS status bar style.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSStatusBarStyle.Default">
      <summary>
        <para>Default.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSStatusBarStyle.LightContent">
      <summary>
        <para>A light status bar, intended for use on dark backgrounds.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSTargetDevice">
      <summary>
        <para>Target iOS device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPadOnly">
      <summary>
        <para>iPad Only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPhoneAndiPad">
      <summary>
        <para>Universal : iPhone/iPod + iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPhoneOnly">
      <summary>
        <para>iPhone/iPod Only.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSTargetOSVersion">
      <summary>
        <para>Supported iOS deployment versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_0">
      <summary>
        <para>iOS 4.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_1">
      <summary>
        <para>iOS 4.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_2">
      <summary>
        <para>iOS 4.2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_3">
      <summary>
        <para>iOS 4.3.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_0">
      <summary>
        <para>iOS 5.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_1">
      <summary>
        <para>iOS 5.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_6_0">
      <summary>
        <para>iOS 6.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_0">
      <summary>
        <para>iOS 7.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_1">
      <summary>
        <para>iOS 7.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_0">
      <summary>
        <para>iOS 8.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_1">
      <summary>
        <para>iOS 8.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.Unknown">
      <summary>
        <para>Unknown iOS version, managed by user.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ITerrainLayerCustomUI">
      <summary>
        <para>Provides an interface to display a custom TerrainLayer UI in the Terrain Layers inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ITerrainLayerCustomUI.OnTerrainLayerGUI(UnityEngine.TerrainLayer,UnityEngine.Terrain)">
      <summary>
        <para>Draws the custom GUI for the terrain layer.</para>
      </summary>
      <param name="terrainLayer">The TerrainLayer object.</param>
      <param name="terrain">The Terrain object on which the TerrainLayer object, specified by the terrainLayer parameter, is selected.</param>
      <returns>
        <para>Return false to have Unity draw the default TerrainLayer inspector. Otherwise draw the custom GUI and return true.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.L10n">
      <summary>
        <para>Class for text localization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.L10n.Tr(System.String)">
      <summary>
        <para>This function referes a po file like ja.po as an asset. Asmdef and [assembly: UnityEditor.Localization] is needed.</para>
      </summary>
      <param name="str">Original text, basically English.</param>
      <returns>
        <para>Localized text.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.LightEditor">
      <summary>
        <para>The class used to render the Light Editor when a Light is selected in the Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.settings">
      <summary>
        <para>The settings helper that can be used for rendering a custom LightEditor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnDestroy">
      <summary>
        <para>See ScriptableObject.OnDestroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnEnable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnInspectorGUI">
      <summary>
        <para>See Editor.OnInspectorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnSceneGUI">
      <summary>
        <para>See Editor.OnSceneGUI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightEditor.Settings">
      <summary>
        <para>Contains all drawable elements of the LightEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.areaSizeX">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.areaSizeY">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bakedShadowAngleProp">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bakedShadowRadiusProp">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bounceIntensity">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.color">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.colorTemperature">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookie">
      <summary>
        <para>The light cookie texture used by the light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookieProp">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookieSize">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cullingMask">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.flare">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.halo">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.innerSpotAngle">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.intensity">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isAreaLightType">
      <summary>
        <para>Is the current light an area light or not. Area lights include Rectangle and Disc lights.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isBakedOrMixed">
      <summary>
        <para>Is the current light baked or mixed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isCompletelyBaked">
      <summary>
        <para>Is the light completely baked.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isMixed">
      <summary>
        <para>Is the current light mixed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isRealtime">
      <summary>
        <para>Is the light realtime?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.light">
      <summary>
        <para>The light being inspected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightmapping">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightShape">
      <summary>
        <para>This property describes the shape of the spot light. Only Scriptable Render Pipelines use this property; the built-in renderer does not support it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightType">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.range">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.renderingLayerMask">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.renderMode">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsBias">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsNearPlane">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsNormalBias">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsResolution">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsStrength">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsType">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.spotAngle">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.useColorTemperature">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.ApplyModifiedProperties">
      <summary>
        <para>See SerializedObject.ApplyModifiedProperties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawArea">
      <summary>
        <para>Draws the default [[LightEditor] area widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBakedShadowAngle">
      <summary>
        <para>Draws the default [[LightEditor] baked shadow angle widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBakedShadowRadius">
      <summary>
        <para>Draws the default [[LightEditor] baked shadow radius widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBounceIntensity">
      <summary>
        <para>Draws the default [[LightEditor] bounce intensity widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawColor">
      <summary>
        <para>Draws the default [[LightEditor] color widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCookie">
      <summary>
        <para>Draws the default [[LightEditor] cookie widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCookieSize">
      <summary>
        <para>Draws the default [[LightEditor] cookie size widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCullingMask">
      <summary>
        <para>Draws the default [[LightEditor] culling mask widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawFlare">
      <summary>
        <para>Draws the default [[LightEditor] flare widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawHalo">
      <summary>
        <para>Draws the default [[LightEditor] halo widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawInnerAndOuterSpotAngle">
      <summary>
        <para>Draws the default [[LightEditor] inner and outer spot angle widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawIntensity">
      <summary>
        <para>Draws the default [[LightEditor] intensity widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawLightmapping">
      <summary>
        <para>Draws the default [[LightEditor] lightmapping widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawLightType">
      <summary>
        <para>Draws the default [[LightEditor] light type widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRange(System.Boolean)">
      <summary>
        <para>Draws the default [[LightEditor] range widget.</para>
      </summary>
      <param name="showAreaOptions"></param>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRenderingLayerMask">
      <summary>
        <para>Draws the default LightEditor rendering LayerMask widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRenderMode">
      <summary>
        <para>Draws the default [[LightEditor] render mode widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRuntimeShadow">
      <summary>
        <para>Draws the default [[LightEditor] runtime shadows widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawShadowsType">
      <summary>
        <para>Draws the default [[LightEditor] shadows type widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawSpotAngle">
      <summary>
        <para>Draws the default [[LightEditor] spot angle widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.OnDestroy">
      <summary>
        <para>Cleanup internal settings state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.OnEnable">
      <summary>
        <para>Populate the settings from the referenced SerializedObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.Update">
      <summary>
        <para>See SerializedObject.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingDataAsset">
      <summary>
        <para>The lighting data asset used by the active Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerExtensionAttribute">
      <summary>
        <para>An attribute to mark an extension class for the Lighting Explorer. Supports one extension per render pipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingExplorerExtensionAttribute.#ctor(System.Type)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="renderPipeline">The type that inherits from the RenderPipelineAsset used to filter the class.</param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTab">
      <summary>
        <para>Create custom tabs for the Lighting Explorer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingExplorerTab.#ctor(System.String,System.Func`1&lt;UnityEngine.Object[]&gt;,System.Func`1&lt;UnityEditor.LightingExplorerTableColumn[]&gt;)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="title">The title of the tab.</param>
      <param name="objects">The objects that the tab must contain.</param>
      <param name="columns">How the columns should look and behave.</param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn">
      <summary>
        <para>This is used when defining how a column should look and behave in the Lighting Explorer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.ComparePropertiesDelegate">
      <summary>
        <para>A delegate for comparison of properties for sorting.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.CopyPropertiesDelegate">
      <summary>
        <para>A delegate for copying of properties.</para>
      </summary>
      <param name="target"></param>
      <param name="source"></param>
    </member>
    <member name="M:UnityEditor.LightingExplorerTableColumn.#ctor(UnityEditor.LightingExplorerTableColumn/DataType,UnityEngine.GUIContent,System.String,System.Int32,UnityEditor.LightingExplorerTableColumn/OnGUIDelegate,UnityEditor.LightingExplorerTableColumn/ComparePropertiesDelegate,UnityEditor.LightingExplorerTableColumn/CopyPropertiesDelegate,System.Int32[])">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="type">Depending on what LightingExplorer.DataType we use, built-in compare and draw methods will be used. If you want to fully overload this, use LightingExplorer.DataType.Custom.</param>
      <param name="headerContent">Title for the column header.</param>
      <param name="propertyName">Name of the property on the object you wish to use. If you use LightingExplorer.DataType.Name, choose ‘null’.</param>
      <param name="width">Width of the column. The minimum width is this value divided by 2. The default value is 100.</param>
      <param name="onGUIDelegate">If you want to draw a property differently than the default, provide this delegate. If you use LightingExprlorer.DataType.Custom, you must override this.</param>
      <param name="compareDelegate">If you want to sort properties differently than the default way, provide this delegate. If you use LightingExplorer.DataType.Custom, you must override this.</param>
      <param name="copyDelegate">If you want to copy properties differently than the default way, provide this delegate. </param>
      <param name="dependencyIndices">If you depend on another Serialized property than the one in your column, use this field to specify which indices to include. The first column is index 0.</param>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Checkbox">
      <summary>
        <para>Draws a checkbox, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Color">
      <summary>
        <para>Draws a color box, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Custom">
      <summary>
        <para>No drawing or comparison for sorting. Please use the delegates in the constructor to override these.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Enum">
      <summary>
        <para>Draws an enum field, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Float">
      <summary>
        <para>Draws a float field, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Int">
      <summary>
        <para>Draws an int field, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Name">
      <summary>
        <para>Draws a name field, and handles comparison for sorting. Also implements a search field for filtering the rows.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.OnGUIDelegate">
      <summary>
        <para>A delegate for how to draw the property.</para>
      </summary>
      <param name="r">The current rect for where it will be drawn in the TableView.</param>
      <param name="prop">The property that is specified using ‘propertyName’ in the constructor.</param>
      <param name="dependencies">An array of properties specified by using ‘dependencyIndicies’ in the constructor.</param>
    </member>
    <member name="T:UnityEditor.LightingWindowEnvironmentSection">
      <summary>
        <para>Base class for the Inspector that overrides the Environment section of the Lighting window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnDisable">
      <summary>
        <para>OnDisable is called when this Inspector override is not used anymore.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnEnable">
      <summary>
        <para>OnEnable is called when this Inspector override is used.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnInspectorGUI">
      <summary>
        <para>A callback that is called when drawing the Environment section in the Lighting window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapBakeQuality">
      <summary>
        <para>Bake quality setting for LightmapEditorSettings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapBakeQuality.High">
      <summary>
        <para>High quality bake for final renderings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapBakeQuality.Low">
      <summary>
        <para>Low quality bake for preview renderings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings">
      <summary>
        <para>This class is now obsolete. Use LightingSettings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoExponentDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.aoExponentDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoExponentIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.aoExponentIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoMaxDistance">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.aoMaxDistance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.bakeResolution">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.bounces">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.bounces.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.denoiserTypeAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.denoiserTypeDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.denoiserTypeIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.directSampleCount">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.directSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.enableAmbientOcclusion">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.ao.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.environmentSampleCount">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.environmentSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.exportTrainingData">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.exportTrainingData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringAtrousPositionSigmaAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringAtrousPositionSigmaDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringAtrousPositionSigmaIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringGaussRadiusAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringGaussRadiusDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringGaussRadiusIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filterTypeAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filterTypeDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filterTypeIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.indirectSampleCount">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.indirectSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.lightmapper">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapper.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.lightmapsMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.directionalityMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasHeight">
      <summary>
        <para>This property is now obsolete. Use maxAtlasSize instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasSize">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapMaxSize.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasWidth">
      <summary>
        <para>This property is now obsolete. Use maxAtlasSize instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.mixedBakeMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.mixedBakeMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.padding">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapPadding.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.prioritizeView">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.prioritizeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.realtimeResolution">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.indirectResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.reflectionCubemapCompression">
      <summary>
        <para>Determines how Unity will compress baked reflection cubemap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.sampling">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.sampling.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.textureCompression">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.compressLightmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.trainingDataDestination">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.trainingDataDestination.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.DenoiserType">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.None">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.OpenImage">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.Optix">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.RadeonPro">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.FilterMode">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.Advanced">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.Auto">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.None">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.FilterType">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.ATrous">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.Gaussian">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.None">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.Lightmapper">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.Enlighten">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.ProgressiveCPU">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.ProgressiveGPU">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.Sampling">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Sampling.Auto">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Sampling.Fixed">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapParameters">
      <summary>
        <para>Configures how Unity bakes lighting and can be assigned to a LightingSettings instance or asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.antiAliasingSamples">
      <summary>
        <para>The maximum number of times to supersample a texel to reduce aliasing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.backFaceTolerance">
      <summary>
        <para>The percentage of rays shot from a ray origin that must hit front faces to be considered usable.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.bakedLightmapTag">
      <summary>
        <para>BakedLightmapTag is an integer that affects the assignment to baked lightmaps. Objects with different values for bakedLightmapTag are guaranteed to not be assigned to the same lightmap even if the other baking parameters are the same.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.blurRadius">
      <summary>
        <para>The radius (in texels) of the post-processing filter that blurs baked direct lighting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.clusterResolution">
      <summary>
        <para>Controls the resolution at which Enlighten stores and can transfer input light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.directLightQuality">
      <summary>
        <para>The number of rays used for lights with an area. Allows for accurate soft shadowing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.irradianceBudget">
      <summary>
        <para>The amount of data used for realtime GI texels. Specifies how detailed view of the Scene a texel has. Small values mean more averaged out lighting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.irradianceQuality">
      <summary>
        <para>The number of rays to cast for computing irradiance form factors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.isTransparent">
      <summary>
        <para>If enabled, the object appears transparent during GlobalIllumination lighting calculations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.limitLightmapCount">
      <summary>
        <para>If enabled, objects sharing the same lightmap parameters will be packed into LightmapParameters.maxLightmapCount lightmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.maxLightmapCount">
      <summary>
        <para>The maximum number of lightmaps that will be created for objects sharing the same lightmap parameters. This property is ignored if LightmapParameters.limitLightmapCount is false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.modellingTolerance">
      <summary>
        <para>Maximum size of gaps that can be ignored for GI (multiplier on pixel size).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.pushoff">
      <summary>
        <para>The distance to offset the ray origin from the geometry when performing ray tracing, in modelling units. Unity applies the offset to all baked lighting: direct lighting, indirect lighting, environment lighting and ambient occlusion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.resolution">
      <summary>
        <para>The texel resolution per meter used for realtime lightmaps. This value is multiplied by LightingSettings.indirectResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.stitchEdges">
      <summary>
        <para>Whether pairs of edges should be stitched together.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.systemTag">
      <summary>
        <para>System tag is an integer identifier. It lets you force an object into a different Enlighten system even though all the other parameters are the same.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.AOAntiAliasingSamples">
      <summary>
        <para>The maximum number of times to supersample a texel to reduce aliasing in AO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.AOQuality">
      <summary>
        <para>The number of rays to cast for computing ambient occlusion.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightmapParameters.AssignToLightingSettings(UnityEngine.LightingSettings)">
      <summary>
        <para>Assignes itself to a LightingSettings instance or asset.</para>
      </summary>
      <param name="lightingSettings"></param>
    </member>
    <member name="M:UnityEditor.LightmapParameters.GetLightmapParametersForLightingSettings(UnityEngine.LightingSettings)">
      <summary>
        <para>Returns the assigned LightmapParameters for the specified LightingSettings.</para>
      </summary>
      <param name="lightingSettings"></param>
    </member>
    <member name="M:UnityEditor.LightmapParameters.SetLightmapParametersForLightingSettings(UnityEditor.LightmapParameters,UnityEngine.LightingSettings)">
      <summary>
        <para>Sets the LightmapParameters for the specified LightingSettings.</para>
      </summary>
      <param name="parameters"></param>
      <param name="lightingSettings"></param>
    </member>
    <member name="T:UnityEditor.Lightmapping">
      <summary>
        <para>Allows to control the lightmapping job.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.bakeCompleted(System.Action)">
      <summary>
        <para>Event which is called when bake job is completed. Only called when LightingSettings.autoGenerate is set to false.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.Lightmapping.bakedGI">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.bakedGI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.bakeStarted(System.Action)">
      <summary>
        <para>Event which is called when a bake is started. Only called when LightingSettings.autoGenerate is set to false.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.Lightmapping.bounceBoost">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.albedoBoost.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.buildProgress">
      <summary>
        <para>Returns the current lightmapping build progress or 0 if Lightmapping.isRunning is false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.completed">
      <summary>
        <para>Delegate which is called when bake job is completed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.giWorkflowMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.indirectOutputScale">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.indirectScale.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.isRunning">
      <summary>
        <para>Returns true when the bake job is running, false otherwise (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingDataAsset">
      <summary>
        <para>The lighting data asset used by the active Scene.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataAssetCleared(System.Action)">
      <summary>
        <para>Event which is called when a LightingData asset is removed from the project.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataCleared(System.Action)">
      <summary>
        <para>Event which is called when baked Global Illumination data is cleared from the scene and from renderers.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataUpdated(System.Action)">
      <summary>
        <para>Event which is called when any lighting data is updated as part of the GI backing process.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingSettings">
      <summary>
        <para>The LightingSettings that will be used for the current Scene. Will throw an exception if it is null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingSettingsDefaults">
      <summary>
        <para>Default LightingSettings that Unity uses for Scenes where lightingSettings is not assigned. (Read only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.realtimeGI">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.realtimeGI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.started(UnityEditor.Lightmapping/OnStartedFunction)">
      <summary>
        <para>Delegate which is called when bake job is started.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.Lightmapping.Bake">
      <summary>
        <para>Starts a synchronous bake job.</para>
      </summary>
      <returns>
        <para>Returns true if the bake ran successfully. Will return false and print a warning message if it's not possible to start the bake.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeAsync">
      <summary>
        <para>Starts an asynchronous bake job.</para>
      </summary>
      <returns>
        <para>Returns true if the bake was successfully started. Will return false and print a warning message if it's not possible to start the bake.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeLightProbesOnly">
      <summary>
        <para>Starts a synchronous bake job, but only bakes light probes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeLightProbesOnlyAsync">
      <summary>
        <para>Starts an asynchronous bake job, but only bakes light probes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeMultipleScenes(System.String[])">
      <summary>
        <para>Bakes an array of Scenes.</para>
      </summary>
      <param name="paths">The path of the Scenes that should be baked.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeReflectionProbe(UnityEngine.ReflectionProbe,System.String)">
      <summary>
        <para>Starts a synchronous bake job for the probe.</para>
      </summary>
      <param name="probe">Target probe.</param>
      <param name="path">The location where cubemap will be saved.</param>
      <returns>
        <para>Returns true if baking was succesful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeSelected">
      <summary>
        <para>Starts a synchronous bake job for the selected objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeSelectedAsync">
      <summary>
        <para>Starts an asynchronous bake job for the selected objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.Cancel">
      <summary>
        <para>Cancels the currently running asynchronous bake job.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.Clear">
      <summary>
        <para>Deletes all runtime data for the currently loaded Scenes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ClearDiskCache">
      <summary>
        <para>Clears the cache used by lightmaps, reflection probes and default reflection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ClearLightingDataAsset">
      <summary>
        <para>For the currently loaded Scenes, this method deletes the Lighting Data Asset and any linked lightmaps and Reflection Probe assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ForceStop">
      <summary>
        <para>Force the Progressive Path Tracer to stop baking and use the computed results as they are.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.GetLightingSettingsForScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Gets the LightingSettings object of a SceneManagement.Scene object.</para>
      </summary>
      <param name="scene">The SceneManagement.Scene object.</param>
      <returns>
        <para>The LightingSettings object if Scene.isLoaded is true. Otherwise returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.GetTerrainGIChunks(UnityEngine.Terrain,System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Get how many chunks the terrain is divided into for GI baking.</para>
      </summary>
      <param name="terrain">The terrain.</param>
      <param name="numChunksX">Number of chunks in terrain width.</param>
      <param name="numChunksY">Number of chunks in terrain length.</param>
    </member>
    <member name="T:UnityEditor.Lightmapping.GIWorkflowMode">
      <summary>
        <para>Workflow mode for lightmap baking. Default is Iterative.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.Iterative">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.Legacy">
      <summary>
        <para>Deprecated 4.x lightmapping support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.OnDemand">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Lightmapping.OnCompletedFunction">
      <summary>
        <para>Delegate used by Lightmapping.completed callback.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Lightmapping.OnStartedFunction">
      <summary>
        <para>Delegate used by Lightmapping.started callback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.SetLightingSettingsForScene(UnityEngine.SceneManagement.Scene,UnityEngine.LightingSettings)">
      <summary>
        <para>Applies the settings specified in the LightingSettings object to the SceneManagement.Scene object.</para>
      </summary>
      <param name="scene">The SceneManagement.Scene object. If the Scene.isLoaded property is false, the method does not apply the settings.</param>
      <param name="lightingSettings">The LightingSettings object.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.SetLightingSettingsForScenes(UnityEngine.SceneManagement.Scene[],UnityEngine.LightingSettings)">
      <summary>
        <para>Applies the settings specified in the LightingSettings object to an array of SceneManagement.Scene objects.</para>
      </summary>
      <param name="scenes">The array of SceneManagement.Scene objects. If the Scene.isLoaded property is false on a Scene object, the method does not apply the settings to that object.</param>
      <param name="lightingSettings">The LightingSettings object.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.Tetrahedralize(UnityEngine.Vector3[],System.Int32[]&amp;,UnityEngine.Vector3[]&amp;)">
      <summary>
        <para>Calculates a Delaunay Tetrahedralization of the 'positions' point set - the same way the lightmapper.</para>
      </summary>
      <param name="positions"></param>
      <param name="outIndices"></param>
      <param name="outPositions"></param>
    </member>
    <member name="M:UnityEditor.Lightmapping.TryGetLightingSettings(UnityEngine.LightingSettings&amp;)">
      <summary>
        <para>Fetches the Lighting Settings for the current Scene. Will return false if it is null.</para>
      </summary>
      <param name="settings">See Lightmapping.lightingSettings.</param>
      <returns>
        <para>Returns true if there is an object, and false if it isn't.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Localization.Editor.LocalizationGroup">
      <summary>
        <para>While the instance alive, Localization System uses the dictionary for localization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Localization.Editor.LocalizationGroup.locGroupName">
      <summary>
        <para>Accessor of the current group name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(UnityEngine.Behaviour)">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(System.Type)">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(System.Object)">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.Dispose">
      <summary>
        <para>Since the LocalizationGroup is IDisposable, Dispose can be called explicitly.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LocalizationAttribute">
      <summary>
        <para>Attribute of the assembly for localization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LocalizationAttribute.#ctor(System.String)">
      <summary>
        <para>With an argument locGroupName, Localization system referes to the dictionary the locGroupName assembly.</para>
      </summary>
      <param name="locGroupName">Name of refering assemby. (optional).</param>
    </member>
    <member name="T:UnityEditor.LocalizationGroup">
      <summary>
        <para>This provides an auto dispose Localization system. This can be called recursively.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LocalizationGroup.locGroupName">
      <summary>
        <para>A current group name for the localization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour"></param>
      <param name="type"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(UnityEngine.Behaviour)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour"></param>
      <param name="type"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(System.Type)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour"></param>
      <param name="type"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(System.Object)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour"></param>
      <param name="type"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.Dispose">
      <summary>
        <para>Dispose current state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LODUtility">
      <summary>
        <para>LOD Utility Helpers.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LODUtility.CalculateLODGroupBoundingBox(UnityEngine.LODGroup)">
      <summary>
        <para>Recalculate the bounding region for the given LODGroup.</para>
      </summary>
      <param name="group"></param>
    </member>
    <member name="T:UnityEditor.MacFullscreenMode">
      <summary>
        <para>Mac fullscreen mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MacFullscreenMode.FullscreenWindow">
      <summary>
        <para>Fullscreen window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MacFullscreenMode.FullscreenWindowWithDockAndMenuBar">
      <summary>
        <para>Fullscreen window with Dock and Menu bar.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ManagedStrippingLevel">
      <summary>
        <para>Defines how aggressively Unity strips unused managed (C#) code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Disabled">
      <summary>
        <para>Do not strip any code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.High">
      <summary>
        <para>UnityLinker will strip as much as possible. This will further reduce code size beyond what Medium can achieve. However, this additional reduction may come with tradeoffs. Possible side effects may include, managed code debugging of some methods may no longer work.  You may need to maintain a custom link.xml file, and some reflection code paths may not behave the same.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Low">
      <summary>
        <para>Remove unreachable managed code to reduce build size and Mono/IL2CPP build times.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Medium">
      <summary>
        <para>Run UnityLinker in a less conservative mode than Low. This will further reduce code size beyond what Low can achieve. However, this additional reduction may come with tradeoffs. Possible side effects may include, having to maintain a custom link.xml file, and some reflection code paths may not behave the same.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialEditor">
      <summary>
        <para>The Unity Material Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialEditor.customShaderGUI">
      <summary>
        <para>Returns the custom ShaderGUI implemented by the shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialEditor.isVisible">
      <summary>
        <para>Is the current material expanded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialEditor.kMiniTextureFieldLabelIndentLevel">
      <summary>
        <para>Useful for indenting shader properties that need the same indent as mini texture field.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Material)">
      <summary>
        <para>Apply initial MaterialPropertyDrawer values.</para>
      </summary>
      <param name="material"></param>
      <param name="targets"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Object[])">
      <summary>
        <para>Apply initial MaterialPropertyDrawer values.</para>
      </summary>
      <param name="material"></param>
      <param name="targets"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.Awake">
      <summary>
        <para>Called when the Editor is woken up.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEngine.Rect,UnityEditor.MaterialProperty)">
      <summary>
        <para>Creates a Property wrapper, useful for making regular GUI controls work with MaterialProperty.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use for the control, including label if applicable.</param>
      <param name="prop">The MaterialProperty to use for the control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEditor.MaterialProperty)">
      <summary>
        <para>Creates a Property wrapper, useful for making regular GUI controls work with MaterialProperty.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use for the control, including label if applicable.</param>
      <param name="prop">The MaterialProperty to use for the control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a color shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="position"></param>
      <param name="prop"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a color shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="position"></param>
      <param name="prop"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Default handling of preview area for materials.</para>
      </summary>
      <param name="r"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultPreviewSettingsGUI">
      <summary>
        <para>Default toolbar for material preview area.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handles UI for one shader property ignoring any custom drawers.</para>
      </summary>
      <param name="prop"></param>
      <param name="label"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handles UI for one shader property ignoring any custom drawers.</para>
      </summary>
      <param name="prop"></param>
      <param name="label"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DoubleSidedGIField">
      <summary>
        <para>Display UI for editing a material's Double Sided Global Illumination setting.
Returns true if the UI is indeed displayed i.e. the material supports the Double Sided Global Illumination setting.
+See Also: Material.doubleSidedGI.</para>
      </summary>
      <returns>
        <para>True if the UI is displayed, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EmissionEnabledProperty">
      <summary>
        <para>This function will draw the UI for controlling whether emission is enabled or not on a material.</para>
      </summary>
      <returns>
        <para>Returns true if enabled, or false if disabled or mixed due to multi-editing.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EnableInstancingField">
      <summary>
        <para>Display UI for editing material's render queue setting.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EnableInstancingField(UnityEngine.Rect)">
      <summary>
        <para>Display UI for editing material's render queue setting within the specified rect.</para>
      </summary>
      <param name="r"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EndAnimatedCheck">
      <summary>
        <para>Ends a Property wrapper started with BeginAnimatedCheck.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Color,UnityEngine.MaterialGlobalIlluminationFlags)">
      <summary>
        <para>Returns a properly set global illlumination flag based on the passed in flag and the given color.</para>
      </summary>
      <param name="col">Emission color.</param>
      <param name="flags">Current global illumination flag.</param>
      <returns>
        <para>The fixed up flag.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Material)">
      <summary>
        <para>Properly sets up the globalIllumination flag on the given Material depending on the current flag's state and the material's emission property.</para>
      </summary>
      <param name="mat">The material to be fixed up.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a float shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a float shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetDefaultPropertyHeight(UnityEditor.MaterialProperty)">
      <summary>
        <para>Calculate height needed for the property, ignoring custom drawers.</para>
      </summary>
      <param name="prop"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenFieldAndRightEdge(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI. Used e.g for the rect after a left aligned Color field.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenLabelAndField(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetLeftAlignedFieldRect(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperties(UnityEngine.Object[])">
      <summary>
        <para>Get shader property information of the passed materials.</para>
      </summary>
      <param name="mats"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.String)">
      <summary>
        <para>Get information about a single shader property.</para>
      </summary>
      <param name="mats">Selected materials.</param>
      <param name="name">Property name.</param>
      <param name="propertyIndex">Property index.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.Int32)">
      <summary>
        <para>Get information about a single shader property.</para>
      </summary>
      <param name="mats">Selected materials.</param>
      <param name="name">Property name.</param>
      <param name="propertyIndex">Property index.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty)">
      <summary>
        <para>Calculate height needed for the property.</para>
      </summary>
      <param name="prop"></param>
      <param name="label"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Calculate height needed for the property.</para>
      </summary>
      <param name="prop"></param>
      <param name="label"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetRectAfterLabelWidth(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI. This is the rect after the label which can be used for multiple properties. The input rect can be fetched by calling: EditorGUILayout.GetControlRect.</para>
      </summary>
      <param name="r">Line Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetRightAlignedFieldRect(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTextureOffset(System.String,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Get the value of a given texture offset for a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to examine the offset of.</param>
      <param name="hasMixedValueX">Does the x offset have multiple values?</param>
      <param name="hasMixedValueY">Does the y offset have multiple values?</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTexturePropertyCustomArea(UnityEngine.Rect)">
      <summary>
        <para>Returns the free rect below the label and before the large thumb object field. Is used for e.g. tiling and offset properties.</para>
      </summary>
      <param name="position">The total rect of the texture property.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTextureScale(System.String,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Get the value of a given texture scale for a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to examine the scale of.</param>
      <param name="hasMixedValueX">Does the x scale have multiple values?</param>
      <param name="hasMixedValueY">Does the y scale have multiple values?</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.HasPreviewGUI">
      <summary>
        <para>Can this component be Previewed in its current state?</para>
      </summary>
      <returns>
        <para>True if this component can be Previewed in its current state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.HelpBoxWithButton(UnityEngine.GUIContent,UnityEngine.GUIContent)">
      <summary>
        <para>Make a help box with a message and button. Returns true, if button was pressed.</para>
      </summary>
      <param name="messageContent">The message text.</param>
      <param name="buttonContent">The button text.</param>
      <returns>
        <para>Returns true, if button was pressed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IsInstancingEnabled">
      <summary>
        <para>Determines whether the Enable Instancing checkbox is checked.</para>
      </summary>
      <returns>
        <para>Returns true if Enable Instancing checkbox is checked.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean)">
      <summary>
        <para>Draws the UI for setting the global illumination flag of a material.</para>
      </summary>
      <param name="indent">Level of indentation for the property.</param>
      <param name="enabled">True if emission is enabled for the material, false otherwise.</param>
      <param name="ignoreEmissionColor">True if property should always be displayed.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws the UI for setting the global illumination flag of a material.</para>
      </summary>
      <param name="indent">Level of indentation for the property.</param>
      <param name="enabled">True if emission is enabled for the material, false otherwise.</param>
      <param name="ignoreEmissionColor">True if property should always be displayed.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)

See Also: MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)

See Also: MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)

See Also: MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnDisable">
      <summary>
        <para>Called when the editor is disabled, if overridden please call the base OnDisable() to ensure that the material inspector is set up properly.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnEnable">
      <summary>
        <para>Called when the editor is enabled, if overridden please call the base OnEnable() to ensure that the material inspector is set up properly.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnInspectorGUI">
      <summary>
        <para>Implement specific MaterialEditor GUI code here. If you want to simply extend the existing editor call the base OnInspectorGUI () before doing any custom GUI code.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Custom preview for Image component.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnShaderChanged">
      <summary>
        <para>A callback that is invoked when a Material's Shader is changed in the Inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesChanged">
      <summary>
        <para>Whenever a material property is changed call this function. This will rebuild the inspector and validate the properties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesDefaultGUI(UnityEditor.MaterialProperty[])">
      <summary>
        <para>Default rendering of shader properties.</para>
      </summary>
      <param name="props">Array of material properties.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesGUI">
      <summary>
        <para>Render the standard material properties. This method will either render properties using a IShaderGUI instance if found otherwise it uses PropertiesDefaultGUI.</para>
      </summary>
      <returns>
        <para>Returns true if any value was changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a range slider for a range shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">The property to edit.</param>
      <param name="position">Position and size of the range slider control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a range slider for a range shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">The property to edit.</param>
      <param name="position">Position and size of the range slider control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RegisterPropertyChangeUndo(System.String)">
      <summary>
        <para>Call this when you change a material property. It will add an undo for the action.</para>
      </summary>
      <param name="label">Undo Label.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RenderQueueField">
      <summary>
        <para>Display UI for editing material's render queue setting.</para>
      </summary>
      <param name="r"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RenderQueueField(UnityEngine.Rect)">
      <summary>
        <para>Display UI for editing material's render queue setting.</para>
      </summary>
      <param name="r"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RequiresConstantRepaint">
      <summary>
        <para>Does this edit require to be repainted constantly in its current state?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetDefaultGUIWidths">
      <summary>
        <para>Set EditorGUIUtility.fieldWidth and labelWidth to the default values that PropertiesGUI uses.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader)">
      <summary>
        <para>Set the shader of the material.</para>
      </summary>
      <param name="shader">Shader to set.</param>
      <param name="registerUndo">Should undo be registered.</param>
      <param name="newShader"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader,System.Boolean)">
      <summary>
        <para>Set the shader of the material.</para>
      </summary>
      <param name="shader">Shader to set.</param>
      <param name="registerUndo">Should undo be registered.</param>
      <param name="newShader"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetTextureOffset(System.String,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Set the offset of a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to modify the offset of.</param>
      <param name="value">Scale to set.</param>
      <param name="coord">Set the x or y component of the offset (0 for x, 1 for y).</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetTextureScale(System.String,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Set the scale of a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to modify the scale of.</param>
      <param name="value">Scale to set.</param>
      <param name="coord">Set the x or y component of the scale (0 for x, 1 for y).</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handes UI for one shader property.</para>
      </summary>
      <param name="prop"></param>
      <param name="label"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handes UI for one shader property.</para>
      </summary>
      <param name="prop"></param>
      <param name="label"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureCompatibilityWarning(UnityEditor.MaterialProperty)">
      <summary>
        <para>Checks if particular property has incorrect type of texture specified by the material, displays appropriate warning and suggests the user to automatically fix the problem.</para>
      </summary>
      <param name="prop">The texture property to check and display warning for, if necessary.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop"></param>
      <param name="position"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String,System.Boolean)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop"></param>
      <param name="position"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop"></param>
      <param name="position"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.Boolean)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop"></param>
      <param name="position"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String,System.Boolean)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop"></param>
      <param name="position"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyMiniThumbnail(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String)">
      <summary>
        <para>Draw a property field for a texture shader property that only takes up a single line height.</para>
      </summary>
      <param name="position">Rect that this control should be rendered in.</param>
      <param name="label">Label for the field.</param>
      <param name="prop"></param>
      <param name="tooltip"></param>
      <returns>
        <para>Returns total height used by this control.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a texture property control with additional inlined properites.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First optional property inlined after the texture property.</param>
      <param name="extraProperty2">Second optional property inlined after the extraProperty1.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a texture property control with additional inlined properites.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First optional property inlined after the texture property.</param>
      <param name="extraProperty2">Second optional property inlined after the extraProperty1.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a texture property control with additional inlined properites.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First optional property inlined after the texture property.</param>
      <param name="extraProperty2">Second optional property inlined after the extraProperty1.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyTwoLines(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a compact layout of properties.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First extra property inlined after the texture property.</param>
      <param name="label2">Label for the second extra property (on a new line and indented).</param>
      <param name="extraProperty2">Second property on a new line below the texture.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,System.Boolean)">
      <summary>
        <para>Method for showing a texture property control with a HDR color field and its color brightness float field.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="colorProperty">The color property (will be treated as a HDR color).</param>
      <param name="showAlpha">If false then the alpha channel information will be hidden in the GUI.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>Return the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.ColorPickerHDRConfig,System.Boolean)">
      <summary>
        <para>Method for showing a texture property control with a HDR color field and its color brightness float field.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="colorProperty">The color property (will be treated as a HDR color).</param>
      <param name="showAlpha">If false then the alpha channel information will be hidden in the GUI.</param>
      <param name="hdrConfig"></param>
      <returns>
        <para>Return the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty)">
      <summary>
        <para>Draws tiling and offset properties for a texture.</para>
      </summary>
      <param name="position">Rect to draw this control in.</param>
      <param name="property">Property to draw.</param>
      <param name="partOfTexturePropertyControl">If this control should be rendered under large texture property control use 'true'. If this control should be shown seperately use 'false'.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.Boolean)">
      <summary>
        <para>Draws tiling and offset properties for a texture.</para>
      </summary>
      <param name="position">Rect to draw this control in.</param>
      <param name="property">Property to draw.</param>
      <param name="partOfTexturePropertyControl">If this control should be rendered under large texture property control use 'true'. If this control should be shown seperately use 'false'.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="position"></param>
      <param name="scaleOffset"></param>
      <param name="partOfTexturePropertyControl"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4,System.Boolean)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="position"></param>
      <param name="scaleOffset"></param>
      <param name="partOfTexturePropertyControl"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a vector shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="prop"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a vector shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="prop"></param>
      <param name="position"></param>
    </member>
    <member name="T:UnityEditor.MaterialEditorExtensions">
      <summary>
        <para>Extension methods for the Material asset type in the editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditorExtensions.PerformBumpMapCheck(UnityEngine.Material)">
      <summary>
        <para>Iterates over all the Material properties with the MaterialProperty.PropFlags.Normal flag and checks that the textures referenced by these properties are imported as TextureImporterType.NormalMap.</para>
      </summary>
      <param name="material">The target material.</param>
    </member>
    <member name="T:UnityEditor.MaterialProperty">
      <summary>
        <para>Describes information and value of a single shader property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.colorValue">
      <summary>
        <para>Color value of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.displayName">
      <summary>
        <para>Display name of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.flags">
      <summary>
        <para>Flags that control how property is displayed (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.floatValue">
      <summary>
        <para>Float vaue of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.hasMixedValue">
      <summary>
        <para>Does this property have multiple different values? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.name">
      <summary>
        <para>Name of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.rangeLimits">
      <summary>
        <para>Min/max limits of a ranged float property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.targets">
      <summary>
        <para>Material objects being edited by this property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.textureDimension">
      <summary>
        <para>Texture dimension (2D, Cubemap etc.) of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.textureValue">
      <summary>
        <para>Texture value of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.type">
      <summary>
        <para>Type of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.vectorValue">
      <summary>
        <para>Vector value of the property.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialProperty.PropFlags">
      <summary>
        <para>Flags that control how a MaterialProperty is displayed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.Gamma">
      <summary>
        <para>Signifies that values of this property are in gamma space and should not be gamma corrected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.HDR">
      <summary>
        <para>Signifies that values of this property contain High Dynamic Range (HDR) data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.HideInInspector">
      <summary>
        <para>Do not show the property in the Inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.None">
      <summary>
        <para>No flags are set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.NonModifiableTextureData">
      <summary>
        <para>Do not allow this texture property to be edited in the Inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.Normal">
      <summary>
        <para>Signifies that values of this property contain Normal (normalized vector) data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.NoScaleOffset">
      <summary>
        <para>Do not show UV scale/offset fields next to a texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.PerRendererData">
      <summary>
        <para>In the Material Inspector, value for this property will be queried from Renderer's MaterialPropertyBlock, instead of from the Material. The value will also appear as read-only. This corresponds to the "[PerRendererData]" attribute in front of a property in the Shader code.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialProperty.PropType">
      <summary>
        <para>Material property type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Color">
      <summary>
        <para>Color property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Float">
      <summary>
        <para>Float property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Range">
      <summary>
        <para>Ranged float (with min/max values) property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Texture">
      <summary>
        <para>Texture property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Vector">
      <summary>
        <para>Vector property.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialPropertyDrawer">
      <summary>
        <para>Base class to derive custom material property drawers from.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.Apply(UnityEditor.MaterialProperty)">
      <summary>
        <para>Apply extra initial values to the material.</para>
      </summary>
      <param name="prop">The MaterialProperty to apply values for.</param>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.GetPropertyHeight(UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
      <summary>
        <para>Override this method to specify how tall the GUI for this property is in pixels.</para>
      </summary>
      <param name="prop">The MaterialProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
      <param name="editor">Current material editor.</param>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
      <summary>
        <para>Override this method to make your own GUI for the property.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the property GUI.</param>
      <param name="prop">The MaterialProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
      <param name="editor">Current material editor.</param>
    </member>
    <member name="T:UnityEditor.Media.AudioTrackAttributes">
      <summary>
        <para>Descriptor for audio track format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.channelCount">
      <summary>
        <para>Number of channels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.language">
      <summary>
        <para>Dialogue language, if applicable.  Can be empty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.sampleRate">
      <summary>
        <para>Audio sampling rate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.MediaEncoder">
      <summary>
        <para>Encodes images and audio samples into an audio or movie file.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(UnityEngine.Texture2D)">
      <summary>
        <para>Appends a frame to the file's video track.</para>
      </summary>
      <param name="texture">Texture containing the pixels to be written into the track for the current frame.</param>
      <param name="time">Timestamp for the new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(UnityEngine.Texture2D,UnityEditor.Media.MediaTime)">
      <summary>
        <para>Appends a frame to the file's video track.</para>
      </summary>
      <param name="texture">Texture containing the pixels to be written into the track for the current frame.</param>
      <param name="time">Timestamp for the new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,Unity.Collections.NativeArray`1&lt;System.Byte&gt;)">
      <summary>
        <para>Appends a frame from a raw buffer to the file's video track.</para>
      </summary>
      <param name="width">Image width.</param>
      <param name="height">Image height.</param>
      <param name="rowBytes">Bytes in one row of pixels. Useful in case lines include padding. Can be set to 0 if there is no padding.</param>
      <param name="format">Pixel format. Only TextureFormat.RGBA32 is supported at this time.</param>
      <param name="data">Bytes containing the image.</param>
      <param name="time">Timestamp for new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,Unity.Collections.NativeArray`1&lt;System.Byte&gt;,UnityEditor.Media.MediaTime)">
      <summary>
        <para>Appends a frame from a raw buffer to the file's video track.</para>
      </summary>
      <param name="width">Image width.</param>
      <param name="height">Image height.</param>
      <param name="rowBytes">Bytes in one row of pixels. Useful in case lines include padding. Can be set to 0 if there is no padding.</param>
      <param name="format">Pixel format. Only TextureFormat.RGBA32 is supported at this time.</param>
      <param name="data">Bytes containing the image.</param>
      <param name="time">Timestamp for new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddSamples(System.UInt16,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Appends sample frames to the specified audio track.</para>
      </summary>
      <param name="trackIndex">Index of the track to which sample frames will be added.</param>
      <param name="interleavedSamples">Sample frames to add.  Samples are expected to be interleaved.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddSamples(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Appends sample frames to the specified audio track.</para>
      </summary>
      <param name="trackIndex">Index of the track to which sample frames will be added.</param>
      <param name="interleavedSamples">Sample frames to add.  Samples are expected to be interleaved.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.Dispose">
      <summary>
        <para>Finishes writing all tracks and closes the file being written.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.MediaRational">
      <summary>
        <para>Rational number useful for expressing fractions precisely.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.denominator">
      <summary>
        <para>Fraction denominator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.inverse">
      <summary>
        <para>The inverse of the rational number.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isNegative">
      <summary>
        <para>Whether the rational number is negative.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isValid">
      <summary>
        <para>Whether the rational number is valid.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isZero">
      <summary>
        <para>Whether the rational number is zero.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.numerator">
      <summary>
        <para>Fraction numerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.#ctor(System.Int32)">
      <summary>
        <para>Constructs a rational number. The version that omits the denominator sets it to 1.</para>
      </summary>
      <param name="numerator">Numerator of the rational number.</param>
      <param name="denominator">Denominator of the rational number.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Constructs a rational number. The version that omits the denominator sets it to 1.</para>
      </summary>
      <param name="numerator">Numerator of the rational number.</param>
      <param name="denominator">Denominator of the rational number.</param>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.Invalid">
      <summary>
        <para>Invalid rational value.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Media.MediaRational.op_Explicit(UnityEditor.Media.MediaRational)">
      <summary>
        <para>Returns the rational value expressed as a floating point value.</para>
      </summary>
      <param name="r">Rational number to convert.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.Set(System.Int32,System.Int32)">
      <summary>
        <para>Sets the numerator and denominator, performing normalization.</para>
      </summary>
      <param name="numerator">New value for the rational numerator.</param>
      <param name="denominator">New value for the rational denominator.</param>
    </member>
    <member name="T:UnityEditor.Media.MediaTime">
      <summary>
        <para>Time representation for use with media containers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaTime.count">
      <summary>
        <para>The sample count for the time value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaTime.rate">
      <summary>
        <para>The rate used for converting the count into seconds.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaTime.#ctor(System.Int64)">
      <summary>
        <para>Creates a time value with an integer number of seconds, using 1Hz for the rate.</para>
      </summary>
      <param name="seconds">The number of seconds in the time value.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaTime.#ctor(System.Int64,System.UInt32,System.UInt32)">
      <summary>
        <para>Creates a time value for a specified sample count and rate.</para>
      </summary>
      <param name="count">The sample count for the time value.</param>
      <param name="rateNumerator">Numerator for the rate used by the time value.</param>
      <param name="rateDenominator">Denominator for the rate used by the time value.</param>
    </member>
    <member name="F:UnityEditor.Media.MediaTime.Invalid">
      <summary>
        <para>Invalid time value.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Media.MediaTime.op_Explicit(UnityEditor.Media.MediaTime)">
      <summary>
        <para>Returns the time value expressed as a floating point number of seconds.</para>
      </summary>
      <param name="t">Time to convert.</param>
    </member>
    <member name="T:UnityEditor.Media.VideoTrackAttributes">
      <summary>
        <para>Descriptor for audio track format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.bitRateMode">
      <summary>
        <para>VideoBitrateMode for the encoded video.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.frameRate">
      <summary>
        <para>Frames per second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.height">
      <summary>
        <para>Image height in pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.includeAlpha">
      <summary>
        <para>True if the track is to include the alpha channel found in the texture passed to AddFrame. False otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.width">
      <summary>
        <para>Image width in pixels.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.Connection">
      <summary>
        <para>A pair of from and to indices describing what thing keeps what other thing alive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.Connection.from">
      <summary>
        <para>Index into a virtual list of all GC handles, followed by all native objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.Connection.to">
      <summary>
        <para>Index into a virtual list of all GC handles, followed by all native objects.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.FieldDescription">
      <summary>
        <para>Description of a field of a managed type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.isStatic">
      <summary>
        <para>Is this field static?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.name">
      <summary>
        <para>Name of this field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.offset">
      <summary>
        <para>Offset of this field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.typeIndex">
      <summary>
        <para>The typeindex into PackedMemorySnapshot.typeDescriptions of the type this field belongs to.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.MemorySection">
      <summary>
        <para>A dump of a piece of memory from the player that's being profiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.MemorySection.bytes">
      <summary>
        <para>The actual bytes of the memory dump.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.MemorySection.startAddress">
      <summary>
        <para>The start address of this piece of memory.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.MemorySnapshot">
      <summary>
        <para>MemorySnapshot is a profiling tool to help diagnose memory usage.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.MemoryProfiler.MemorySnapshot.OnSnapshotReceived(System.Action`1&lt;UnityEditor.MemoryProfiler.PackedMemorySnapshot&gt;)">
      <summary>
        <para>Event that will be fired when a new memory snapshot comes in through the profiler connection. Its argument will be a PackedMemorySnapshot.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.MemoryProfiler.MemorySnapshot.RequestNewSnapshot">
      <summary>
        <para>Requests a new snapshot from the currently connected target of the profiler. Memory snapshots are supported on IL2CPP and Mono .NET 3.5/4.0 scripting backends, although .NET 3.5 has been deprecated as of 2018.3.


NOTE: Each snapshot consists of approximately one managed object per recorded managed object. Snapshots taken from the editor will contain the objects in all previous snapshots that have not yet been garbage-collected. Therefore, repeated snapshots of the editor may grow exponentially. If you no longer need an old snapshot it is therefore advisable to null all references to it and call GC.Collect() before taking another one.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedGCHandle">
      <summary>
        <para>A description of a GC handle used by the virtual machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedGCHandle.target">
      <summary>
        <para>The address of the managed object that the GC handle is referencing.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedMemorySnapshot">
      <summary>
        <para>PackedMemorySnapshot is a compact representation of a memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.connections">
      <summary>
        <para>Connections is an array of from,to pairs that describe which things are keeping which other things alive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.gcHandles">
      <summary>
        <para>All GC handles in use in the memorysnapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.managedHeapSections">
      <summary>
        <para>Array of actual managed heap memory sections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.nativeObjects">
      <summary>
        <para>All native C++ objects that were loaded at time of the snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.nativeTypes">
      <summary>
        <para>Descriptions of all the C++ unity types the profiled player knows about.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.typeDescriptions">
      <summary>
        <para>Descriptions of all the managed types that were known to the virtual machine when the snapshot was taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.virtualMachineInformation">
      <summary>
        <para>Information about the virtual machine running executing the managade code inside the player.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeType">
      <summary>
        <para>A description of a C++ unity type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeType.name">
      <summary>
        <para>Name of this C++ unity type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeType.nativeBaseTypeArrayIndex">
      <summary>
        <para>The index used to obtain the native C++ base class description from the PackedMemorySnapshot.nativeTypes array.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject">
      <summary>
        <para>Description of a C++ unity object in memory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.hideFlags">
      <summary>
        <para>The hideFlags this native object has.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.instanceId">
      <summary>
        <para>InstanceId of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isDontDestroyOnLoad">
      <summary>
        <para>Has this object has been marked as DontDestroyOnLoad?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isManager">
      <summary>
        <para>Is this native object an internal Unity manager object?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isPersistent">
      <summary>
        <para>Is this object persistent? (Assets are persistent, objects stored in Scenes are persistent,  dynamically created objects are not)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.name">
      <summary>
        <para>Name of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.nativeObjectAddress">
      <summary>
        <para>The memory address of the native C++ object. This matches the "m_CachedPtr" field of UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.nativeTypeArrayIndex">
      <summary>
        <para>The index used to obtain the native C++ type description from the PackedMemorySnapshot.nativeTypes array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.size">
      <summary>
        <para>Size in bytes of this object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsDontDestroyOnLoad">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsDontDestroyOnLoad in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsManager">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsManager in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsPersistent">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsPersistent in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.TypeDescription">
      <summary>
        <para>Description of a managed type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.arrayRank">
      <summary>
        <para>If this is an arrayType, this will return the rank of the array. (1 for a 1-dimensional array, 2 for a 2-dimensional array, etc)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.assembly">
      <summary>
        <para>Name of the assembly this type was loaded from.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.baseOrElementTypeIndex">
      <summary>
        <para>The base type for this type, pointed to by an index into PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.fields">
      <summary>
        <para>An array containing descriptions of all fields of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.isArray">
      <summary>
        <para>Is this type an array?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.isValueType">
      <summary>
        <para>Is this type a value type? (if it's not a value type, it's a reference type)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.name">
      <summary>
        <para>Name of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.size">
      <summary>
        <para>Size in bytes of an instance of this type. If this type is an arraytype, this describes the amount of bytes a single element in the array will take up.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.staticFieldBytes">
      <summary>
        <para>The actual contents of the bytes that store this types static fields, at the point of time when the snapshot was taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.typeIndex">
      <summary>
        <para>The typeIndex of this type.  This index is an index into the PackedMemorySnapshot.typeDescriptions array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.typeInfoAddress">
      <summary>
        <para>The address in memory that contains the description of this type inside the virtual machine. This can be used to match managed objects in the heap to their corresponding TypeDescription,  as the first pointer of a managed object points to its type description.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags">
      <summary>
        <para>Equivalent of Profiling.TypeFlags in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kArray">
      <summary>
        <para>Equivalent of Profiling.TypeFlags.kArray in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kArrayRankMask">
      <summary>
        <para>Equivalent of Profiling.TypeFlags.kArrayRankMask in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kValueType">
      <summary>
        <para>Equivalent of Profiling.TypeFlags.kValueType in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.VirtualMachineInformation">
      <summary>
        <para>Information about the virtual machine running executing the managed code inside the player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.allocationGranularity">
      <summary>
        <para>Allocation granularity in bytes used by the virtual machine allocator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arrayBoundsOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the bounds of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arrayHeaderSize">
      <summary>
        <para>Size in bytes of the header of an array object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arraySizeOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the size of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.heapFormatVersion">
      <summary>
        <para>A version number that will change when the object layout inside the managed heap will change.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.objectHeaderSize">
      <summary>
        <para>Size in bytes of the header of each managed object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.pointerSize">
      <summary>
        <para>Size in bytes of a pointer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Menu">
      <summary>
        <para>Menu class to manipulate the menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Menu.#ctor">
      <summary>
        <para>Default constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Menu.GetChecked(System.String)">
      <summary>
        <para>Get the check status of the given menu.</para>
      </summary>
      <param name="menuPath"></param>
    </member>
    <member name="M:UnityEditor.Menu.GetEnabled(System.String)">
      <summary>
        <para>Gets a menu item's enabled status.</para>
      </summary>
      <param name="menuPath">A slash-delimited path to the item's position in the menu. For example, "Scene/Place on Surface".</param>
      <returns>
        <para>True if the menu item is enabled. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Menu.SetChecked(System.String,System.Boolean)">
      <summary>
        <para>Set the check status of the given menu.</para>
      </summary>
      <param name="menuPath"></param>
      <param name="isChecked"></param>
    </member>
    <member name="T:UnityEditor.MenuCommand">
      <summary>
        <para>Used to extract the context for a MenuItem.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuCommand.context">
      <summary>
        <para>Context is the object that is the target of a menu command.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuCommand.userData">
      <summary>
        <para>An integer for passing custom information to a menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MenuCommand.#ctor(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Creates a new MenuCommand object.</para>
      </summary>
      <param name="inContext"></param>
      <param name="inUserData"></param>
    </member>
    <member name="M:UnityEditor.MenuCommand.#ctor(UnityEngine.Object)">
      <summary>
        <para>Creates a new MenuCommand object.</para>
      </summary>
      <param name="inContext"></param>
    </member>
    <member name="T:UnityEditor.MenuItem">
      <summary>
        <para>The MenuItem attribute allows you to add menu items to the main menu and inspector context menus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String)">
      <summary>
        <para>Creates a menu item and invokes the static function following it, when the menu item is selected.</para>
      </summary>
      <param name="itemName">The itemName is the menu item represented like a pathname.
        For example the menu item could be "GameObject/Do Something".</param>
      <param name="isValidateFunction">If isValidateFunction is true, this is a validation
        function and will be called before invoking the menu function with the same itemName.</param>
      <param name="priority">The order by which the menu items are displayed.</param>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Creates a menu item and invokes the static function following it, when the menu item is selected.</para>
      </summary>
      <param name="itemName">The itemName is the menu item represented like a pathname.
        For example the menu item could be "GameObject/Do Something".</param>
      <param name="isValidateFunction">If isValidateFunction is true, this is a validation
        function and will be called before invoking the menu function with the same itemName.</param>
      <param name="priority">The order by which the menu items are displayed.</param>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>
        <para>Creates a menu item and invokes the static function following it, when the menu item is selected.</para>
      </summary>
      <param name="itemName">The itemName is the menu item represented like a pathname.
        For example the menu item could be "GameObject/Do Something".</param>
      <param name="isValidateFunction">If isValidateFunction is true, this is a validation
        function and will be called before invoking the menu function with the same itemName.</param>
      <param name="priority">The order by which the menu items are displayed.</param>
    </member>
    <member name="T:UnityEditor.MeshOptimizationFlags">
      <summary>
        <para>Options to control the optimization of mesh data during asset import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.Everything">
      <summary>
        <para>Perform maximum optimization of the mesh data, enables all optimization options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.PolygonOrder">
      <summary>
        <para>Optimize the order of polygons in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.VertexOrder">
      <summary>
        <para>Optimize the order of vertices in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MeshUtility">
      <summary>
        <para>Various utilities for mesh manipulation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(UnityEngine.Mesh)">
      <summary>
        <para>Gets a snapshot of Mesh data for read-only access in the Unity Editor.</para>
      </summary>
      <param name="mesh">The input mesh.</param>
      <param name="meshes">The input meshes.</param>
      <returns>
        <para>Returns a read-only snapshot of Mesh data. See Mesh.MeshDataArray and Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(UnityEngine.Mesh[])">
      <summary>
        <para>Gets a snapshot of Mesh data for read-only access in the Unity Editor.</para>
      </summary>
      <param name="mesh">The input mesh.</param>
      <param name="meshes">The input meshes.</param>
      <returns>
        <para>Returns a read-only snapshot of Mesh data. See Mesh.MeshDataArray and Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(System.Collections.Generic.List`1&lt;UnityEngine.Mesh&gt;)">
      <summary>
        <para>Gets a snapshot of Mesh data for read-only access in the Unity Editor.</para>
      </summary>
      <param name="mesh">The input mesh.</param>
      <param name="meshes">The input meshes.</param>
      <returns>
        <para>Returns a read-only snapshot of Mesh data. See Mesh.MeshDataArray and Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.GetMeshCompression(UnityEngine.Mesh)">
      <summary>
        <para>Returns the mesh compression setting for a Mesh.</para>
      </summary>
      <param name="mesh">The mesh to get information on.</param>
    </member>
    <member name="M:UnityEditor.MeshUtility.Optimize(UnityEngine.Mesh)">
      <summary>
        <para>Optimizes the Mesh data to improve rendering performance.</para>
      </summary>
      <param name="mesh"></param>
    </member>
    <member name="M:UnityEditor.MeshUtility.SetMeshCompression(UnityEngine.Mesh,UnityEditor.ModelImporterMeshCompression)">
      <summary>
        <para>Change the mesh compression setting for a mesh.</para>
      </summary>
      <param name="mesh">The mesh to set the compression mode for.</param>
      <param name="compression">The compression mode to set.</param>
    </member>
    <member name="M:UnityEditor.MeshUtility.SetPerTriangleUV2(UnityEngine.Mesh,UnityEngine.Vector2[])">
      <summary>
        <para>Will insert per-triangle uv2 in mesh and handle vertex splitting etc.</para>
      </summary>
      <param name="src"></param>
      <param name="triUV"></param>
    </member>
    <member name="T:UnityEditor.MessageType">
      <summary>
        <para>User message types.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Error">
      <summary>
        <para>Error message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Info">
      <summary>
        <para>Info message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.None">
      <summary>
        <para>Neutral message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Warning">
      <summary>
        <para>Warning message.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MobileTextureSubtarget">
      <summary>
        <para>Compressed texture format for target build platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ASTC">
      <summary>
        <para>ASTC texture compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.DXT">
      <summary>
        <para>S3 texture compression. Supported on devices with NVidia Tegra, Vivante and Intel GPUs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ETC">
      <summary>
        <para>ETC1 texture compression (or ETC2 for textures with alpha). ETC1 is supported by all devices. ETC2 is available on devices which support OpenGL ES 3.0; on OpenGL ES 2 devices the texture is decompressed on CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ETC2">
      <summary>
        <para>ETC2 texture compression. Available on devices which support OpenGL ES 3.0; on OpenGL ES 2 devices the texture is decompressed on CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.Generic">
      <summary>
        <para>Don't override texture compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.PVRTC">
      <summary>
        <para>PowerVR texture compression. Available on devices with PowerVR GPU.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporter">
      <summary>
        <para>Model importer lets you modify import settings from editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.addCollider">
      <summary>
        <para>Add to imported meshes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationCompression">
      <summary>
        <para>Animation compression setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationPositionError">
      <summary>
        <para>Allowed error of animation position compression.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationRotationError">
      <summary>
        <para>Allowed error of animation rotation compression.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationScaleError">
      <summary>
        <para>Allowed error of animation scale compression.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationType">
      <summary>
        <para>Animator generation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationWrapMode">
      <summary>
        <para>The default wrap mode for the generated animation clips.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.autoGenerateAvatarMappingIfUnspecified">
      <summary>
        <para>Generate auto mapping if no avatarSetup is provided when importing humanoid animation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.avatarSetup">
      <summary>
        <para>The Avatar generation of the imported model.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.bakeAxisConversion">
      <summary>
        <para>Computes the axis conversion on geometry and animation for Models defined in an axis system that differs from Unity's (left handed, Z forward, Y-up).

                    When enabled, Unity transforms the geometry and animation data in order to convert the axis.

                    When disabled, Unity transforms the root GameObject of the hierarchy in order to convert the axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.bakeIK">
      <summary>
        <para>Bake Inverse Kinematics (IK) when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.clipAnimations">
      <summary>
        <para>Animation clips to split animation into. See Also: ModelImporterClipAnimation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.defaultClipAnimations">
      <summary>
        <para>Generate a list of all default animation clip based on TakeInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.extraExposedTransformPaths">
      <summary>
        <para>Animation optimization setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.extraUserProperties">
      <summary>
        <para>Additional properties to treat as user properties.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.fileScale">
      <summary>
        <para>Scaling factor used when useFileScale is set to true (Read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateAnimations">
      <summary>
        <para>Animation generation options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateMaterials">
      <summary>
        <para>Material generation options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateSecondaryUV">
      <summary>
        <para>Generate secondary UV set for lightmapping.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.globalScale">
      <summary>
        <para>Global scale factor for importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.humanDescription">
      <summary>
        <para>The human description that is used to generate an Avatar during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.humanoidOversampling">
      <summary>
        <para>Controls how much oversampling is used when importing humanoid animations for retargeting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importAnimatedCustomProperties">
      <summary>
        <para>Import animated custom properties from file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importAnimation">
      <summary>
        <para>Import animation from file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importBlendShapeNormals">
      <summary>
        <para>Blend shape normal import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importBlendShapes">
      <summary>
        <para>Controls import of BlendShapes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importCameras">
      <summary>
        <para>Controls import of cameras. Basic properties like field of view, near plane distance and far plane distance can be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importConstraints">
      <summary>
        <para>Import animation constraints.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importedTakeInfos">
      <summary>
        <para>Generates the list of all imported take.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importLights">
      <summary>
        <para>Controls import of lights. Note that because light are defined differently in DCC tools, some light types or properties may not be exported. Basic properties like color and intensity can be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importMaterials">
      <summary>
        <para>Import materials from file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importNormals">
      <summary>
        <para>Vertex normal import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importTangents">
      <summary>
        <para>Vertex tangent import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importVisibility">
      <summary>
        <para>Use visibility properties to enable or disable MeshRenderer components.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.indexFormat">
      <summary>
        <para>Format of the imported mesh index buffer data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isBakeIKSupported">
      <summary>
        <para>Is Bake Inverse Kinematics (IK) supported by this importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isFileScaleUsed">
      <summary>
        <para>Is FileScale used when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isReadable">
      <summary>
        <para>Are mesh vertices and indices accessible from script?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isTangentImportSupported">
      <summary>
        <para>Is import of tangents supported by this importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isUseFileUnitsSupported">
      <summary>
        <para>Is useFileUnits supported for this asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.keepQuads">
      <summary>
        <para>If this is true, any quad faces that exist in the mesh data before it is imported are kept as quads instead of being split into two triangles, for the purposes of tessellation. Set this to false to disable this behavior.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialImportMode">
      <summary>
        <para>Material creation options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialLocation">
      <summary>
        <para>Material import location options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialName">
      <summary>
        <para>Material naming setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialSearch">
      <summary>
        <para>Existing material search setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.maxBonesPerVertex">
      <summary>
        <para>Maximum bones per vertex.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.meshCompression">
      <summary>
        <para>Mesh compression setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.meshOptimizationFlags">
      <summary>
        <para>Options to control the optimization of mesh data during asset import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.minBoneWeight">
      <summary>
        <para>Minimum bone weight to keep.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.motionNodeName">
      <summary>
        <para>The path of the transform used to generation the motion of the animation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalCalculationMode">
      <summary>
        <para>Normal generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalImportMode">
      <summary>
        <para>Normals import mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalSmoothingAngle">
      <summary>
        <para>Smoothing angle (in degrees) for calculating normals.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalSmoothingSource">
      <summary>
        <para>Source of smoothing information for calculation of normals.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeGameObjects">
      <summary>
        <para>Animation optimization setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMesh">
      <summary>
        <para>Vertex optimization setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMeshPolygons">
      <summary>
        <para>Optimize the order of polygons in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMeshVertices">
      <summary>
        <para>Optimize the order of vertices in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.preserveHierarchy">
      <summary>
        <para>If true, always create an explicit Prefab root. Otherwise, if the model has a single root, it is reused as the Prefab root.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.referencedClips">
      <summary>
        <para>Generates the list of all imported Animations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.resampleCurves">
      <summary>
        <para>If set to false, the importer will not resample curves when possible.
Read more about.

Notes:

- Some unsupported FBX features (such as PreRotation or PostRotation on transforms) will override this setting. In these situations, animation curves will still be resampled even if the setting is disabled. For best results, avoid using PreRotation, PostRotation and GetRotationPivot.

- This option was introduced in Version 5.3. Prior to this version, Unity's import behaviour was as if this option was always enabled. Therefore enabling the option gives the same behaviour as pre-5.3 animation import.
</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVAngleDistortion">
      <summary>
        <para>Threshold for angle distortion (in degrees) when generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVAreaDistortion">
      <summary>
        <para>Threshold for area distortion when generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVHardAngle">
      <summary>
        <para>Hard angle (in degrees) for generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMarginMethod">
      <summary>
        <para>Method to use for handling margins when generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMinLightmapResolution">
      <summary>
        <para>The minimum lightmap resolution in texels per unit that the associated model is expected to have.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMinObjectScale">
      <summary>
        <para>The minimum object scale that the associated model is expected to have.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVPackMargin">
      <summary>
        <para>Margin to be left between charts when packing secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.skinWeights">
      <summary>
        <para>Skin weights import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.sortHierarchyByName">
      <summary>
        <para>Sorts the gameObject hierarchy by name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.sourceAvatar">
      <summary>
        <para>Imports the HumanDescription from the given Avatar.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.splitTangentsAcrossSeams">
      <summary>
        <para>Should tangents be split across UV seams.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.swapUVChannels">
      <summary>
        <para>Swap primary and secondary UV channels when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.tangentImportMode">
      <summary>
        <para>Tangents import mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.transformPaths">
      <summary>
        <para>Generates the list of all imported Transforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useFileScale">
      <summary>
        <para>Use FileScale when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useFileUnits">
      <summary>
        <para>Detect file units and import as 1FileUnit=1UnityUnit, otherwise it will import as 1cm=1UnityUnit.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useSRGBMaterialColor">
      <summary>
        <para>When disabled, imported material albedo colors are converted to gamma space. This property should be disabled when using linear color space in Player rendering settings.
The default value is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.weldVertices">
      <summary>
        <para>Combine vertices that share the same position in space.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ModelImporter.CreateDefaultMaskForClip(UnityEditor.ModelImporterClipAnimation)">
      <summary>
        <para>Creates a mask that matches the model hierarchy, and applies it to the provided ModelImporterClipAnimation.</para>
      </summary>
      <param name="clip">Clip to which the mask will be applied.</param>
    </member>
    <member name="M:UnityEditor.ModelImporter.ExtractTextures(System.String)">
      <summary>
        <para>Extracts the embedded textures from a model file (such as FBX or SketchUp).</para>
      </summary>
      <param name="folderPath">The directory where the textures will be extracted.</param>
      <returns>
        <para>Returns true if the textures are extracted successfully, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ModelImporter.SearchAndRemapMaterials(UnityEditor.ModelImporterMaterialName,UnityEditor.ModelImporterMaterialSearch)">
      <summary>
        <para>Search the project for matching materials and use them instead of the internal materials.</para>
      </summary>
      <param name="nameOption">The name matching option.</param>
      <param name="searchOption">The search type option.</param>
      <returns>
        <para>Returns true if the materials have been successfly remapped, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ModelImporterAnimationCompression">
      <summary>
        <para>Animation compression options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.KeyframeReduction">
      <summary>
        <para>Perform keyframe reduction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.KeyframeReductionAndCompression">
      <summary>
        <para>Perform keyframe reduction and compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.Off">
      <summary>
        <para>No animation compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.Optimal">
      <summary>
        <para>Perform keyframe reduction and choose the best animation curve representation at runtime to reduce memory footprint (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterAnimationType">
      <summary>
        <para>Animation mode for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Generic">
      <summary>
        <para>Generate a generic animator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Human">
      <summary>
        <para>Generate a human animator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Legacy">
      <summary>
        <para>Generate a legacy animation type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.None">
      <summary>
        <para>Generate no animation data.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterAvatarSetup">
      <summary>
        <para>Set the Avatar generation mode for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.CopyFromOther">
      <summary>
        <para>Copy the Avatar from another model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.CreateFromThisModel">
      <summary>
        <para>Create the Avatar from this model and save it as a sub-asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.NoAvatar">
      <summary>
        <para>Disable Avatar creation for this model.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterClipAnimation">
      <summary>
        <para>Animation clips to split animation into.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.additiveReferencePoseFrame">
      <summary>
        <para>The additive reference pose frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.curves">
      <summary>
        <para>Additionnal curves that will be that will be added during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.cycleOffset">
      <summary>
        <para>Offset to the cycle of a looping animation, if a different time in it is desired to be the start.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.events">
      <summary>
        <para>AnimationEvents that will be added during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.firstFrame">
      <summary>
        <para>First frame of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.hasAdditiveReferencePose">
      <summary>
        <para>Enable to defines an additive reference pose.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.heightFromFeet">
      <summary>
        <para>Keeps the feet aligned with the root transform position.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.heightOffset">
      <summary>
        <para>Offset to the vertical root position.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalOrientation">
      <summary>
        <para>Keeps the vertical position as it is authored in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionXZ">
      <summary>
        <para>Keeps the vertical position as it is authored in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionY">
      <summary>
        <para>Keeps the vertical position as it is authored in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lastFrame">
      <summary>
        <para>Last frame of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootHeightY">
      <summary>
        <para>Enable to make vertical root motion be baked into the movement of the bones. Disable to make vertical root motion be stored as root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootPositionXZ">
      <summary>
        <para>Enable to make horizontal root motion be baked into the movement of the bones. Disable to make horizontal root motion be stored as root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootRotation">
      <summary>
        <para>Enable to make root rotation be baked into the movement of the bones. Disable to make root rotation be stored as root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loop">
      <summary>
        <para>Is the clip a looping animation?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loopPose">
      <summary>
        <para>Enable to make the motion loop seamlessly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loopTime">
      <summary>
        <para>Enable to make the clip loop.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskNeedsUpdating">
      <summary>
        <para>Returns true when the source AvatarMask has changed. This only happens when  ModelImporterClipAnimation.maskType is set to ClipAnimationMaskType.CopyFromOther
To force a reload of the mask, simply set  ModelImporterClipAnimation.maskSource to the desired AvatarMask.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskSource">
      <summary>
        <para>The AvatarMask used to mask transforms during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskType">
      <summary>
        <para>Define mask type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.mirror">
      <summary>
        <para>Mirror left and right in this clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.name">
      <summary>
        <para>Clip name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.rotationOffset">
      <summary>
        <para>Offset in degrees to the root rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.takeName">
      <summary>
        <para>Take name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.wrapMode">
      <summary>
        <para>The wrap mode of the animation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureClipFromMask(UnityEngine.AvatarMask)">
      <summary>
        <para>Copy the mask settings from an AvatarMask to the clip configuration.</para>
      </summary>
      <param name="mask">AvatarMask from which the mask settings will be imported.</param>
    </member>
    <member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureMaskFromClip(UnityEngine.AvatarMask&amp;)">
      <summary>
        <para>Copy the current masking settings from the clip to an AvatarMask.</para>
      </summary>
      <param name="mask">AvatarMask to which the masking values will be saved.</param>
    </member>
    <member name="T:UnityEditor.ModelImporterGenerateAnimations">
      <summary>
        <para>Animation generation options for ModelImporter. These options relate to the legacy Animation system, they should only be used when ModelImporter.animationType==ModelImporterAnimationType.Legacy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.GenerateAnimations">
      <summary>
        <para>Default animation import mode (All animations are stored in the root object).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InNodes">
      <summary>
        <para>Generate animations in the objects that animate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InOriginalRoots">
      <summary>
        <para>Generate animations in the root objects of the animation package.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InRoot">
      <summary>
        <para>Generate animations in the transform root objects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.None">
      <summary>
        <para>Do not generate animations.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterGenerateMaterials">
      <summary>
        <para>Material generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.None">
      <summary>
        <para>Do not generate materials.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.PerSourceMaterial">
      <summary>
        <para>Generate a material for each material in the source asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.PerTexture">
      <summary>
        <para>Generate a material for each texture used.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterHumanoidOversampling">
      <summary>
        <para>Humanoid Oversampling available multipliers.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X1">
      <summary>
        <para>Default Humanoid Oversampling multiplier = 1 which is equivalent to no oversampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X2">
      <summary>
        <para>Humanoid Oversampling samples at 2 times the sampling rate found in the imported file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X4">
      <summary>
        <para>Humanoid Oversampling samples at 4 times the sampling rate found in the imported file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X8">
      <summary>
        <para>Humanoid Oversampling samples at 8 times the sampling rate found in the imported file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterIndexFormat">
      <summary>
        <para>Format of the imported mesh index buffer data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.Auto">
      <summary>
        <para>Use 16 or 32 bit index buffer depending on mesh size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.UInt16">
      <summary>
        <para>Use 16 bit index buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.UInt32">
      <summary>
        <para>Use 32 bit index buffer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialImportMode">
      <summary>
        <para>Material import options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.ImportStandard">
      <summary>
        <para>The model importer imports materials in standard mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.ImportViaMaterialDescription">
      <summary>
        <para>Enables the PreprocessMaterialDescription AssetPostprocessor on the current importer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.None">
      <summary>
        <para>The model importer does not import materials.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialLocation">
      <summary>
        <para>Material import options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialLocation.External">
      <summary>
        <para>Extract the materials and textures from the model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialLocation.InPrefab">
      <summary>
        <para>Unity imports materials as sub-assets.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialName">
      <summary>
        <para>Material naming options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnMaterialName">
      <summary>
        <para>Use a material name of the form &lt;materialName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnModelNameAndMaterialName">
      <summary>
        <para>Use material names in the form &lt;modelFileName&gt;-&lt;materialName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnTextureName">
      <summary>
        <para>Use material names in the form &lt;textureName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnTextureName_Or_ModelNameAndMaterialName">
      <summary>
        <para>&lt;textureName&gt;.mat or &lt;modelFileName&gt;-&lt;materialName&gt;.mat material name.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialSearch">
      <summary>
        <para>Material search options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.Everywhere">
      <summary>
        <para>Search in all project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.Local">
      <summary>
        <para>Search in local Materials folder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.RecursiveUp">
      <summary>
        <para>Recursive-up search in Materials folders.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMeshCompression">
      <summary>
        <para>Mesh compression options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.High">
      <summary>
        <para>High amount of mesh compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Low">
      <summary>
        <para>Low amount of mesh compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Medium">
      <summary>
        <para>Medium amount of mesh compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Off">
      <summary>
        <para>No mesh compression (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormalCalculationMode">
      <summary>
        <para>Normal generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AngleWeighted">
      <summary>
        <para>The normals are weighted by the vertex angle on each face.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AreaAndAngleWeighted">
      <summary>
        <para>The normals are weighted by both the face area and the vertex angle on each face.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AreaWeighted">
      <summary>
        <para>The normals are weighted by the face area.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.Unweighted">
      <summary>
        <para>The normals are not weighted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.Unweighted_Legacy">
      <summary>
        <para>The normals are unweighted. This option uses the legacy algorithm for handling hard edges.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormals">
      <summary>
        <para>Normal generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.Calculate">
      <summary>
        <para>Calculate vertex normals.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.Import">
      <summary>
        <para>Import vertex normals from model file (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.None">
      <summary>
        <para>Do not import vertex normals.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormalSmoothingSource">
      <summary>
        <para>Source of smoothing information for calculation of normals in ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.FromAngle">
      <summary>
        <para>Use the angle between adjacent faces to determine if an edge is smooth or hard.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.FromSmoothingGroups">
      <summary>
        <para>Use smoothing groups to determine which edges are smooth and which are hard.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.None">
      <summary>
        <para>Do not create hard edges.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.PreferSmoothingGroups">
      <summary>
        <para>Use smoothing groups if they are present in the Model file, otherwise use angle (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterSecondaryUVMarginMethod">
      <summary>
        <para>Methods for handling margins during lightmap UV generation in ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSecondaryUVMarginMethod.Calculate">
      <summary>
        <para>Calculate suitable lightmap UV margins based on expected lightmap resolution and object scale.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSecondaryUVMarginMethod.Manual">
      <summary>
        <para>Specify pack margin manually.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterSkinWeights">
      <summary>
        <para>Skin weights options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSkinWeights.Custom">
      <summary>
        <para>Import a custom number of bones per vertex.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSkinWeights.Standard">
      <summary>
        <para>Import the standard number of bones per vertex (currently 4).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterTangents">
      <summary>
        <para>Vertex tangent generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateLegacy">
      <summary>
        <para>Calculate tangents with legacy algorithm.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateLegacyWithSplitTangents">
      <summary>
        <para>Calculate tangents with legacy algorithm, with splits across UV charts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateMikk">
      <summary>
        <para>Calculate tangents using MikkTSpace (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.Import">
      <summary>
        <para>Import vertex tangents from model file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.None">
      <summary>
        <para>Do not import vertex tangents.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterTangentSpaceMode">
      <summary>
        <para>Tangent space generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.Calculate">
      <summary>
        <para>Calculate tangents.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.Import">
      <summary>
        <para>Import normals/tangents from file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.None">
      <summary>
        <para>Strip normals/tangents.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MonoScript">
      <summary>
        <para>Representation of Script assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MonoScript.FromMonoBehaviour(UnityEngine.MonoBehaviour)">
      <summary>
        <para>Returns the MonoScript object containing specified MonoBehaviour.</para>
      </summary>
      <param name="behaviour">The MonoBehaviour whose MonoScript should be returned.</param>
    </member>
    <member name="M:UnityEditor.MonoScript.FromScriptableObject(UnityEngine.ScriptableObject)">
      <summary>
        <para>Returns the MonoScript object containing specified ScriptableObject.</para>
      </summary>
      <param name="scriptableObject">The ScriptableObject whose MonoScript should be returned.</param>
    </member>
    <member name="M:UnityEditor.MonoScript.GetClass">
      <summary>
        <para>Returns the System.Type object of the class implemented by this script.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MouseCursor">
      <summary>
        <para>Custom mouse cursor shapes used with EditorGUIUtility.AddCursorRect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Arrow">
      <summary>
        <para>Normal pointer arrow.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ArrowMinus">
      <summary>
        <para>Arrow with the minus symbol next to it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ArrowPlus">
      <summary>
        <para>Arrow with the plus symbol next to it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.CustomCursor">
      <summary>
        <para>The current user defined cursor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.FPS">
      <summary>
        <para>Cursor with an eye and stylized arrow keys for FPS navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Link">
      <summary>
        <para>Arrow with a Link badge (for assigning pointers).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.MoveArrow">
      <summary>
        <para>Arrow with the move symbol next to it for the sceneview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Orbit">
      <summary>
        <para>Cursor with an eye for orbit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Pan">
      <summary>
        <para>Cursor with a dragging hand for pan.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeHorizontal">
      <summary>
        <para>Horizontal resize arrows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeUpLeft">
      <summary>
        <para>Resize up-Left for window edges.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeUpRight">
      <summary>
        <para>Resize up-right for window edges.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeVertical">
      <summary>
        <para>Vertical resize arrows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.RotateArrow">
      <summary>
        <para>Arrow with the rotate symbol next to it for the sceneview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ScaleArrow">
      <summary>
        <para>Arrow with the scale symbol next to it for the sceneview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SlideArrow">
      <summary>
        <para>Arrow with small arrows for indicating sliding at number fields.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SplitResizeLeftRight">
      <summary>
        <para>Left-Right resize arrows for window splitters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SplitResizeUpDown">
      <summary>
        <para>Up-Down resize arrows for window splitters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Text">
      <summary>
        <para>Text cursor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Zoom">
      <summary>
        <para>Cursor with a magnifying glass for zoom.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClient">
      <summary>
        <para>ChannelClient is a WebSocket client that connects to Unity's ChannelService, which is a WebSocket server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.channelName">
      <summary>
        <para>The name of the channel this ChannelClient is connected to. The name matches the route of the URL used to connect to Unity's ChannelService. For example, 127.0.0.1:8928/&lt;my Channel Name&gt;.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.clientId">
      <summary>
        <para>The channel ID, which essentially a hash of the channel name. See ChannelService.ChannelNameToId.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.isAutoTick">
      <summary>
        <para>Specifies whether Unity processes (ticks) this ChannelClient's incoming and outgoing messages automatically, or the user processes (ticks) them manually, either in the main thread or a dedicated thread.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Close">
      <summary>
        <para>Closes the ChannelClient. This closes the WebSocket client but not the Channel in the ChannelService. Other ChannelClients can still connect on the same Channel.</para>
      </summary>
      <param name="channelName">The name of the channel to close.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Close(System.String)">
      <summary>
        <para>Closes the ChannelClient. This closes the WebSocket client but not the Channel in the ChannelService. Other ChannelClients can still connect on the same Channel.</para>
      </summary>
      <param name="channelName">The name of the channel to close.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo">
      <summary>
        <para>Gets the ChannelClientInfo for a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel to get information about.</param>
      <param name="clientId">The ID of the channel to get information about.</param>
      <returns>
        <para>A structure that describes the channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo(System.String)">
      <summary>
        <para>Gets the ChannelClientInfo for a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel to get information about.</param>
      <param name="clientId">The ID of the channel to get information about.</param>
      <returns>
        <para>A structure that describes the channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo(System.Int32)">
      <summary>
        <para>Gets the ChannelClientInfo for a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel to get information about.</param>
      <param name="clientId">The ID of the channel to get information about.</param>
      <returns>
        <para>A structure that describes the channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientList">
      <summary>
        <para>Gets information for all ChannelClients running on a single instance of Unity.</para>
      </summary>
      <returns>
        <para>A list of ChannelClientInfo for all clients.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetOrCreateClient(System.String)">
      <summary>
        <para>Creates a new ChannelClient on a specific channel. If a client already exists, this method gets the client.</para>
      </summary>
      <param name="channelName">The name of the channel to open. This matches the last part of a WebSocket URL. For example, "127.0.0.1:9090/&lt;channelName&gt;".</param>
      <returns>
        <para>Instance of the newly-created or existing ChannelClient.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.IsConnected">
      <summary>
        <para>Checks whether the ChannelClient connected to a ChannelService.</para>
      </summary>
      <returns>
        <para>Return true if connected, and false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.NewRequestId">
      <summary>
        <para>Creates a unique request ID for this ChannelClient in this instance of Unity. For more information about requests, see ChannelClient.Request.</para>
      </summary>
      <param name="clientId">The ChannelClient ID to generate the request from.</param>
      <returns>
        <para>The request ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.NewRequestId(System.Int32)">
      <summary>
        <para>Creates a unique request ID for this ChannelClient in this instance of Unity. For more information about requests, see ChannelClient.Request.</para>
      </summary>
      <param name="clientId">The ChannelClient ID to generate the request from.</param>
      <returns>
        <para>The request ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.RegisterMessageHandler(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Registers a new handler on a specific channel. The new handler is called whenever a message is sent to the ChannelClient.</para>
      </summary>
      <param name="handler">A handler for all incoming messages on a specific channel.</param>
      <returns>
        <para>An action that, when invoked, unregisters the ChannelClient handler (See ChannelClient.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.RegisterMessageHandler(System.Action`1&lt;System.Byte[]&gt;)">
      <summary>
        <para>Registers a new handler on a specific channel. The new handler is called whenever a message is sent to the ChannelClient.</para>
      </summary>
      <param name="handler">A handler for all incoming messages on a specific channel.</param>
      <returns>
        <para>An action that, when invoked, unregisters the ChannelClient handler (See ChannelClient.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.String)">
      <summary>
        <para>Sends an ASCII or binary message to the ChannelService. Depending on how the channel's handler processes the message, it may also be sent to other connections.</para>
      </summary>
      <param name="data">Data to send.</param>
      <param name="connectionId">The connection ID of the client sending the data.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.Byte[])">
      <summary>
        <para>Sends an ASCII or binary message to the ChannelService. Depending on how the channel's handler processes the message, it may also be sent to other connections.</para>
      </summary>
      <param name="data">Data to send.</param>
      <param name="connectionId">The connection ID of the client sending the data.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.Int32,System.Byte[])">
      <summary>
        <para>Sends an ASCII or binary message to the ChannelService. Depending on how the channel's handler processes the message, it may also be sent to other connections.</para>
      </summary>
      <param name="data">Data to send.</param>
      <param name="connectionId">The connection ID of the client sending the data.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Shutdown">
      <summary>
        <para>Closes all ChannelClients in this instance of Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Start(System.Boolean)">
      <summary>
        <para>Starts an existing ChannelClient so it listens to incoming and outgoing messages.</para>
      </summary>
      <param name="autoTick">Specifies whether Unity processes (ticks) this ChannelClient's incoming and outgoing messages automatically, or the user processes (ticks) them manually, either in the main thread or a dedicated thread.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Stop">
      <summary>
        <para>Stops a specific ChannelClient from listening for new messages. This is different than ChannelClient.Close because you can restart the channel client using ChannelClient.Start.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Tick">
      <summary>
        <para>Ticks the ChannelClient. When you call this method, it checks whether any incoming messages from the server need to be processed, and whether any outgoing messages need to be sent to the server.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.UnregisterMessageHandler(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Unregisters a specific channel handler from a ChannelClient.</para>
      </summary>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.UnregisterMessageHandler(System.Action`1&lt;System.Byte[]&gt;)">
      <summary>
        <para>Unregisters a specific channel handler from a ChannelClient.</para>
      </summary>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClientInfo">
      <summary>
        <para>A structure that contains all of a ChannelClient's connection data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.clientId">
      <summary>
        <para>The channel's channel ID (see ChannelClient.clientId).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.connectionId">
      <summary>
        <para>The ChannelClient's connection ID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.name">
      <summary>
        <para>The ChannelClient's name (see ChannelClient.channelName. This matches the route of the URL connecting to the ChannelService. For example, "127.0.0.1:9292/&lt;channelName&gt;".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClientScope">
      <summary>
        <para>Scope that can be use to open a channel client on a specific channel and close the channel when the scope ends.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientScope.client">
      <summary>
        <para>Get the Chanel client of this scope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClientScope.#ctor(System.Boolean,System.String,System.Action`1&lt;System.String&gt;,System.Boolean)">
      <summary>
        <para>Create a new Channel Client scope.</para>
      </summary>
      <param name="autoTick">If true, starts the channel client in auto tick mode.</param>
      <param name="channelName">Name of the channel to open.</param>
      <param name="handler">Handler to process message on the channel.</param>
      <param name="closeClientOnExit">If true, closes the client on exit.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClientScope.#ctor(System.Boolean,System.String,System.Action`1&lt;System.Byte[]&gt;,System.Boolean)">
      <summary>
        <para>Create a new Channel Client scope.</para>
      </summary>
      <param name="autoTick">If true, starts the channel client in auto tick mode.</param>
      <param name="channelName">Name of the channel to open.</param>
      <param name="handler">Handler to process message on the channel.</param>
      <param name="closeClientOnExit">If true, closes the client on exit.</param>
    </member>
    <member name="T:UnityEditor.MPE.ChannelInfo">
      <summary>
        <para>A structure that contains the connection information of a Channel in ChannelService.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelInfo.id">
      <summary>
        <para>The ID of a specific channel. Normally this is the hash of the channel name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelInfo.name">
      <summary>
        <para>The name of the channel. This matches the route of the URL that connects to the ChannelService. For example, "127.0.0.1:9292/&lt;channelName&gt;".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelScope">
      <summary>
        <para>Scope that cna be use to open a channel and that will close the channel when the scope ends.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelService">
      <summary>
        <para>The ChannelService encapsulates a WebSocket server running in Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Broadcast(System.Int32,System.Byte[])">
      <summary>
        <para>Sends a message to all  of a specific channel's ChannelClient connections.</para>
      </summary>
      <param name="channelId">The ID of the channel to send the message to.</param>
      <param name="data">The message to send. It can be binary or UTF8.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Broadcast(System.Int32,System.String)">
      <summary>
        <para>Sends a message to all  of a specific channel's ChannelClient connections.</para>
      </summary>
      <param name="channelId">The ID of the channel to send the message to.</param>
      <param name="data">The message to send. It can be binary or UTF8.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.BroadcastBinary(System.Int32,System.Byte[])">
      <summary>
        <para>Sends a message to all  of a specific channel's ChannelClient connections.</para>
      </summary>
      <param name="channelId">The ID of the channel to send the message to.</param>
      <param name="data">The binary data to send.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.ChannelNameToId(System.String)">
      <summary>
        <para>Closes a specific channel and all connections to that channel.</para>
      </summary>
      <param name="channelName">The ChannelName.</param>
      <returns>
        <para>The ChannelId.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.CloseChannel(System.String)">
      <summary>
        <para>Closes a specific channel and all connections to that channel.</para>
      </summary>
      <param name="channelName">The name of the channel to close.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetAddress">
      <summary>
        <para>Gets the address of the ChannelService. This is always a local address. For example, 127.0.0.1.</para>
      </summary>
      <returns>
        <para>The address where the ChannelService listens to new connections.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetChannelClientList">
      <summary>
        <para>Gets a list of all channel clients connected to the ChannelService.</para>
      </summary>
      <returns>
        <para>A list that contains the ChannelInfo for every channel client.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetChannelList">
      <summary>
        <para>Gets a list of channels open in the ChannelService. By default the ChannelService always has a "status" channel and an "events" channel.</para>
      </summary>
      <returns>
        <para>A list that contains the ChannelInfo for every open channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetOrCreateChannel(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Gets or creates a new channel.</para>
      </summary>
      <param name="channelName">The name of the channel to retrieve.</param>
      <param name="handler">The channel handler to register.</param>
      <returns>
        <para>This action can be invoked to unregister the handler from the channel (see ChannelService.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetPort">
      <summary>
        <para>Retrieves the port where the ChannelService runs. This port is chosen randomly when the ChannelService first starts. Alternatively you can specify the port from the command line, using the --ump-channel-service-port &lt;portNumber&gt; switch.</para>
      </summary>
      <returns>
        <para>The port number of the ChannelService.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.IsRunning">
      <summary>
        <para>Checks whether the ChannelService is running and listening to new connections..</para>
      </summary>
      <returns>
        <para>True if the service has started and false if it hasn't.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.RegisterMessageHandler(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Registers a handler to process all incoming messages on a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel.</param>
      <param name="handler">The handler that processes messages.</param>
      <returns>
        <para>An action that you can use to unregister the handler from message processing (see ChannelService.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Send(System.Int32,System.Byte[])">
      <summary>
        <para>Sends a message to a specific connection. The message can be binary or UTF8.</para>
      </summary>
      <param name="connectionId">The connection ID. This matches ChannelClientInfo.channelClientId.</param>
      <param name="data">Data to send to the connected client.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Send(System.Int32,System.String)">
      <summary>
        <para>Sends a message to a specific connection. The message can be binary or UTF8.</para>
      </summary>
      <param name="connectionId">The connection ID. This matches ChannelClientInfo.channelClientId.</param>
      <param name="data">Data to send to the connected client.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Start">
      <summary>
        <para>Starts the ChannelService. After you start the ChannelService it listens to connection at the URL provided by: &lt;ChannelService Address&gt;:&lt;ChannelServicePort&gt;&lt;channelName&gt;, for example, 127.0.0.1:9976events. See ChannelService.GetAddress and ChannnelService.GetPort.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Stop">
      <summary>
        <para>Stops the ChannelService from listening to connections, and closes any already established connections.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.UnregisterMessageHandler(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Unregisters a specific handler from a Channel.</para>
      </summary>
      <param name="channelName">The channel to stop processing messages on.</param>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="T:UnityEditor.MPE.EventDataSerialization">
      <summary>
        <para>The Serialization type for sending a message, with arguments, using the EventService. For more information about argument serialization, see ChannelService.Broadcast and ChannelService.Emit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.EventDataSerialization.JsonUtility">
      <summary>
        <para>Use JsonUtility.ToJson to serialize a message argument. Additional metadata is added to the message to specify which type to convert the JSON to when it is received.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.EventDataSerialization.StandardJson">
      <summary>
        <para>Use normal JSON to send a message using the [[EventService]. The receiving handler gets JSON objects (Dictionary&lt;string, object&gt;, List&lt;object&gt;, primitive types) as arguments of his ChannelHandler.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.EventService">
      <summary>
        <para>The EventService is a singleton implementation of a ChannelClient that runs on all instances of Unity. It is connected to the "events" channel and allows a Unity instance to send JSON messages to other EventServices in external process, or other instances of Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.EventService.isConnected">
      <summary>
        <para>The EventService connected to the ChannelService's "events" channel.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.CancelRequest(System.String,System.String)">
      <summary>
        <para>Checks whether there is a pending request for a specific event and, if there is, cancels it. See EventService.Request for more details on Request.</para>
      </summary>
      <param name="eventType">The event to cancel.</param>
      <param name="message">The error message sent to the pending request.</param>
      <returns>
        <para>Returns true if a pending request was found and cancelled false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Clear">
      <summary>
        <para>Clear all pending Requests.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Close">
      <summary>
        <para>Closes the EventService, terminates connections to the ChannelService, and ensures that no more handlers are processed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Emit(System.String,System.Object,System.Int32,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a fire-and-forget message to all ChannelClients connected to the "events" route.</para>
      </summary>
      <param name="eventType">The message's type name.</param>
      <param name="args">The arguments sent with the message.</param>
      <param name="targetId">When you send the event to a specific connection, this is the connection ID. By default it is set to -1, which sends the message to all other EventServices.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Emit(System.String,System.Object[],System.Int32,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a fire-and-forget message to all ChannelClients connected to the "events" route.</para>
      </summary>
      <param name="eventType">The message's type name.</param>
      <param name="args">The arguments sent with the message.</param>
      <param name="targetId">When you send the event to a specific connection, this is the connection ID. By default it is set to -1, which sends the message to all other EventServices.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.IsRequestPending(System.String)">
      <summary>
        <para>Checks whether a request is pending on a specific event. For more information about Request, see EventService.Request.</para>
      </summary>
      <param name="eventType">Event type name.</param>
      <returns>
        <para>True if there is a pending request for this event. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Log(System.String)">
      <summary>
        <para>Sends a log message to the ChannelService. Log messages are printed to the Console window.</para>
      </summary>
      <param name="msg">The message to send.</param>
      <param name="logType">The type of the message (i.e. Info, Warning or Error).</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Log(System.String,UnityEngine.LogType)">
      <summary>
        <para>Sends a log message to the ChannelService. Log messages are printed to the Console window.</para>
      </summary>
      <param name="msg">The message to send.</param>
      <param name="logType">The type of the message (i.e. Info, Warning or Error).</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.RegisterEventHandler(System.String,System.Action`2&lt;System.String,System.Object[]&gt;)">
      <summary>
        <para>Registers a handler for a specific event type. The handler is called whenever a message of the specified type is sent. Messages are sent using EventService.Emit or EventService.Request.</para>
      </summary>
      <param name="eventType">The event type name.</param>
      <param name="handler">The handler.</param>
      <returns>
        <para>An action that, when invoked, unregisters the handler (see EventService.Off).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.RegisterEventHandler(System.String,System.Func`3&lt;System.String,System.Object[],System.Object&gt;)">
      <summary>
        <para>Registers a handler for a specific event type. The handler is called whenever a message of the specified type is sent. Messages are sent using EventService.Emit or EventService.Request.</para>
      </summary>
      <param name="eventType">The event type name.</param>
      <param name="handler">The handler.</param>
      <returns>
        <para>An action that, when invoked, unregisters the handler (see EventService.Off).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Request(System.String,System.Action`2&lt;System.Exception,System.Object[]&gt;,System.Object,System.Int64,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a request to all connected clients on the "events" channel.</para>
      </summary>
      <param name="eventType">The request's event type name.</param>
      <param name="promiseHandler">The handler called when the Request is either fulfilled or cancelled, or times out.</param>
      <param name="args">Arguments sent with the request event.</param>
      <param name="timeoutInMs">The timeout value in milliseconds. After this amount of time passes the Request is considered to be cancelled.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Request(System.String,System.Action`2&lt;System.Exception,System.Object[]&gt;,System.Object[],System.Int64,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a request to all connected clients on the "events" channel.</para>
      </summary>
      <param name="eventType">The request's event type name.</param>
      <param name="promiseHandler">The handler called when the Request is either fulfilled or cancelled, or times out.</param>
      <param name="args">Arguments sent with the request event.</param>
      <param name="timeoutInMs">The timeout value in milliseconds. After this amount of time passes the Request is considered to be cancelled.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Start">
      <summary>
        <para>Starts the EventService so it listens to new messages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Tick">
      <summary>
        <para>Ticks the EventService. This processes all incoming and outgoing messages. By default, the EventService is ticked on each EditorApplication.update.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.UnregisterEventHandler(System.String,System.Func`3&lt;System.String,System.Object[],System.Object&gt;)">
      <summary>
        <para>Unregisters a handler from a specific event.</para>
      </summary>
      <param name="eventType">The event to unregister from.</param>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="T:UnityEditor.MPE.ProcessEvent">
      <summary>
        <para>Enum that represents the events a RoleProvider can receive.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.AfterDomainReload">
      <summary>
        <para>Domain reload occurs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Create">
      <summary>
        <para>A new Process is created.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Initialize">
      <summary>
        <para>A new Process is initialized.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Shutdown">
      <summary>
        <para>A new Process is about to shut down.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ProcessLevel">
      <summary>
        <para>The type of the current process. It can be a Unity master instance, or a slave instance connected to the master.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessLevel.Master">
      <summary>
        <para>The current process is a master instance of UnityEditor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessLevel.Slave">
      <summary>
        <para>The current process is a slave instance of UnityEditor that is connected to a master instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ProcessService">
      <summary>
        <para>*This is an experimental feature.* The ProcessService allows you to start slave instance of UnityEditor, opened to the same Project as the master instance, with a specific RoleProviderAttribute.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ProcessService.level">
      <summary>
        <para>The ProcessLevel of the running instance of UnityEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ProcessService.roleName">
      <summary>
        <para>The role name of the running UnityEditor process. For more information about how to register handlers for a specific process role, see RoleProviderAttribute. For a UnityEditor process of ProcessLevel Master, the roleName is always empty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.DisableProfileConnection">
      <summary>
        <para>Closes the Profiler connection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.EnableProfileConnection(System.String)">
      <summary>
        <para>Enables a connection to the Profiler. The standalone Profiler uses this method.</para>
      </summary>
      <param name="dataPath">Where to save profiling data. Normally this is set to Application.dataPath.</param>
      <returns>
        <para>Greater than 0 if successful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.GetSlaveProcessState(System.Int32)">
      <summary>
        <para>Gets the ProcessState of a given instance of UnityEditor.</para>
      </summary>
      <param name="pid">The process ID.</param>
      <returns>
        <para>The state of the queried process.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.HasCapability(System.String)">
      <summary>
        <para>Checks whether the current process has a given capability.</para>
      </summary>
      <param name="capName">The capability name.</param>
      <returns>
        <para>True if the process has the capability. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.IsChannelServiceStarted">
      <summary>
        <para>Checks whether the ChannelService is already started.</para>
      </summary>
      <returns>
        <para>True if the ChannelService is started. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.LaunchSlave(System.String,System.String[])">
      <summary>
        <para>Launches a slave instance of UnityEditor on the same project as the master instance.</para>
      </summary>
      <param name="roleName">The name that corresponds to the RoleProviderAttribute of the process to start.</param>
      <param name="keyValuePairs">Arguments passed to the slave process.</param>
      <returns>
        <para>The process ID of the slave process. A value of 0 means the slave process could not be started.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.ReadParameter(System.String)">
      <summary>
        <para>A utility function to read command line arguments passed to the current process.</para>
      </summary>
      <param name="paramName">Specific name of a command line parameter.</param>
      <returns>
        <para>The parameter value. If empty, the parameter wasn't used on the command line.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.MPE.ProcessService.SlaveProcessExitedEvent(System.Action`2&lt;System.Int32,UnityEditor.MPE.ProcessState&gt;)">
      <summary>
        <para>An event triggered in a master instance of UnityEditor when you start a slave instance with ProcessService.LaunchSlave exit.</para>
      </summary>
      <param name="value">The first parameter is the process ID (PID) of the slave process that exited. The second parameter is the ProcessState of the slave process.</param>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.TerminateSlave(System.Int32)">
      <summary>
        <para>Terminates a slave process.</para>
      </summary>
      <param name="pid">The process ID of the slave process to terminate.</param>
    </member>
    <member name="T:UnityEditor.MPE.ProcessState">
      <summary>
        <para>Describes the state of a specifc UnityEditor process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.FinishedSuccessfully">
      <summary>
        <para>The queried UnityEditor process ended successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.FinishedWithError">
      <summary>
        <para>The queried UnityEditor process finished with an error.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.Running">
      <summary>
        <para>The queried UnityEditor process is running.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.UnknownProcess">
      <summary>
        <para>The queried UnityEditor process is unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.RoleProviderAttribute">
      <summary>
        <para>An attribute used to decorate function that defines how a slave process can interact with a main instance of Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.eventType">
      <summary>
        <para>The event that the process triggered.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.level">
      <summary>
        <para>The process level (either master or slave) that the handler is registered on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.name">
      <summary>
        <para>The name of the RoleProvider. For example, StandaloneProfiler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.RoleProviderAttribute.#ctor(System.String,UnityEditor.MPE.ProcessEvent)">
      <summary>
        <para>Constructor for a RoleProviderAttribute. Allows you to register a handler that is triggered when a specific ProcessEvent is triggered in a UnityEditor process of a specific ProcessLevel.</para>
      </summary>
      <param name="name">The name of the RoleProvider. For example, StandaloneProfiler.</param>
      <param name="eventType">The event that the process triggered.</param>
      <param name="level">The process level (either master or slave) that this handler should be registered on.</param>
    </member>
    <member name="M:UnityEditor.MPE.RoleProviderAttribute.#ctor(UnityEditor.MPE.ProcessLevel,UnityEditor.MPE.ProcessEvent)">
      <summary>
        <para>Constructor for a RoleProviderAttribute. Allows you to register a handler that is triggered when a specific ProcessEvent is triggered in a UnityEditor process of a specific ProcessLevel.</para>
      </summary>
      <param name="name">The name of the RoleProvider. For example, StandaloneProfiler.</param>
      <param name="eventType">The event that the process triggered.</param>
      <param name="level">The process level (either master or slave) that this handler should be registered on.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.ConnectedPlayer">
      <summary>
        <para>Information of the connected player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.ConnectedPlayer.name">
      <summary>
        <para>The name of the connected player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.ConnectedPlayer.playerId">
      <summary>
        <para>The ID of the player connected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.EditorConnection">
      <summary>
        <para>Handles the connection from the Editor to the Player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.EditorConnection.ConnectedPlayers">
      <summary>
        <para>A list of the connected Players.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.DisconnectAll">
      <summary>
        <para>Disconnects all of the active connections between the Editor and the Players.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Initialize">
      <summary>
        <para>Initializes the EditorConnection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Register(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Registers a callback on a certain message ID.</para>
      </summary>
      <param name="messageId">The message ID that invokes the callback when received by the Editor.</param>
      <param name="callback">Action that is executed when a message with ID messageId is received by the Editor.
The callback includes the data that is sent from the Player, and the Player's ID.
The Player ID is used to distinguish between multiple Players connected to the same Editor.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.RegisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Registers a callback, executed when a new Player connects to the Editor.</para>
      </summary>
      <param name="callback">Action called when a new Player connects, with the Player ID of the Player.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.RegisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Registers a callback on a Player when that Player disconnects.</para>
      </summary>
      <param name="callback">The Action that is called when the Player with the given Player ID disconnects.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Send(System.Guid,System.Byte[],System.Int32)">
      <summary>
        <para>Sends data to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0.</param>
      <param name="data"></param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Send(System.Guid,System.Byte[])">
      <summary>
        <para>Sends data to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0.</param>
      <param name="data"></param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.TrySend(System.Guid,System.Byte[],System.Int32)">
      <summary>
        <para>Attempts to send data from the Editor to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0..</param>
      <param name="data"></param>
      <returns>
        <para>Returns true when the Editor sends data successfully, and false when there is no space in the socket ring buffer or sending fails.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.TrySend(System.Guid,System.Byte[])">
      <summary>
        <para>Attempts to send data from the Editor to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0..</param>
      <param name="data"></param>
      <returns>
        <para>Returns true when the Editor sends data successfully, and false when there is no space in the socket ring buffer or sending fails.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Unregister(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Deregisters a registered callback.</para>
      </summary>
      <param name="messageId">Message ID associated with the callback that you wish to deregister.</param>
      <param name="callback">The Action callback you wish to deregister.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.UnregisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Unregisters the connection callback.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.UnregisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Unregisters the disconnection callback.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUI">
      <summary>
        <para>This class contains methods to draw IMGUI Editor UI that relates to the Player Connection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUI.ConnectionTargetSelectionDropdown(UnityEngine.Rect,UnityEngine.Networking.PlayerConnection.IConnectionState,UnityEngine.GUIStyle)">
      <summary>
        <para>Display a drop-down button and menu for the user to choose and establish a connection to a Player.</para>
      </summary>
      <param name="rect">Where to draw the drop-down button.</param>
      <param name="state">The state for the connection that is used in the EditorWindow displaying this drop-down. Use Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState to get a state in OnEnable and remember to dispose of that state in OnDisable.</param>
      <param name="style">Define the GUIStyle the drop-down button should be drawn in. A default drop-down button will be drawn if no style is specified.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUILayout">
      <summary>
        <para>This class contains methods to draw and automatically layout IMGUI Editor UI that relates to the Player Connection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUILayout.ConnectionTargetSelectionDropdown(UnityEngine.Networking.PlayerConnection.IConnectionState,UnityEngine.GUIStyle)">
      <summary>
        <para>Display a drop-down button and menu for the user to choose and establish a connection to a Player.</para>
      </summary>
      <param name="state">The state of the connection that the EditorWindow displaying the drop-down uses. Use Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState to get a state in OnEnable. Make sure you dispose of that state in OnDisable to avoid leaking it.</param>
      <param name="style">Define the GUIStyle the drop-down button should be drawn in. A default drop-down button will be drawn if non is specified.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUIUtility">
      <summary>
        <para>Miscellaneous helper methods for Networking.PlayerConnection.PlayerConnectionGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState(UnityEditor.EditorWindow,System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>This method generates a state tracking object for establishing and displaying an Editor to Player Connection.</para>
      </summary>
      <param name="parentWindow">The EditorWindow that will use the connection.</param>
      <param name="connectedCallback">A callback that is fired whenever a user-initiated connection-attempt succeeds.</param>
      <returns>
        <para>Returns the unserialized state of the connection to a Player, which is used in Networking.PlayerConnection.PlayerConnectionGUI.ConnectionTargetSelectionDropdown or Networking.PlayerConnection.PlayerConnectionGUILayout.ConnectionTargetSelectionDropdown. The returned connection state object contains information on what target is connected to the Player, and what targets are available.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.NormalMapEncoding">
      <summary>
        <para>Describes the encoding of normal maps.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.NormalMapEncoding.DXT5nm">
      <summary>
        <para>Two-component DXT5nm-style normal map encoding.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.NormalMapEncoding.XYZ">
      <summary>
        <para>Three-component normal map encoding.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectChangeEvents">
      <summary>
        <para>Exposes events that allow you to track undoable changes to objects in the editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ObjectChangeEvents.changesPublished(UnityEditor.ObjectChangeEvents/ObjectChangeEventsHandler)">
      <summary>
        <para>Event that is raised once per frame if any undoable changes have been recorded.</para>
      </summary>
      <param name="value">The stream of events that have been recorded since the last frame.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeEvents.ObjectChangeEventsHandler">
      <summary>
        <para>The delegate used for the event publishing the object changes.</para>
      </summary>
      <param name="stream">The stream of events that have been recorded since the last frame.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeEventStream">
      <summary>
        <para>Represents a stream of events that describes the changes applied to objects in memory over the course of a frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.isCreated">
      <summary>
        <para>Indicates whether the ObjectChangeEventStream has an allocated memory buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.length">
      <summary>
        <para>The number of events in the stream.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectChangeEventStream.Builder">
      <summary>
        <para>Provides a way to construct an instance of ObjectChangeEventStream.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.Builder.eventCount">
      <summary>
        <para>The number of events that have been recorded in this instance so far.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.#ctor(Unity.Collections.Allocator)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="allocator">The allocator to use.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.Dispose">
      <summary>
        <para>Releases the memory associated with this instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeAssetObjectPropertiesEvent(UnityEditor.ChangeAssetObjectPropertiesEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeAssetObjectPropertiesEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectOrComponentPropertiesEvent(UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectOrComponentPropertiesEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectParentEvent(UnityEditor.ChangeGameObjectParentEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectParentEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectStructureEvent(UnityEditor.ChangeGameObjectStructureEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectStructureEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectStructureHierarchyEvent(UnityEditor.ChangeGameObjectStructureHierarchyEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectStructureHierarchyEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeSceneEvent(UnityEditor.ChangeSceneEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeSceneEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushCreateAssetObjectEvent(UnityEditor.CreateAssetObjectEventArgs&amp;)">
      <summary>
        <para>Adds an CreateAssetObjectEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushCreateGameObjectHierarchyEvent(UnityEditor.CreateGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Adds an CreateGameObjectHierarchyEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushDestroyAssetObjectEvent(UnityEditor.DestroyAssetObjectEventArgs&amp;)">
      <summary>
        <para>Adds an DestroyAssetObjectEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushDestroyGameObjectHierarchyEvent(UnityEditor.DestroyGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Adds an DestroyGameObjectHierarchyEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushUpdatePrefabInstancesEvent(UnityEditor.UpdatePrefabInstancesEventArgs&amp;)">
      <summary>
        <para>Adds an UpdatePrefabInstancesEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.ToStream(Unity.Collections.Allocator)">
      <summary>
        <para>Copies the data collected in this instance into a new ObjectChangeEventStream instance.</para>
      </summary>
      <param name="allocator">The allocator to use for the new stream.</param>
      <returns>
        <para>A new stream that contains all events recorded in this instance at the time of the function call.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Clone(Unity.Collections.Allocator)">
      <summary>
        <para>Creates a copy of this stream with the specified allocator.</para>
      </summary>
      <param name="allocator">The allocator to use to allocate the memory for the copy.</param>
      <returns>
        <para>A copy of the stream that contains the same events, but in a separate memory lcoation.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Dispose">
      <summary>
        <para>Releases the memory associated with this stream.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeAssetObjectPropertiesEvent(System.Int32,UnityEditor.ChangeAssetObjectPropertiesEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeAssetObjectPropertiesEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectOrComponentPropertiesEvent(System.Int32,UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeAssetObjectPropertiesEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectParentEvent(System.Int32,UnityEditor.ChangeGameObjectParentEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeGameObjectParentEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectStructureEvent(System.Int32,UnityEditor.ChangeGameObjectStructureEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeGameObjectStructureEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectStructureHierarchyEvent(System.Int32,UnityEditor.ChangeGameObjectStructureHierarchyEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeGameObjectStructureHierarchyEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeSceneEvent(System.Int32,UnityEditor.ChangeSceneEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeSceneEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data"></param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetCreateAssetObjectEvent(System.Int32,UnityEditor.CreateAssetObjectEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a CreateAssetObjectEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetCreateGameObjectHierarchyEvent(System.Int32,UnityEditor.CreateGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a CreateGameObjectHierarchyEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetDestroyAssetObjectEvent(System.Int32,UnityEditor.DestroyAssetObjectEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a DestroyAssetObjectEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetDestroyGameObjectHierarchyEvent(System.Int32,UnityEditor.DestroyGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a DestroyGameObjectHierarchyEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetEventType(System.Int32)">
      <summary>
        <para>Returns the type of the event at the specified index.</para>
      </summary>
      <param name="eventIdx">The index of the event whose type should be returned.</param>
      <returns>
        <para>The type of the event at the specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetUpdatePrefabInstancesEvent(System.Int32,UnityEditor.UpdatePrefabInstancesEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a UpdatePrefabInstancesEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeKind">
      <summary>
        <para>This enumeration describes the different kind of changes that can be tracked in an ObjectChangeEventStream. Each event has a corresponding type in ObjectChangeEvents.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeAssetObjectProperties">
      <summary>
        <para>A change of this type indicates that a property of an asset object in memory has changed. This happens for example when Undo.RecordObject is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectOrComponentProperties">
      <summary>
        <para>A change of this type indicates that a property of a GameObject or Component has changed. This happens for example when Undo.RecordObject is used with an instance of a Component.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectParent">
      <summary>
        <para>A change of this type indicates that the parent of a GameObject has changed. This happens when Undo.SetTransformParent or SceneManager.MoveGameObjectToScene is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectStructure">
      <summary>
        <para>A change of this type indicates that the structure of a GameObject has changed. This happens when a component is added to or removed from the GameObject using Undo.AddComponent or Undo.DestroyObjectImmediate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectStructureHierarchy">
      <summary>
        <para>A change of this type indicates that the structure of a GameObject has changed and any GameObject in the hierarchy below it might have changed. This happens for example when Undo.RegisterFullObjectHierarchyUndo is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeScene">
      <summary>
        <para>A change of this type indicates that an open scene has been changed ("dirtied") without any more specific information available. This happens for example when EditorSceneManager.MarkSceneDirty is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.CreateAssetObject">
      <summary>
        <para>A change of this type indicates that an asset object has been created. This happens for example when Undo.RegisterCreatedObjectUndo is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.CreateGameObjectHierarchy">
      <summary>
        <para>A change of this type indicates that a GameObject has been created, possibly with additional objects below it in the hierarchy. This happens for example when Undo.RegisterCreatedObjectUndo is used with a GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.DestroyAssetObject">
      <summary>
        <para>A change of this type indicates that an asset object has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.DestroyGameObjectHierarchy">
      <summary>
        <para>A change of this type indicates that a GameObject and the entire hierarchy below it has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.None">
      <summary>
        <para>Indicates an uninitialized value.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.UpdatePrefabInstances">
      <summary>
        <para>A change of this type indicates that prefab instances in an open scene have been updated due to a change to the source prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectFactory">
      <summary>
        <para>Use the DefaultObject to create a new UnityEngine.Object in the editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ObjectFactory.componentWasAdded(System.Action`1&lt;UnityEngine.Component&gt;)">
      <summary>
        <para>This is invoked every time a new Component or MonoBehaviour is added to a GameObject using the ObjectFactory.</para>
      </summary>
      <param name="value">The callback to be added to the invocation list.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject,System.Type)">
      <summary>
        <para>Creates a new component and adds it to the specified GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to add the new component to.</param>
      <param name="type">The type of component to create and add to the GameObject.</param>
      <returns>
        <para>Returns the component that was created and added to the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject)">
      <summary>
        <para>Creates a new component and adds it to the specified GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to add the new component to.</param>
      <param name="type">The type of component to create and add to the GameObject.</param>
      <returns>
        <para>Returns the component that was created and added to the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateGameObject(System.String,System.Type[])">
      <summary>
        <para>Creates a new GameObject.</para>
      </summary>
      <param name="name">Name of the GameObject.</param>
      <param name="types">The optional types to add to the GameObject when created.</param>
      <param name="scene">Scene where the GameObject should be created.</param>
      <param name="hideFlags">HideFlags to assign to the GameObject.</param>
      <returns>
        <para>Returns the GameObject that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateGameObject(UnityEngine.SceneManagement.Scene,UnityEngine.HideFlags,System.String,System.Type[])">
      <summary>
        <para>Creates a new GameObject.</para>
      </summary>
      <param name="name">Name of the GameObject.</param>
      <param name="types">The optional types to add to the GameObject when created.</param>
      <param name="scene">Scene where the GameObject should be created.</param>
      <param name="hideFlags">HideFlags to assign to the GameObject.</param>
      <returns>
        <para>Returns the GameObject that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateInstance(System.Type)">
      <summary>
        <para>Create a new instance of the given type.</para>
      </summary>
      <param name="type">The type of instance to create.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateInstance">
      <summary>
        <para>Create a new instance of the given type.</para>
      </summary>
      <param name="type">The type of instance to create.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreatePrimitive(UnityEngine.PrimitiveType)">
      <summary>
        <para>Creates a GameObject primitive.</para>
      </summary>
      <param name="type">The type of primitive to create.</param>
    </member>
    <member name="T:UnityEditor.ObjectNames">
      <summary>
        <para>Helper class for constructing displayable names for objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetClassName(UnityEngine.Object)">
      <summary>
        <para>Class name of an object.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetDragAndDropTitle(UnityEngine.Object)">
      <summary>
        <para>Drag and drop title for an object.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetInspectorTitle(UnityEngine.Object)">
      <summary>
        <para>Inspector title for an object.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetUniqueName(System.String[],System.String)">
      <summary>
        <para>Make a unique name using the provided name as a base.

If the target name is in the provided list of existing names, a unique name is generated by appending the next available numerical increment.</para>
      </summary>
      <param name="existingNames">A list of pre-existing names.</param>
      <param name="name">Desired name to be used as is, or as a base.</param>
      <returns>
        <para>A name not found in the list of pre-existing names.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectNames.NicifyVariableName(System.String)">
      <summary>
        <para>Make a displayable name for a variable.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEditor.ObjectNames.SetNameSmart(UnityEngine.Object,System.String)">
      <summary>
        <para>Sets the name of an Object.</para>
      </summary>
      <param name="obj"></param>
      <param name="name"></param>
    </member>
    <member name="T:UnityEditor.ObjectPreview">
      <summary>
        <para>Base Class to derive from when creating Custom Previews.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectPreview.target">
      <summary>
        <para>The object currently being previewed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.DrawPreview(UnityEngine.Rect)">
      <summary>
        <para>This is the first entry point for Preview Drawing.</para>
      </summary>
      <param name="previewArea">The available area to draw the preview.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.GetInfoString">
      <summary>
        <para>Implement this method to show object information on top of the object preview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.GetPreviewTitle">
      <summary>
        <para>Override this method if you want to change the label of the Preview area.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.HasPreviewGUI">
      <summary>
        <para>Can this component be Previewed in its current state?</para>
      </summary>
      <returns>
        <para>True if this component can be Previewed in its current state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectPreview.Initialize(UnityEngine.Object[])">
      <summary>
        <para>Called when the Preview gets created with the objects being previewed.</para>
      </summary>
      <param name="targets">The objects being previewed.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.MoveNextTarget">
      <summary>
        <para>Called to iterate through the targets, this will be used when previewing more than one target.</para>
      </summary>
      <returns>
        <para>True if there is another target available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Implement to create your own interactive custom preview. Interactive custom previews are used in the preview area of the inspector and the object selector.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Implement to create your own custom preview for the preview area of the inspector, primary editor headers and the object selector.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnPreviewSettings">
      <summary>
        <para>Override this method if you want to show custom controls in the preview header.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.ResetTarget">
      <summary>
        <para>Called to Reset the target before iterating through them.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.AuthorInfo">
      <summary>
        <para>Identifies the author of a package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.email">
      <summary>
        <para>The email address of the author (optional).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.name">
      <summary>
        <para>The name of the author.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.url">
      <summary>
        <para>The url address of the author (optional).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.BuildUtilities">
      <summary>
        <para>Utility class that allows packages to register build callbacks with the Unity Package Manager.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.BuildUtilities.RegisterShouldIncludeInBuildCallback(UnityEditor.PackageManager.IShouldIncludeInBuildCallback)">
      <summary>
        <para>Registers a callback object for a package.</para>
      </summary>
      <param name="cb">Object of a class that implements the IShouldIncludeInBuildCallback interface.</param>
    </member>
    <member name="T:UnityEditor.PackageManager.Client">
      <summary>
        <para>Use the Unity Package Manager Client class to manage the packages used in a Project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Add(System.String)">
      <summary>
        <para>Adds a package dependency to the Project. This is the equivalent of installing a package.</para>
      </summary>
      <param name="identifier">A string representing the package to be added.
               
To install a specific version of a package, use a package identifier ("name@version").
               
To install the latest compatible version of a package, specify only the package.
               
To install a git package, specify a.
               
To install a local package, specify a value in the format "file:pathtopackagefolder".
               
To install a local tarball package, specify a value in the format "file:pathto/package-file.tgz".
               

               
ArgumentException is thrown if identifier is null or empty.
                </param>
      <returns>
        <para>An AddRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Embed(System.String)">
      <summary>
        <para> a package inside the Project.</para>
      </summary>
      <param name="packageName">The name of the package to embed. This package must be a direct dependency of the Project. ArgumentException is thrown if packageName is null or empty.</param>
      <returns>
        <para>An EmbedRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List">
      <summary>
        <para>Lists the packages the Project depends on.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects in the PackageCollection returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <param name="includeIndirectDependencies">Set to true to include indirect dependencies in the PackageCollection returned by the Package Manager. Indirect dependencies include packages referenced in the manifests of Project packages or in the manifests of other indirect dependencies. Set to false to include only the packages listed directly in the Project manifest.</param>
      <returns>
        <para>A ListRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List(System.Boolean)">
      <summary>
        <para>Lists the packages the Project depends on.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects in the PackageCollection returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <param name="includeIndirectDependencies">Set to true to include indirect dependencies in the PackageCollection returned by the Package Manager. Indirect dependencies include packages referenced in the manifests of Project packages or in the manifests of other indirect dependencies. Set to false to include only the packages listed directly in the Project manifest.</param>
      <returns>
        <para>A ListRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List(System.Boolean,System.Boolean)">
      <summary>
        <para>Lists the packages the Project depends on.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects in the PackageCollection returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <param name="includeIndirectDependencies">Set to true to include indirect dependencies in the PackageCollection returned by the Package Manager. Indirect dependencies include packages referenced in the manifests of Project packages or in the manifests of other indirect dependencies. Set to false to include only the packages listed directly in the Project manifest.</param>
      <returns>
        <para>A ListRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.PackageManager.Client.LogLevel">
      <summary>
        <para>Gets or sets the log level that the Package Manager uses when logging to the Editor.log and upm.log files. Defaults to LogLevel.Info.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Pack(System.String,System.String)">
      <summary>
        <para>Creates a GZip tarball file from a package folder. The format and content of the file is the same as if the package was published to a package registry.</para>
      </summary>
      <param name="packageFolder">Folder containing the package. ArgumentException is thrown if packageFolder is null or empty.</param>
      <param name="targetFolder">Folder where the Package Manager will write the GZip tarball file. The Package Manager will create this folder if it does not already exist. ArgumentException is thrown if targetFolder is null or empty.</param>
      <returns>
        <para>A PackRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Remove(System.String)">
      <summary>
        <para>Removes (uninstalls) a previously added package from the Project.</para>
      </summary>
      <param name="packageName">The name of the package to remove from the Project.  ArgumentException is thrown if packageName is null or empty.</param>
      <returns>
        <para>A RemoveRequest instance, which you can use to monitor the status of the asynchronous operation.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.ResetToEditorDefaults">
      <summary>
        <para>Resets the list of packages installed for this Project to the editor's default configuration. This operation clears all packages added to the Project and keeps only the packages set for the current editor's default configuration.</para>
      </summary>
      <returns>
        <para>A ResetToEditorDefaultsRequest instance, which you can use to monitor the status of the asynchronous operation.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Resolve">
      <summary>
        <para>Forces the Package Manager to resolve the project's packages, reinstalling any altered or missing package and removing extraneous packages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Search(System.String)">
      <summary>
        <para>Searches the Unity package registry for the given package.</para>
      </summary>
      <param name="packageIdOrName">The or ID of the package. ArgumentException is thrown if packageIdOrName is null or empty.
                </param>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo object returned by the Package Manager contains information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Search(System.String,System.Boolean)">
      <summary>
        <para>Searches the Unity package registry for the given package.</para>
      </summary>
      <param name="packageIdOrName">The or ID of the package. ArgumentException is thrown if packageIdOrName is null or empty.
                </param>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo object returned by the Package Manager contains information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.SearchAll">
      <summary>
        <para>Searches the Unity package registry for all packages compatible with the current Unity version.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.SearchAll(System.Boolean)">
      <summary>
        <para>Searches the Unity package registry for all packages compatible with the current Unity version.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the Project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.DependencyInfo">
      <summary>
        <para>Structure describing dependencies to other packages in PackageInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.DependencyInfo.name">
      <summary>
        <para>The name of the dependency.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.DependencyInfo.version">
      <summary>
        <para>The version of the dependency.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Error">
      <summary>
        <para>Structure describing the error of a package operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Error.errorCode">
      <summary>
        <para>Numerical error code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Error.message">
      <summary>
        <para>Error message or description.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.ErrorCode">
      <summary>
        <para>Package operation Error.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Conflict">
      <summary>
        <para>Conflicting package versions were found.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Forbidden">
      <summary>
        <para>Operation was not allowed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.InvalidParameter">
      <summary>
        <para>Operation had invalid parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.NotFound">
      <summary>
        <para>A package required to fulfill the operation was not found.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Unknown">
      <summary>
        <para>Operation resulted in an unknown error.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Events">
      <summary>
        <para>An Interface for accessing the package manager events.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.PackageManager.Events.registeredPackages(System.Action`1&lt;UnityEditor.PackageManager.PackageRegistrationEventArgs&gt;)">
      <summary>
        <para>Event raised after applying changes to the registered packages list.</para>
      </summary>
      <param name="value">A PackageRegistrationEventArgs structure describing the modifications to the registered packages list.</param>
    </member>
    <member name="?:UnityEditor.PackageManager.Events.registeringPackages(System.Action`1&lt;UnityEditor.PackageManager.PackageRegistrationEventArgs&gt;)">
      <summary>
        <para>Event raised before applying changes to the registered packages list.</para>
      </summary>
      <param name="value">A PackageRegistrationEventArgs structure describing the modifications to the registered packages list.</param>
    </member>
    <member name="T:UnityEditor.PackageManager.GitInfo">
      <summary>
        <para>Identifies a specific revision for a using a Git commit hash.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.GitInfo.hash">
      <summary>
        <para>Returns the resolved Git commit hash for the requested revision for this package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.GitInfo.revision">
      <summary>
        <para>Returns the requested Git revision for the Git package.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.PackageManager.IShouldIncludeInBuildCallback">
      <summary>
        <para>Interface used by the Package Manager to request build information about packages.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.IShouldIncludeInBuildCallback.PackageName">
      <summary>
        <para>The package name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.IShouldIncludeInBuildCallback.ShouldIncludeInBuild(System.String)">
      <summary>
        <para>Determines whether to include a managed plugin in a build.</para>
      </summary>
      <param name="path">The absolute path of the managed plugin to include or exclude.</param>
      <returns>
        <para>Returns true to include the plugin identified by path in the build; otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.LogLevel">
      <summary>
        <para>Describes different levels of log information the Package Manager supports.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Debug">
      <summary>
        <para>Debugging messages are reported, in addition to anything from the LogLevel.Verbose level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Error">
      <summary>
        <para>Only unexpected errors and failures are logged.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Info">
      <summary>
        <para>High-level informational messages are reported, in addition to anything from the LogLevel.Warn level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Silly">
      <summary>
        <para>Extremely detailed messages are reported, in addition to anything from the LogLevel.Debug level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Verbose">
      <summary>
        <para>Detailed informational messages are reported, in addition to anything from the LogLevel.Info level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Warn">
      <summary>
        <para>Abnormal situations that may result in problems are reported, in addition to anything from the LogLevel.Error level.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageCollection">
      <summary>
        <para>A collection of PackageInfo objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageCollection.error">
      <summary>
        <para>The error associated with the package collection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageInfo">
      <summary>
        <para>Structure describing a Unity Package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.assetPath">
      <summary>
        <para>The asset path of the package in the AssetDatabase.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.author">
      <summary>
        <para>An AuthorInfo instance of the author of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.category">
      <summary>
        <para>Category of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.changelogUrl">
      <summary>
        <para>The custom URL for the changelog for the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.datePublished">
      <summary>
        <para>The date and time at which the package was published.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.dependencies">
      <summary>
        <para>An array of DependencyInfos listing all the packages this package directly depends on.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.description">
      <summary>
        <para>Detailed description of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.displayName">
      <summary>
        <para>Friendly display name of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.documentationUrl">
      <summary>
        <para>The custom URL for documentation for the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.errors">
      <summary>
        <para>The errors associated with the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.git">
      <summary>
        <para>A GitInfo instance providing detailed information for a Git package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.isDirectDependency">
      <summary>
        <para>If the package is a direct dependency of the project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.keywords">
      <summary>
        <para>An array of keywords associated with the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.licensesUrl">
      <summary>
        <para>The custom URL for the licenses of a package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.name">
      <summary>
        <para>Unique name of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.packageId">
      <summary>
        <para>Identifier of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.registry">
      <summary>
        <para>The registry from which the Package Manager obtained this package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.repository">
      <summary>
        <para>A RepositoryInfo instance containing information the repository that the package is hosted on.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.resolvedDependencies">
      <summary>
        <para>An array of DependencyInfos listing all the packages this package directly or indirectly depends to and the versions they resolved to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.resolvedPath">
      <summary>
        <para>The local path of the project on disk.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.source">
      <summary>
        <para>Source of the package contents.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.status">
      <summary>
        <para>The status of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.type">
      <summary>
        <para>Type of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.version">
      <summary>
        <para>Version of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.versions">
      <summary>
        <para>A VersionsInfo instance containing information about the available versions of the package.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.FindForAssembly(System.Reflection.Assembly)">
      <summary>
        <para>Retrieves information about the package containing an Assembly, or the Assembly Definition used to build that Assembly.</para>
      </summary>
      <param name="assembly">The Assembly.</param>
      <returns>
        <para>The PackageInfo object describing the package, or null if the Assembly or its Assembly Definition is not in a package.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.FindForAssetPath(System.String)">
      <summary>
        <para>Retrieves information about the package containing an asset based on the path of that asset.</para>
      </summary>
      <param name="assetPath">The file path of the Asset.</param>
      <returns>
        <para>The PackageInfo object describing the package, or null if the Asset is not in a package.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageRegistrationEventArgs">
      <summary>
        <para>Structure describing the PackageInfo entries to register or unregister during the package manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.added">
      <summary>
        <para>A collection of PackageInfo entries to add during the package manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.changedFrom">
      <summary>
        <para>A collection of PackageInfo entries describing packages to be overridden by another version during the package manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.changedTo">
      <summary>
        <para>A collection of PackageInfo entries describing packages that will override a previously registered version during the package manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.removed">
      <summary>
        <para>A collection of PackageInfo entries to remove during the package manager registration process.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageSource">
      <summary>
        <para>Source of packages.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.BuiltIn">
      <summary>
        <para>The package is built-in and part of Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Embedded">
      <summary>
        <para>The package is embedded in the Unity project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Git">
      <summary>
        <para>The package is referenced directly by a Git URL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Local">
      <summary>
        <para>The package is referenced by a local path.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.LocalTarball">
      <summary>
        <para>The package is referenced by a local path pointing to a GZip tarball file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Registry">
      <summary>
        <para>The package is from a registry.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Unknown">
      <summary>
        <para>The package source is unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageStatus">
      <summary>
        <para>Unity Package Manager package status.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageStatus.Available">
      <summary>
        <para>The package and its dependencies are available on the local file system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageStatus.Error">
      <summary>
        <para>An error occurred while transfering the package or one of its dependencies to the local file system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageStatus.InProgress">
      <summary>
        <para>The package is being transferred into the local file system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageStatus.Unavailable">
      <summary>
        <para>The package or one of its dependencies cannot be found on the local file system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageStatus.Unknown">
      <summary>
        <para>The status of the package is unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackOperationResult">
      <summary>
        <para>Structure describing the result of a Client.Pack operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackOperationResult.tarballPath">
      <summary>
        <para>The path to the file created by the Client.Pack operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.RegistryInfo">
      <summary>
        <para>Provides information about a package registry.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.isDefault">
      <summary>
        <para>Whether this is the default, Unity registry or one of the scoped registries configured in the project manifest.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.name">
      <summary>
        <para>The registry name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.url">
      <summary>
        <para>The registry URL.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.RepositoryInfo">
      <summary>
        <para>Includes information about the repository that hosts the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.path">
      <summary>
        <para>The relative path to the package root in the repository, if it is different from the repository root.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.revision">
      <summary>
        <para>The revision id corresponding to the package version.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.type">
      <summary>
        <para>The type of the repository, e.g. git.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.url">
      <summary>
        <para>The url to the source code repository.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.AddRequest">
      <summary>
        <para>Represents an asynchronous request to add a package to the project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.EmbedRequest">
      <summary>
        <para>Represents an asynchronous request to embed a package inside a project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.ListRequest">
      <summary>
        <para>Represents an asynchronous request to list the packages in the project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.PackRequest">
      <summary>
        <para>Represents an asynchronous request to pack a package folder.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.RemoveRequest">
      <summary>
        <para>Represents an asynchronous request to remove a package from the project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.RemoveRequest.PackageIdOrName">
      <summary>
        <para>The package being removed by this request.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.Request">
      <summary>
        <para>Tracks the state of an asynchronous Unity Package Manager (Upm) server operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.Error">
      <summary>
        <para>The error returned by the request, if any.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.IsCompleted">
      <summary>
        <para>Whether the request is complete.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.Status">
      <summary>
        <para>The request status.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.Request`1">
      <summary>
        <para>Tracks the state of an asynchronous Unity Package Manager (Upm) server operation that returns a non-empty response.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request_1.Result">
      <summary>
        <para>The response to the request.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.ResetToEditorDefaultsRequest">
      <summary>
        <para>Represents an asynchronous request to reset the project packages to the current Editor default configuration.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.SearchRequest">
      <summary>
        <para>Represents an asynchronous request to find a package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.SearchRequest.PackageIdOrName">
      <summary>
        <para>The package id or name used in this search operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.StatusCode">
      <summary>
        <para>Unity Package Manager operation status.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.Failure">
      <summary>
        <para>Package manager operation failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.InProgress">
      <summary>
        <para>Package manager operation is in progress.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.Success">
      <summary>
        <para>Package manager operation completed successfully.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.VersionsInfo">
      <summary>
        <para>Identifies the available versions of a package and which are the compatible, latest, and recommended versions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.all">
      <summary>
        <para>All available versions of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.compatible">
      <summary>
        <para>Versions of the package compatible with the current version of Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.latest">
      <summary>
        <para>Latest version of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.latestCompatible">
      <summary>
        <para>Latest version of the package compatible with the current version of Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.recommended">
      <summary>
        <para>Obsolete. Use the VersionsInfo.verified property instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.verified">
      <summary>
        <para>A version of the package verified to work with the current version of Unity. If there is no verified version, then this property is an empty string.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PauseState">
      <summary>
        <para>Enumeration specifying the current pause state of the Editor.

See Also: PlayModeStateChange, EditorApplication.pauseStateChanged, EditorApplication.isPaused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PauseState.Paused">
      <summary>
        <para>Occurs as soon as the Editor is paused, which may occur during either edit mode or play mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PauseState.Unpaused">
      <summary>
        <para>Occurs as soon as the Editor is unpaused, which may occur during either edit mode or play mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsDebugWindow">
      <summary>
        <para>Displays the Physics Debug Visualization options.

The Physics Debug Visualization is only displayed if this window is visible.

See Also: PhysicsVisualizationSettings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings">
      <summary>
        <para>This class contains the settings controlling the Physics Debug Visualization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.baseAlpha">
      <summary>
        <para>Alpha amount used for transparency blending.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.colorVariance">
      <summary>
        <para>Used to disinguish neighboring Colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.devOptions">
      <summary>
        <para>Shows extra options used to develop and debug the physics visualization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.dirtyCount">
      <summary>
        <para>Dirty marker used for refreshing the GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.enableMouseSelect">
      <summary>
        <para>Enables the mouse-over highlighting and mouse selection modes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.forceOverdraw">
      <summary>
        <para>Forcing the drawing of Colliders on top of any other geometry, regardless of depth.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.kinematicColor">
      <summary>
        <para>Color for kinematic Rigidbodies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.rigidbodyColor">
      <summary>
        <para>Color for Rigidbodies, primarily active ones.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.showCollisionGeometry">
      <summary>
        <para>Should the PhysicsDebugWindow display the collision geometry.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.sleepingBodyColor">
      <summary>
        <para>Color for Rigidbodies that are controlled by the physics simulator, but are not currently being simulated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.staticColor">
      <summary>
        <para>Color for Colliders that do not have a Rigidbody component.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.terrainTilesMax">
      <summary>
        <para>Maximum number of mesh tiles available to draw all Terrain Colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.triggerColor">
      <summary>
        <para>Color for Colliders that are Triggers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.useSceneCam">
      <summary>
        <para>Controls whether the SceneView or the GameView camera is used. Not shown in the UI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.viewDistance">
      <summary>
        <para>Colliders within this distance will be displayed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.ClearMouseHighlight">
      <summary>
        <para>Clears the highlighted Collider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.DeinitDebugDraw">
      <summary>
        <para>Deinitializes the physics debug visualization system and tracking of changes Colliders.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow">
      <summary>
        <para>Decides whether the Workflow in the Physics Debug window should be inclusive
 (&lt;a href="PhysicsVisualizationSettings.FilterWorkflow.ShowSelectedItems.html"&gt;ShowSelectedItems&lt;a&gt;) or exclusive (&lt;a href="PhysicsVisualizationSettings.FilterWorkflow.HideSelectedItems.html"&gt;HideSelectedItems&lt;a&gt;).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow.HideSelectedItems">
      <summary>
        <para>With HideSelectedItems you can hide selected filter items in order to easily discard uninteresting Collider properties thereby making overview and navigation easier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow.ShowSelectedItems">
      <summary>
        <para>With ShowSelectedItems and the Select None button is it easy to monitor very specific Colliders.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowBoxColliders">
      <summary>
        <para>Should BoxColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCapsuleColliders">
      <summary>
        <para>Should CapsuleColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayer(System.Int32)">
      <summary>
        <para>Should the given layer be considered by the display filter.</para>
      </summary>
      <param name="layer"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayerMask">
      <summary>
        <para>Should the mask representing the layers be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowKinematicBodies">
      <summary>
        <para>Should the kinematic Rigidbodies be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings/MeshColliderType)">
      <summary>
        <para>Should MeshColliders be shown.</para>
      </summary>
      <param name="colliderType"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowPhysicsSceneMask">
      <summary>
        <para>Return a mask representing scenes that are enabled by display filter</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowRigidbodies">
      <summary>
        <para>Should any Rigidbodies be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSleepingBodies">
      <summary>
        <para>Should the sleeping Rigidbodies be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSphereColliders">
      <summary>
        <para>Should SphereColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowStaticColliders">
      <summary>
        <para>Should the Colliders without a Rigidbody component be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTerrainColliders">
      <summary>
        <para>Should TerrainColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTriggers">
      <summary>
        <para>Should the triggers be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.HasMouseHighlight">
      <summary>
        <para>Returns true if there currently is any kind of physics object highlighted.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.InitDebugDraw">
      <summary>
        <para>Initializes the physics debug visualization system. The system must be initialized for any physics objects to be visualized. It is normally initialized by the PhysicsDebugWindow.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings.MeshColliderType">
      <summary>
        <para>Is a MeshCollider convex.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.MeshColliderType.Convex">
      <summary>
        <para>Corresponds to MeshCollider.convex is true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.MeshColliderType.NonConvex">
      <summary>
        <para>Corresponds to MeshCollider.convex is false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.Reset">
      <summary>
        <para>Resets the visualization options to their default state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowBoxColliders(System.Boolean)">
      <summary>
        <para>Should BoxColliders be shown.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCapsuleColliders(System.Boolean)">
      <summary>
        <para>Should CapsuleColliders be shown.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayer(System.Int32,System.Boolean)">
      <summary>
        <para>Should the given layer be considered by the display filter.</para>
      </summary>
      <param name="layer"></param>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayerMask(System.Int32)">
      <summary>
        <para>Should the mask representing the layers be considered by the display filter.</para>
      </summary>
      <param name="mask"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(System.Boolean)">
      <summary>
        <para>Enables or disables all filtering items.</para>
      </summary>
      <param name="selected"></param>
      <param name="filterWorkflow"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(UnityEditor.PhysicsVisualizationSettings/FilterWorkflow,System.Boolean)">
      <summary>
        <para>Enables or disables all filtering items.</para>
      </summary>
      <param name="selected"></param>
      <param name="filterWorkflow"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowKinematicBodies(System.Boolean)">
      <summary>
        <para>Should the kinematic Rigidbodies be considered by the display filter.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings/MeshColliderType,System.Boolean)">
      <summary>
        <para>Should MeshColliders be shown.</para>
      </summary>
      <param name="colliderType"></param>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowPhysicsSceneMask(System.Int32)">
      <summary>
        <para>Should the scene mask be considered by the display filter.</para>
      </summary>
      <param name="mask"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowRigidbodies(System.Boolean)">
      <summary>
        <para>Should any Rigidbodies be considered by the display filter.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSleepingBodies(System.Boolean)">
      <summary>
        <para>Should the sleeping Rigidbodies be considered by the display filter.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSphereColliders(System.Boolean)">
      <summary>
        <para>Should SphereColliders be shown.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowStaticColliders(System.Boolean)">
      <summary>
        <para>Should the Colliders without a Rigidbody component be considered by the display filter.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTerrainColliders(System.Boolean)">
      <summary>
        <para>Should TerrainColliders be shown.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTriggers(System.Boolean)">
      <summary>
        <para>Should the triggers be considered by the display filter.</para>
      </summary>
      <param name="show"></param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.UpdateMouseHighlight(UnityEngine.Vector2)">
      <summary>
        <para>Updates the mouse-over highlight at the given mouse position in screen space.</para>
      </summary>
      <param name="screenPos"></param>
    </member>
    <member name="T:UnityEditor.PivotMode">
      <summary>
        <para>Where is the tool handle placed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotMode.Center">
      <summary>
        <para>The tool handle is at the graphical center of the selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotMode.Pivot">
      <summary>
        <para>The tool handle is on the pivot point of the active object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PivotRotation">
      <summary>
        <para>How is the tool handle oriented.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotRotation.Global">
      <summary>
        <para>The tool handle is aligned along the global axes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotRotation.Local">
      <summary>
        <para>The tool handle is oriented from the active object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlatformIcon">
      <summary>
        <para>Icon slot container.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.height">
      <summary>
        <para>The height of the icon in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.kind">
      <summary>
        <para>The PlatformIconKind is specific to the target platform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.layerCount">
      <summary>
        <para>The number of texture layers the icon slot currently contains.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.maxLayerCount">
      <summary>
        <para>The maximum number of texture layers required by the icon slot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.minLayerCount">
      <summary>
        <para>The minimum number of texture layers required by the icon slot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.width">
      <summary>
        <para>The width of the icon in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlatformIcon.GetTexture(System.Int32)">
      <summary>
        <para>Retrieve the texture which is currently assigned to the specified layer.</para>
      </summary>
      <param name="layer">Cannot be larger than PlatformIcon.maxLayerCount.</param>
    </member>
    <member name="M:UnityEditor.PlatformIcon.GetTextures">
      <summary>
        <para>Retrieve an array of all textures which are currently assigned to the icon slot.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlatformIcon.SetTexture(UnityEngine.Texture2D,System.Int32)">
      <summary>
        <para>Assign a texture to the specified layer.</para>
      </summary>
      <param name="layer">Cannot be larger than PlatformIcon.maxLayerCount.</param>
      <param name="texture"></param>
    </member>
    <member name="M:UnityEditor.PlatformIcon.SetTextures(UnityEngine.Texture2D[])">
      <summary>
        <para>Assign all available icon layers.</para>
      </summary>
      <param name="textures">Must be an array of size PlatformIcon.maxLayerCount.</param>
    </member>
    <member name="T:UnityEditor.PlatformIconKind">
      <summary>
        <para>Icon kind wrapper.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Playables.PlayableOutputEditorExtensions">
      <summary>
        <para>Editor extensions for all types that implement IPlayableOutput.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Playables.PlayableOutputEditorExtensions.GetEditorName(U)">
      <summary>
        <para>Returns the name of the PlayableOutput.</para>
      </summary>
      <param name="output">The PlayableOutput used by this operation.</param>
    </member>
    <member name="T:UnityEditor.Playables.Utility">
      <summary>
        <para>Editor utility functions for the Playable graph and its nodes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Playables.Utility.destroyingGraph(System.Action`1&lt;UnityEngine.Playables.PlayableGraph&gt;)">
      <summary>
        <para>Event triggered whenever a PlayableGraph is being destroyed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.Playables.Utility.graphCreated(System.Action`1&lt;UnityEngine.Playables.PlayableGraph&gt;)">
      <summary>
        <para>Event triggered whenever a new PlayableGraph is created.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.Playables.Utility.GetAllGraphs">
      <summary>
        <para>Returns all existing PlayableGraphs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerConnectionInitiateMode">
      <summary>
        <para>Describes how the player connects to the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.None">
      <summary>
        <para>Player connection mode not set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.PlayerConnectsToHost">
      <summary>
        <para>Player connection is initiated by the player connecting to the host, usually the host is the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.PlayerListens">
      <summary>
        <para>Player connection is initiated by the player broadcasting its IP address, and then Editor connecting to the player.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings">
      <summary>
        <para>Player Settings is where you define various parameters for the final game that you will build in Unity. Some of these values are used in the Resolution Dialog that launches when you open a standalone game.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.accelerometerFrequency">
      <summary>
        <para>Accelerometer update frequency.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.actionOnDotNetUnhandledException">
      <summary>
        <para>Sets the crash behavior on .NET unhandled exception.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.advancedLicense">
      <summary>
        <para>Is the advanced version being used?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeLeft">
      <summary>
        <para>Is auto-rotation to landscape left supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeRight">
      <summary>
        <para>Is auto-rotation to landscape right supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortrait">
      <summary>
        <para>Is auto-rotation to portrait supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortraitUpsideDown">
      <summary>
        <para>Is auto-rotation to portrait upside-down supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowFullscreenSwitch">
      <summary>
        <para>If enabled, allows the user to switch between full screen and windowed mode using OS specific keyboard short cuts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowUnsafeCode">
      <summary>
        <para>Allow 'unsafe' C# code code to be compiled for predefined assemblies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.aotOptions">
      <summary>
        <para>Additional AOT compilation options. Shared by AOT platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.apiCompatibilityLevel">
      <summary>
        <para>Deprecated. Use PlayerSettings.GetApiCompatibilityLevel and PlayerSettings.SetApiCompatibilityLevel instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.applicationIdentifier">
      <summary>
        <para>The application identifier for the currently selected build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.assemblyVersionValidation">
      <summary>
        <para>Set to true to exact version matching for strong named assemblies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.bakeCollisionMeshes">
      <summary>
        <para>Pre bake collision meshes on player build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.bundleVersion">
      <summary>
        <para>Application bundle version shared between iOS &amp; Android platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.captureSingleScreen">
      <summary>
        <para>Defines if fullscreen games should darken secondary displays.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.cloudProjectId">
      <summary>
        <para>A unique cloud project identifier. It is unique for every project (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.colorSpace">
      <summary>
        <para>Set the rendering color space for the current project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.companyName">
      <summary>
        <para>The name of your company.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.cursorHotspot">
      <summary>
        <para>Default cursor's click position in pixels from the top left corner of the cursor image.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.d3d11FullscreenMode">
      <summary>
        <para>Define how to handle fullscreen mode in Windows standalones (Direct3D 11 mode).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.d3d9FullscreenMode">
      <summary>
        <para>Define how to handle fullscreen mode in Windows standalones (Direct3D 9 mode).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultCursor">
      <summary>
        <para>The default cursor for your application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultInterfaceOrientation">
      <summary>
        <para>Default screen orientation for mobiles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultIsFullScreen">
      <summary>
        <para>If enabled, the game will default to fullscreen mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultScreenHeight">
      <summary>
        <para>Default vertical dimension of stand-alone player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultScreenWidth">
      <summary>
        <para>Default horizontal dimension of stand-alone player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultWebScreenHeight">
      <summary>
        <para>Default vertical dimension of web player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultWebScreenWidth">
      <summary>
        <para>Default horizontal dimension of web player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.displayResolutionDialog">
      <summary>
        <para>Defines the behaviour of the Resolution Dialog on product launch.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enable360StereoCapture">
      <summary>
        <para>Enable 360 Stereo Capture support on the current build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableCrashReportAPI">
      <summary>
        <para>Enables CrashReport API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableFrameTimingStats">
      <summary>
        <para>Enable frame timing statistics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableInternalProfiler">
      <summary>
        <para>Enables internal profiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableMetalAPIValidation">
      <summary>
        <para>Enables Metal API validation in the Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.firstStreamedLevelWithResources">
      <summary>
        <para>First level to have access to all Resources.Load assets in Streamed Web Players.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.forceSingleInstance">
      <summary>
        <para>Restrict standalone players to a single concurrent running instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.fullScreenMode">
      <summary>
        <para>Platform agnostic setting to define fullscreen behavior. Not all platforms support all modes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.gcIncremental">
      <summary>
        <para>Allows you to enable or disable incremental mode for garbage collection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.gpuSkinning">
      <summary>
        <para>Enable GPU skinning on capable platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.graphicsJobMode">
      <summary>
        <para>Selects the graphics job mode to use on platforms that support both Native and Legacy graphics jobs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.graphicsJobs">
      <summary>
        <para>Enable graphics jobs (multi threaded rendering).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iPhoneBundleIdentifier">
      <summary>
        <para>The bundle identifier of the iPhone application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.keyaliasPass">
      <summary>
        <para>Password for the key used for signing an Android application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.keystorePass">
      <summary>
        <para>Password used for interacting with the Android Keystore.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.legacyClampBlendShapeWeights">
      <summary>
        <para>Defines whether the BlendShape weight range in SkinnedMeshRenderers is clamped.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.locationUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's location data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.logObjCUncaughtExceptions">
      <summary>
        <para>Are ObjC uncaught exceptions logged?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.macFullscreenMode">
      <summary>
        <para>Define how to handle fullscreen mode in macOS standalones.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.macRetinaSupport">
      <summary>
        <para>Enable Retina support for macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.mipStripping">
      <summary>
        <para>Enable mip stripping for all platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.muteOtherAudioSources">
      <summary>
        <para>Stops or allows audio from other applications to play in the background while your Unity application is running.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES31">
      <summary>
        <para>Specifies whether the application requires OpenGL ES 3.1 support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES31AEP">
      <summary>
        <para>Specifies whether the application requires OpenGL ES 3.1 AEP support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES32">
      <summary>
        <para>Specifies whether the application requires OpenGL ES 3.2 support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.preserveFramebufferAlpha">
      <summary>
        <para>When enabled, preserves the alpha value in the framebuffer to support rendering over native UI on Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.productName">
      <summary>
        <para>The name of your product.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.protectGraphicsMemory">
      <summary>
        <para>Protect graphics memory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.renderingPath">
      <summary>
        <para>Which rendering path is enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resizableWindow">
      <summary>
        <para>Use resizable window in standalone player builds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resolutionDialogBanner">
      <summary>
        <para>The image to display in the Resolution Dialog window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.runInBackground">
      <summary>
        <para>If enabled, your game will continue to run after lost focus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.scriptingRuntimeVersion">
      <summary>
        <para>The scripting runtime version setting. Change this to set the version the Editor uses and restart the Editor to apply the change.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.showUnitySplashScreen">
      <summary>
        <para>Should the builtin Unity splash screen be shown?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.singlePassStereoRendering">
      <summary>
        <para>Should Unity support single-pass stereo rendering?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.splashScreenStyle">
      <summary>
        <para>The style to use for the builtin Unity splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.statusBarHidden">
      <summary>
        <para>Returns if status bar should be hidden. Supported on iOS only; on Android, the status bar is always hidden.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stereoRenderingPath">
      <summary>
        <para>Active stereo rendering path</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stereoscopic3D">
      <summary>
        <para>Should player render in stereoscopic 3d on supported hardware?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stripEngineCode">
      <summary>
        <para>Remove unused Engine code from your build (IL2CPP-only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.strippingLevel">
      <summary>
        <para>Deprecated. Use PlayerSettings.GetManagedStrippingLevel and PlayerSettings.SetManagedStrippingLevel instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stripUnusedMeshComponents">
      <summary>
        <para>Should unused Mesh components be excluded from game build?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.suppressCommonWarnings">
      <summary>
        <para>Suppresses common C# warnings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.use32BitDisplayBuffer">
      <summary>
        <para>32-bit Display Buffer is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useAnimatedAutorotation">
      <summary>
        <para>Let the OS autorotate the screen as the device orientation changes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useDirect3D11">
      <summary>
        <para>Should Direct3D 11 be used when available?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useFlipModelSwapchain">
      <summary>
        <para>Use DXGI Flip Model Swapchain for D3D11</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useHDRDisplay">
      <summary>
        <para>Switch display to HDR mode (if available).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useMacAppStoreValidation">
      <summary>
        <para>Enable receipt validation for the Mac App Store.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.usePlayerLog">
      <summary>
        <para>Write a log file with debugging information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useReferenceAssemblies">
      <summary>
        <para>Set to true to make Unity use Roslyn reference assemblies when compiling scripts. Enabled by default.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.virtualRealitySplashScreen">
      <summary>
        <para>Virtual Reality specific splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.virtualRealitySupported">
      <summary>
        <para>Enable Virtual Reality support on the current build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.visibleInBackground">
      <summary>
        <para>On Windows, show the application in the background if Fullscreen Windowed mode is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnableLateAcquireNextImage">
      <summary>
        <para>Delays acquiring the swapchain image until after the frame is rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnablePreTransform">
      <summary>
        <para>Applies the display rotation during rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnableSetSRGBWrite">
      <summary>
        <para>Enables Graphics.SetSRGBWrite() on Vulkan renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanNumSwapchainBuffers">
      <summary>
        <para>Set number of swapchain buffers to be used with Vulkan renderer</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanUseSWCommandBuffers">
      <summary>
        <para>Use software command buffers for building rendering commands on Vulkan.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.xboxEnableAvatar">
      <summary>
        <para>Xbox 360 Avatars.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Android">
      <summary>
        <para>Android specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidIsGame">
      <summary>
        <para>Publish the build as a game rather than a regular application. This option affects devices running Android 5.0 Lollipop and later</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidTVCompatibility">
      <summary>
        <para>Provide a build that is Android TV compatible.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.blitType">
      <summary>
        <para>Choose how content is drawn to the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.buildApkPerCpuArchitecture">
      <summary>
        <para>Create a separate APK for each CPU architecture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.bundleVersionCode">
      <summary>
        <para>Android bundle version code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.disableDepthAndStencilBuffers">
      <summary>
        <para>Disable Depth and Stencil Buffers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.forceInternetPermission">
      <summary>
        <para>Force internet permission flag.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.forceSDCardPermission">
      <summary>
        <para>Force SD card permission.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keyaliasName">
      <summary>
        <para>Android key alias name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keyaliasPass">
      <summary>
        <para>Android key alias password.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keystoreName">
      <summary>
        <para>Android keystore name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keystorePass">
      <summary>
        <para>Android keystore password.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.licenseVerification">
      <summary>
        <para>License verification flag.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.maxAspectRatio">
      <summary>
        <para>Maximum aspect ratio which is supported by the application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyDebug">
      <summary>
        <para>Enable to minify debug build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyRelease">
      <summary>
        <para>Enable to minify release build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyWithR8">
      <summary>
        <para>Use R8 to perform minification.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minSdkVersion">
      <summary>
        <para>The minimum API level required for your application to run.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.preferredInstallLocation">
      <summary>
        <para>Preferred application install location.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.renderOutsideSafeArea">
      <summary>
        <para>Extends rendering layout into display cutout area, utilizing all of the available screen space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.showActivityIndicatorOnLoading">
      <summary>
        <para>Application should show ActivityIndicator when loading.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.splashScreenScale">
      <summary>
        <para>Android splash screen scale mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.startInFullscreen">
      <summary>
        <para>Start in fullscreen mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetArchitectures">
      <summary>
        <para>A set of CPU architectures for the Android build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetDevice">
      <summary>
        <para>Android target device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetSdkVersion">
      <summary>
        <para>The target API level of your application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.use24BitDepthBuffer">
      <summary>
        <para>24-bit Depth Buffer is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.useAPKExpansionFiles">
      <summary>
        <para>Use APK Expansion Files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.useCustomKeystore">
      <summary>
        <para>Enable application signing with a custom keystore.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.ARCoreEnabled">
      <summary>
        <para>Enable support for Google ARCore on supported devices.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.D3DHDRBitDepth">
      <summary>
        <para>The number of bits in each color channel for swap chain buffers. (Direct3D 11 and Direct3D 12 mode).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Facebook">
      <summary>
        <para>Facebook specific Player settings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalCompilerArgumentsForGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Gets an array of additional compiler arguments set for a specific BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to get the compiler arguments for.</param>
      <returns>
        <para>Returns an array with the compiler arguments associated with a BuildTargetGroup.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalIl2CppArgs">
      <summary>
        <para>IL2CPP build arguments.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApiCompatibilityLevel(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Gets .NET API compatibility level for specified BuildTargetGroup.</para>
      </summary>
      <param name="buildTargetGroup"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApplicationIdentifier(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Get the application identifier for the specified platform.</para>
      </summary>
      <param name="targetGroup"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetArchitecture(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Gets the BuildTargetPlatformGroup architecture.</para>
      </summary>
      <param name="targetGroup"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultScriptingBackend(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns the default ScriptingImplementation used for the given platform group.</para>
      </summary>
      <param name="targetGroup">The platform group to retrieve the scripting backend for.</param>
      <returns>
        <para>A ScriptingImplementation object that describes the default scripting backend used on that platform.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetGraphicsAPIs(UnityEditor.BuildTarget)">
      <summary>
        <para>Get graphics APIs to be used on a build platform.</para>
      </summary>
      <param name="platform">Platform to get APIs for.</param>
      <returns>
        <para>Array of graphics APIs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns the list of assigned icons for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
      <summary>
        <para>Returns the list of assigned icons for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns a list of icon sizes for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
      <summary>
        <para>Returns a list of icon sizes for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Gets compiler configuration used when compiling generated C++ code for a particular BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">Build target group.</param>
      <returns>
        <para>Compiler configuration.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Does IL2CPP platform use incremental build?</para>
      </summary>
      <param name="targetGroup"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetManagedStrippingLevel(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns the ManagedStrippingLevel used for the given platform group.</para>
      </summary>
      <param name="targetGroup">The target platform group whose code stripping level you want to retrieve.</param>
      <returns>
        <para>The managed code stripping level set for the specified build target platform group.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetMobileMTRendering(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Check if multithreaded rendering option for mobile platform is enabled.</para>
      </summary>
      <param name="targetGroup">Mobile platform (Only iOS, tvOS and Android).</param>
      <returns>
        <para>Return true if multithreaded rendering option for targetGroup platform is enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetNormalMapEncoding(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns the NormalMapEncoding used for the given platform group.</para>
      </summary>
      <param name="targetGroup">The target platform group whose normal map encoding you want to retrieve.</param>
      <param name="platform"></param>
      <returns>
        <para>The NormalMapEncoding for the given platform group.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind)">
      <summary>
        <para>Returns the list of available icon slots for the specified platform and  PlatformIconKind|kind.</para>
      </summary>
      <param name="platform">The full list of platforms that support this API and the supported icon kinds can be found in PlatformIconKind|icon kinds.</param>
      <param name="kind">Each platform supports a different set of PlatformIconKind|icon kinds. These can be found in the specific platform namespace (for example iOSPlatformIconKind.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPreloadedAssets">
      <summary>
        <para>Returns the assets that will be loaded at start up in the player and be kept alive until the player terminates.</para>
      </summary>
      <returns>
        <para>The assets to be preloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyBool(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns a PlayerSettings named bool property (with an optional build target it should apply to).</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
      <returns>
        <para>The current value of the property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyInt(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns a PlayerSettings named int property (with an optional build target it should apply to).</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
      <returns>
        <para>The current value of the property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalBool(System.String,System.Boolean&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Searches for property and assigns it's value to given variable.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Variable, to which to store the value of the property, if set.</param>
      <param name="target">An optional build target group, to which the property applies.</param>
      <returns>
        <para>True if property was set and it's value assigned to given variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalInt(System.String,System.Int32&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Searches for property and assigns it's value to given variable.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Variable, to which to store the value of the property, if set.</param>
      <param name="target">An optional build target group, to which the property applies.</param>
      <returns>
        <para>True if property was set and it's value assigned to given variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalString(System.String,System.String&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Searches for property and assigns it's value to given variable.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Variable, to which to store the value of the property, if set.</param>
      <param name="target">An optional build target group, to which the property applies.</param>
      <returns>
        <para>True if property was set and it's value assigned to given variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyString(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns a PlayerSettings named string property (with an optional build target it should apply to).</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
      <returns>
        <para>The current value of the property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Gets the scripting framework for a BuildTargetPlatformGroup.</para>
      </summary>
      <param name="targetGroup"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Get user-specified symbols for script compilation for the given build target group.</para>
      </summary>
      <param name="targetGroup"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderPrecisionModel">
      <summary>
        <para>Gets the active shader precision model.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetStackTraceLogType(UnityEngine.LogType)">
      <summary>
        <para>Get stack trace logging options.</para>
      </summary>
      <param name="logType"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetSupportedIconKindsForPlatform(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Retrieve all icon kinds supported by the specified platform.</para>
      </summary>
      <param name="platform"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetTemplateCustomValue(System.String)">
      <summary>
        <para>Returns a value of a custom template variable.</para>
      </summary>
      <param name="name">Name of the variable.</param>
      <returns>
        <para>The current value of the custom template variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget)">
      <summary>
        <para>Is a build platform using automatic graphics API choice?</para>
      </summary>
      <param name="platform">Platform to get the flag for.</param>
      <returns>
        <para>Should best available graphics API be used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetVirtualRealitySupported(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns whether or not Virtual Reality Support is enabled for a given BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to return the value for.</param>
      <returns>
        <para>True if Virtual Reality Support is enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetVirtualTexturingSupportEnabled">
      <summary>
        <para>Is virtual texturing enabled.</para>
      </summary>
      <returns>
        <para>True if virtual texturing is enabled, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.HasAspectRatio(UnityEditor.AspectRatio)">
      <summary>
        <para>Returns whether or not the specified aspect ratio is enabled.</para>
      </summary>
      <param name="aspectRatio"></param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.iOS">
      <summary>
        <para>iOS specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.allowHTTPDownload">
      <summary>
        <para>Should insecure HTTP downloads be allowed?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appInBackgroundBehavior">
      <summary>
        <para>Application behavior when entering background.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appleDeveloperTeamID">
      <summary>
        <para>Set this property with your Apple Developer Team ID. You can find this on the Apple Developer website under &lt;a href="https:developer.apple.comaccount#membership"&gt; Account &gt; Membership &lt;/a&gt; . This sets the Team ID for the generated Xcode project, allowing developers to use the Build and Run functionality. An Apple Developer Team ID must be set here for automatic signing of your app.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appleEnableAutomaticSigning">
      <summary>
        <para>Set this property to true for Xcode to attempt to automatically sign your app based on your appleDeveloperTeamID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.applicationDisplayName">
      <summary>
        <para>iOS application display name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.backgroundModes">
      <summary>
        <para>Supported background execution modes (when appInBackgroundBehavior is set to iOSAppInBackgroundBehavior.Custom).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.buildNumber">
      <summary>
        <para>The build number of the bundle</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.cameraUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.deferSystemGesturesMode">
      <summary>
        <para>Defer system gestures until the second swipe on specific edges.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.deferSystemGesturesMode">
      <summary>
        <para>Defer system gestures until the second swipe on specific edges.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.disableDepthAndStencilBuffers">
      <summary>
        <para>Disable Depth and Stencil Buffers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.exitOnSuspend">
      <summary>
        <para>Application should exit when suspended to background.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.forceHardShadowsOnMetal">
      <summary>
        <para>Should hard shadows be enforced when running on (mobile) Metal.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.hideHomeButton">
      <summary>
        <para>Specifies whether the home button should be hidden in the iOS build of this application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSManualProvisioningProfileID">
      <summary>
        <para>A provisioning profile Universally Unique Identifier (UUID) that Xcode will use to build your iOS app in Manual Signing mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSManualProvisioningProfileType">
      <summary>
        <para>A ProvisioningProfileType that will be set when building an iOS Xcode project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSUrlSchemes">
      <summary>
        <para>An array of URL Schemes that are supported by the app.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.locationUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's location data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.microphoneUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's microphone.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.overrideIPodMusic">
      <summary>
        <para>Determines iPod playing behavior.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.prerenderedIcon">
      <summary>
        <para>Icon is prerendered.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.requiresFullScreen">
      <summary>
        <para>RequiresFullScreen maps to Apple's plist build setting UIRequiresFullScreen, which is used to opt out of being eligible to participate in Slide Over and Split View for iOS 9.0 multitasking.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.requiresPersistentWiFi">
      <summary>
        <para>Application requires persistent WiFi.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.scriptCallOptimization">
      <summary>
        <para>Script calling optimization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.sdkVersion">
      <summary>
        <para>Active iOS SDK version used for build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.showActivityIndicatorOnLoading">
      <summary>
        <para>Application should show ActivityIndicator when loading.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.statusBarStyle">
      <summary>
        <para>Status bar style.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetDevice">
      <summary>
        <para>Targeted device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetOSVersion">
      <summary>
        <para>Deployment minimal version of iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetOSVersionString">
      <summary>
        <para>Deployment minimal version of iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.tvOSManualProvisioningProfileID">
      <summary>
        <para>A provisioning profile Universally Unique Identifier (UUID) that Xcode will use to build your tvOS app in Manual Signing mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.tvOSManualProvisioningProfileType">
      <summary>
        <para>A ProvisioningProfileType that will be set when building a tvOS Xcode project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.useOnDemandResources">
      <summary>
        <para>Indicates whether application will use On Demand Resources (ODR) API.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetiPadLaunchScreenType(UnityEditor.iOSLaunchScreenType)">
      <summary>
        <para>Sets the mode which will be used to generate the app's launch screen Interface Builder (.xib) file for iPad.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetiPhoneLaunchScreenType(UnityEditor.iOSLaunchScreenType)">
      <summary>
        <para>Sets the mode which will be used to generate the app's launch screen Interface Builder (.xib) file for iPhone.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetLaunchScreenImage(UnityEngine.Texture2D,UnityEditor.iOSLaunchScreenImageType)">
      <summary>
        <para>Sets the image to display on screen when the game launches for the specified iOS device.</para>
      </summary>
      <param name="image"></param>
      <param name="type"></param>
    </member>
    <member name="P:UnityEditor.PlayerSettings.MTRendering">
      <summary>
        <para>Is multi-threaded rendering enabled?</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4">
      <summary>
        <para>Player Settings for the PlayStation®4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4AppCategory">
      <summary>
        <para>PS4 application category.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4AppCategory.Application">
      <summary>
        <para>Application.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment">
      <summary>
        <para>PS4 enter button assignment.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment.CircleButton">
      <summary>
        <para>Circle button.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment.CrossButton">
      <summary>
        <para>Cross button.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment">
      <summary>
        <para>Remote Play key assignment.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.None">
      <summary>
        <para>No Remote play key assignment.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternA">
      <summary>
        <para>Remote Play key layout configuration A.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternB">
      <summary>
        <para>Remote Play key layout configuration B.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternC">
      <summary>
        <para>Remote Play key layout configuration C.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternD">
      <summary>
        <para>Remote Play key layout configuration D.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternE">
      <summary>
        <para>Remote Play key layout configuration E.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternF">
      <summary>
        <para>Remote Play key layout configuration F.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternG">
      <summary>
        <para>Remote Play key layout configuration G.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternH">
      <summary>
        <para>Remote Play key layout configuration H.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalCompilerArgumentsForGroup(UnityEditor.BuildTargetGroup,System.String[])">
      <summary>
        <para>Sets additional compiler arguments for a BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to set the additional compiler arguments for.</param>
      <param name="additionalCompilerArguments">An array of the additional compiler arguments.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalIl2CppArgs(System.String)">
      <summary>
        <para>IL2CPP build arguments.</para>
      </summary>
      <param name="additionalArgs"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.BuildTargetGroup,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>Sets .NET API compatibility level for specified BuildTargetGroup.</para>
      </summary>
      <param name="buildTargetGroup"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApplicationIdentifier(UnityEditor.BuildTargetGroup,System.String)">
      <summary>
        <para>Set the application identifier for the specified platform.</para>
      </summary>
      <param name="targetGroup"></param>
      <param name="identifier"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetArchitecture(UnityEditor.BuildTargetGroup,System.Int32)">
      <summary>
        <para>Sets the BuildTargetPlatformGroup architecture.</para>
      </summary>
      <param name="targetGroup"></param>
      <param name="architecture"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAspectRatio(UnityEditor.AspectRatio,System.Boolean)">
      <summary>
        <para>Enables the specified aspect ratio.</para>
      </summary>
      <param name="aspectRatio"></param>
      <param name="enable"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetGraphicsAPIs(UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsDeviceType[])">
      <summary>
        <para>Sets the graphics APIs used on a build platform.</para>
      </summary>
      <param name="platform">Platform to set APIs for.</param>
      <param name="apis">Array of graphics APIs.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[])">
      <summary>
        <para>Assign a list of icons for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="icons"></param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[],UnityEditor.IconKind)">
      <summary>
        <para>Assign a list of icons for the specified platform.</para>
      </summary>
      <param name="platform"></param>
      <param name="icons"></param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup,UnityEditor.Il2CppCompilerConfiguration)">
      <summary>
        <para>Sets compiler configuration used when compiling generated C++ code for a particular BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">Build target group.</param>
      <param name="configuration">Compiler configuration.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Sets incremental build flag.</para>
      </summary>
      <param name="targetGroup"></param>
      <param name="enabled"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.BuildTargetGroup,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Sets the managed code stripping level for specified BuildTargetGroup.</para>
      </summary>
      <param name="BuildTargetGroup">The platform build target group whose stripping level you want to set.</param>
      <param name="ManagedStrippingLevel">The desired managed code stripping level.</param>
      <param name="targetGroup"></param>
      <param name="level"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetMobileMTRendering(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Enable or disable multithreaded rendering option for mobile platform.</para>
      </summary>
      <param name="targetGroup">Mobile platform (Only iOS, tvOS and Android).</param>
      <param name="enable"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetNormalMapEncoding(UnityEditor.BuildTargetGroup,UnityEditor.NormalMapEncoding)">
      <summary>
        <para>Sets the normal map encoding for the given platform.</para>
      </summary>
      <param name="targetGroup">The platform build target group whose normal map encoding you want to set.</param>
      <param name="normalMapEncoding">The desired normal map encoding.</param>
      <param name="platform"></param>
      <param name="encoding"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind,UnityEditor.PlatformIcon[])">
      <summary>
        <para>Assign a list of icons for the specified platform and icon kind.</para>
      </summary>
      <param name="type">Each platform supports a different set of PlatformIconKind|icon kinds. These can be found in the specific platform namespace (for example iOSPlatformIconKind).</param>
      <param name="platform">The full list of platforms that support this API the supported  kinds can be found in PlatformIconKind|icon kinds.</param>
      <param name="icons">All available PlatformIcon slots must be retrieved with GetPlatformIcons.</param>
      <param name="kind"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPreloadedAssets(UnityEngine.Object[])">
      <summary>
        <para>Assigns the assets that will be loaded at start up in the player and be kept alive until the player terminates.</para>
      </summary>
      <param name="assets"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyBool(System.String,System.Boolean,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Sets a PlayerSettings named bool property.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Value of the property (bool).</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyInt(System.String,System.Int32,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Sets a PlayerSettings named int property.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Value of the property (int).</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyString(System.String,System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Sets a PlayerSettings named string property.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Value of the property (string).</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingBackend(UnityEditor.BuildTargetGroup,UnityEditor.ScriptingImplementation)">
      <summary>
        <para>Sets the scripting framework for a BuildTargetPlatformGroup.</para>
      </summary>
      <param name="targetGroup"></param>
      <param name="backend"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String)">
      <summary>
        <para>Set user-specified symbols for script compilation for the given build target group.</para>
      </summary>
      <param name="targetGroup">The name of the group of devices.</param>
      <param name="defines">Symbols for this group can be passed as an array or as a string separated by semicolons.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String[])">
      <summary>
        <para>Set user-specified symbols for script compilation for the given build target group.</para>
      </summary>
      <param name="targetGroup">The name of the group of devices.</param>
      <param name="defines">Symbols for this group can be passed as an array or as a string separated by semicolons.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderPrecisionModel(UnityEditor.ShaderPrecisionModel)">
      <summary>
        <para>Sets the shader precision model.</para>
      </summary>
      <param name="model">The new precision model to use.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetStackTraceLogType(UnityEngine.LogType,UnityEngine.StackTraceLogType)">
      <summary>
        <para>Set stack trace logging options.
Note: calling this function will implicitly call Application.SetStackTraceLogType.</para>
      </summary>
      <param name="logType"></param>
      <param name="stackTraceType"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetTemplateCustomValue(System.String,System.String)">
      <summary>
        <para>Sets a value of a custom template variable.</para>
      </summary>
      <param name="name">Name of the variable.</param>
      <param name="value">Value of the custom template variable.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Should a build platform use automatic graphics API choice.</para>
      </summary>
      <param name="platform">Platform to set the flag for.</param>
      <param name="automatic">Should best available graphics API be used?</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetVirtualRealitySupported(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Sets whether or not Virtual Reality Support is enabled for a given BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to set the value for.</param>
      <param name="value">The value to set, true to enable, false to disable.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetVirtualTexturingSupportEnabled(System.Boolean)">
      <summary>
        <para>Enable virtual texturing.</para>
      </summary>
      <param name="enabled">True to enable, false to disable.</param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen">
      <summary>
        <para>Interface to splash screen player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationBackgroundZoom">
      <summary>
        <para>The target zoom (from 0 to 1) for the background when it reaches the end of the SplashScreen animation's total duration. Only used when animationMode is PlayerSettings.SplashScreen.AnimationMode.Custom|AnimationMode.Custom.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationLogoZoom">
      <summary>
        <para>The target zoom (from 0 to 1) for the logo when it reaches the end of the logo animation's total duration. Only used when animationMode is PlayerSettings.SplashScreen.AnimationMode.Custom|AnimationMode.Custom.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationMode">
      <summary>
        <para>The type of animation applied during the splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.background">
      <summary>
        <para>The background Sprite that is shown in landscape mode. Also shown in portrait mode if backgroundPortrait is null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.backgroundColor">
      <summary>
        <para>The background color shown if no background Sprite is assigned. Default is a dark blue RGB(34.44,54).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.backgroundPortrait">
      <summary>
        <para>The background Sprite that is shown in portrait mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.blurBackgroundImage">
      <summary>
        <para>Determines whether Unity applies a blur effect to the background Sprite on the Splash Screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.drawMode">
      <summary>
        <para>Determines how the Unity logo should be drawn, if it is enabled. If no Unity logo exists in [logos] then the draw mode defaults to PlayerSettings.SplashScreen.DrawMode.UnityLogoBelow|DrawMode.UnityLogoBelow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.logos">
      <summary>
        <para>The collection of logos that is shown during the splash screen. Logos are drawn in ascending order, starting from index 0, followed by 1, etc etc.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.overlayOpacity">
      <summary>
        <para>In order to increase contrast between the background and the logos, an overlay color modifier is applied. The overlay opacity is the strength of this effect. Note: Reducing the value below 0.5 requires a Plus/Pro license.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.show">
      <summary>
        <para>Set this to true to display the Splash Screen be shown when the application is launched. Set it to false to disable the Splash Screen. Note: Disabling the Splash Screen requires a Plus/Pro license.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.showUnityLogo">
      <summary>
        <para>Set this to true to show the Unity logo during the Splash Screen. Set it to false to disable the Unity logo. Note: Disabling the Unity logo requires a Plus/Pro license.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.unityLogoStyle">
      <summary>
        <para>The style to use for the Unity logo during the Splash Screen.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.AnimationMode">
      <summary>
        <para>The type of animation applied during the Splash Screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Custom">
      <summary>
        <para>Animates the Splash Screen using custom values from PlayerSettings.SplashScreen.animationBackgroundZoom and PlayerSettings.SplashScreen.animationLogoZoom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Dolly">
      <summary>
        <para>Animates the Splash Screen with a simulated dolly effect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Static">
      <summary>
        <para>No animation is applied to the Splash Screen logo or background.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.DrawMode">
      <summary>
        <para>Determines how the Unity logo should be drawn, if it is enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.DrawMode.AllSequential">
      <summary>
        <para>The Unity logo is shown sequentially providing it exists in the PlayerSettings.SplashScreen.logos collection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.DrawMode.UnityLogoBelow">
      <summary>
        <para>The Unity logo is drawn in the lower portion of the screen for the duration of the Splash Screen, while the PlayerSettings.SplashScreen.logos are shown in the centre.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle">
      <summary>
        <para>The style to use for the Unity logo during the Splash Screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle.DarkOnLight">
      <summary>
        <para>A dark Unity logo with a light background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle.LightOnDark">
      <summary>
        <para>A white Unity logo with a dark background.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreenLogo">
      <summary>
        <para>A single logo that is shown during the Splash Screen. Controls the Sprite that is displayed and its duration.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.duration">
      <summary>
        <para>The total time in seconds for which the logo is shown. The minimum duration is 2 seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.logo">
      <summary>
        <para>The Sprite that is shown during this logo. If this is null, then no logo will be displayed for the duration.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.unityLogo">
      <summary>
        <para>The Unity logo Sprite.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SplashScreenLogo.Create(System.Single,UnityEngine.Sprite)">
      <summary>
        <para>Creates a new Splash Screen logo with the provided duration and logo Sprite.</para>
      </summary>
      <param name="duration">The total time in seconds that the logo will be shown. Note minimum time is 2 seconds.</param>
      <param name="logo">The logo Sprite to display.</param>
      <returns>
        <para>The new logo.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SplashScreenLogo.CreateWithUnityLogo(System.Single)">
      <summary>
        <para>Creates a new Splash Screen logo with the provided duration and the unity logo.</para>
      </summary>
      <param name="duration">The total time in seconds that the logo will be shown. Note minimum time is 2 seconds.</param>
      <returns>
        <para>The new logo.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch">
      <summary>
        <para>Nintendo Switch Player settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.ApplicationAttribute">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.Languages">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.LogoHandling">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.LogoType">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.RatingCategories">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.StartupUserAccount">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.TouchScreenUsage">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.tvOS">
      <summary>
        <para>tvOS specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.buildNumber">
      <summary>
        <para>The build number of the bundle</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.requireExtendedGameController">
      <summary>
        <para>Application requires extended game controller.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.sdkVersion">
      <summary>
        <para>Active tvOS SDK version used for build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.targetOSVersion">
      <summary>
        <para>Deployment minimal version of tvOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.targetOSVersionString">
      <summary>
        <para>Deployment minimal version of tvOS.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality">
      <summary>
        <para>Windows Mixed Reality specific Player Settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.VRWindowsMixedReality.depthBufferFormat">
      <summary>
        <para>Set the requested depth buffer format to either 16Bit or 24Bit.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.VRWindowsMixedReality.depthBufferSharingEnabled">
      <summary>
        <para>Toggle support for sharing the depth buffer between Unity and the OS. This allows for stability improvements when running in Windows Mixed Reality. For immersive headsets this allows the operating system to reproject the rendered scene when there is a loss of accuracy in tracking. For Holographic headsets this allows for the operating system to automatically set a focus point along the plane that intersects the most content in your scene.

        See Also:</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat">
      <summary>
        <para>Enumeration providing valid values for PlayerSettings.VRWindowsMixedReality.depthBufferFormat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat.DepthBufferFormat16Bit">
      <summary>
        <para>Set the Windows Mixed Reality depth buffer to 16 bits of depth. This will decrease the amount of memory (and possibly increase performance) at the expense of depth testing and precision.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat.DepthBufferFormat24Bit">
      <summary>
        <para>Set the Windows Mixed Reality depth buffer to 24 bits of depth. This will improve depth testing and precision at the expense of more memory.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WebGL">
      <summary>
        <para>WebGL specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.compressionFormat">
      <summary>
        <para>CompressionFormat defines the compression type that the WebGL resources are encoded to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.dataCaching">
      <summary>
        <para>Enables automatic caching of unityweb files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.debugSymbols">
      <summary>
        <para>Enables generation of debug symbols file in the build output directory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.decompressionFallback">
      <summary>
        <para>Include decompression fallback code for build files in the loader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.exceptionSupport">
      <summary>
        <para>Exception support for WebGL builds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.linkerTarget">
      <summary>
        <para>Allows you to specify the WebGLLinkerTarget|web build format that is used when you build your project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.memorySize">
      <summary>
        <para>Memory size for WebGL builds in Megabyte.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.nameFilesAsHashes">
      <summary>
        <para>Enables using MD5 hash of the uncompressed file contents as a filename for each file in the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.template">
      <summary>
        <para>Path to the WebGL template asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.threadsSupport">
      <summary>
        <para>Enable Multithreading support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.wasmArithmeticExceptions">
      <summary>
        <para>The trapping mode for WebAssembly code.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSA">
      <summary>
        <para>Windows Store Apps specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.enableIndependentInputSource">
      <summary>
        <para>Enable/Disable independent input source feature.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.enableLowLatencyPresentationAPI">
      <summary>
        <para>Enable/Disable low latency presentation API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.inputSource">
      <summary>
        <para>Where Unity gets input from.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.transparentSwapchain">
      <summary>
        <para>Sets AlphaMode on the swap chain to DXGI_ALPHA_MODE_PREMULTIPLIED.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSA.Declarations">
      <summary>
        <para>Windows Store Apps declarations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.Declarations.fileTypeAssociations">
      <summary>
        <para>Set information for file type associations.

For more information - https:msdn.microsoft.comlibrarywindowsappshh779671https:msdn.microsoft.comlibrarywindowsappshh779671.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.Declarations.protocolName">
      <summary>
        <para>
          Registers this application to be a default handler for specified URI scheme name.

          For example: if you specify myunitygame, your application can be run from other applications via the URI scheme myunitygame:. You can also test this using the Windows "Run" dialog box (invoked with Windows + R key).

          For more information https:msdn.microsoft.comlibrarywindowsappshh779670https:msdn.microsoft.comlibrarywindowsappshh779670.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetVisualAssetsImage(UnityEditor.PlayerSettings/WSAImageType,UnityEditor.PlayerSettings/WSAImageScale)">
      <summary>
        <para>Get path for image, that will be populated to the Visual Studio solution and the package manifest.</para>
      </summary>
      <param name="type"></param>
      <param name="scale"></param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetVisualAssetsImage(System.String,UnityEditor.PlayerSettings/WSAImageType,UnityEditor.PlayerSettings/WSAImageScale)">
      <summary>
        <para>Set path for image, that will be populated to the Visual Studio solution and the package manifest.</para>
      </summary>
      <param name="image"></param>
      <param name="type"></param>
      <param name="scale"></param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAFileTypeAssociations">
      <summary>
        <para>Describes File Type Association declaration.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAFileTypeAssociations.name">
      <summary>
        <para>Localizable string that will be displayed to the user as associated file handler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAFileTypeAssociations.supportedFileTypes">
      <summary>
        <para>Supported file types for this association.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAImageScale">
      <summary>
        <para>Various image scales, supported by Windows Store Apps.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAImageType">
      <summary>
        <para>Image types, supported by Windows Store Apps.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAInputSource">
      <summary>
        <para>Where Unity takes input from (subscripbes to events).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.CoreWindow">
      <summary>
        <para>Subscribe to CoreWindow events.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.IndependentInputSource">
      <summary>
        <para>Create Independent Input Source and receive input from it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.SwapChainPanel">
      <summary>
        <para>Subscribe to SwapChainPanel events.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSASupportedFileType">
      <summary>
        <para>Describes supported file type for File Type Association declaration.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSASupportedFileType.contentType">
      <summary>
        <para>The 'Content Type' value for the file type's MIME content type. For example: 'image/jpeg'. Can also be left blank.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSASupportedFileType.fileType">
      <summary>
        <para>File type extension. For ex., .myUnityGame</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.XboxOne">
      <summary>
        <para>Xbox One Specific Player Settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayModeStateChange">
      <summary>
        <para>Enumeration specifying a change in the Editor's play mode state.

See Also: PauseState, EditorApplication.playModeStateChanged, EditorApplication.isPlaying.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.EnteredEditMode">
      <summary>
        <para>Occurs during the next update of the Editor application if it is in edit mode and was previously in play mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.EnteredPlayMode">
      <summary>
        <para>Occurs during the next update of the Editor application if it is in play mode and was previously in edit mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.ExitingEditMode">
      <summary>
        <para>Occurs when exiting edit mode, before the Editor is in play mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.ExitingPlayMode">
      <summary>
        <para>Occurs when exiting play mode, before the Editor is in edit mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PluginImporter">
      <summary>
        <para>Represents plugin importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.isNativePlugin">
      <summary>
        <para>Is plugin native or managed? Note: C++ libraries with CLR support are treated as native plugins, because Unity cannot load such libraries. You can still access them via P/Invoke.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.isPreloaded">
      <summary>
        <para>Is a native plugin loaded during startup or on demand?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.ClearSettings">
      <summary>
        <para>Clear all plugin settings and set the compatability with Any Platform to true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.DefineConstraints">
      <summary>
        <para>Allows you to specify a list of #define directives which controls whether your plug-in should be included.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetAllImporters">
      <summary>
        <para>Returns all plugin importers for all platforms.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithAnyPlatform">
      <summary>
        <para>Checks whether a plugin is flagged as being compatible with Any Platform.</para>
      </summary>
      <returns>
        <para>True if the plugin is flagged as being compatible with Any Platform, otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithEditor">
      <summary>
        <para>Is plugin compatible with editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Is plugin compatible with specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(System.String)">
      <summary>
        <para>Is plugin compatible with specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetEditorData(System.String)">
      <summary>
        <para>Returns editor specific data for specified key.</para>
      </summary>
      <param name="key">Key value for data.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeEditorFromAnyPlatform">
      <summary>
        <para>Is Editor excluded when Any Platform is set to true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(System.String)">
      <summary>
        <para>Is platform excluded when Any Platform set to true.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Is platform excluded when Any Platform set to true.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetImporters(UnityEditor.BuildTarget)">
      <summary>
        <para>Returns all plugin importers for specfied platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">Name of the target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetImporters(System.String)">
      <summary>
        <para>Returns all plugin importers for specfied platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">Name of the target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetIsOverridable">
      <summary>
        <para>Identifies whether or not this plugin will be overridden if a plugin of the same name is placed in your project folder.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetPlatformData(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Get platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetPlatformData(System.String,System.String)">
      <summary>
        <para>Get platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="platformName"></param>
    </member>
    <member name="T:UnityEditor.PluginImporter.IncludeInBuildDelegate">
      <summary>
        <para>Delegate to be used with SetIncludeInBuildDelegate.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithAnyPlatform(System.Boolean)">
      <summary>
        <para>Sets compatibility with Any Platform.</para>
      </summary>
      <param name="enable">Determines whether the plugin is compatible with Any Platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithEditor(System.Boolean)">
      <summary>
        <para>Sets compatibility with any editor.</para>
      </summary>
      <param name="enable">Is plugin compatible with editor.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Sets compatibility with the specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="enable">Is plugin compatible with specified platform.</param>
      <param name="platformName">Target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(System.String,System.Boolean)">
      <summary>
        <para>Sets compatibility with the specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="enable">Is plugin compatible with specified platform.</param>
      <param name="platformName">Target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetEditorData(System.String,System.String)">
      <summary>
        <para>Sets editor specific data.</para>
      </summary>
      <param name="key">Key value for data.</param>
      <param name="value">Data.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeEditorFromAnyPlatform(System.Boolean)">
      <summary>
        <para>Exclude Editor from compatible platforms when Any Platform is set to true.</para>
      </summary>
      <param name="excludedFromAny"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(System.String,System.Boolean)">
      <summary>
        <para>Exclude platform from compatible platforms when Any Platform is set to true.</para>
      </summary>
      <param name="platformName">Target platform.</param>
      <param name="excludedFromAny"></param>
      <param name="platform"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Exclude platform from compatible platforms when Any Platform is set to true.</para>
      </summary>
      <param name="platformName">Target platform.</param>
      <param name="excludedFromAny"></param>
      <param name="platform"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetIncludeInBuildDelegate(UnityEditor.PluginImporter/IncludeInBuildDelegate)">
      <summary>
        <para>Setting the delegate function to be called by ShouldIncludeInBuild.</para>
      </summary>
      <param name="includeInBuildDelegate"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetPlatformData(UnityEditor.BuildTarget,System.String,System.String)">
      <summary>
        <para>Sets platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="value">Data.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetPlatformData(System.String,System.String,System.String)">
      <summary>
        <para>Sets platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="value">Data.</param>
      <param name="platformName"></param>
    </member>
    <member name="M:UnityEditor.PluginImporter.ShouldIncludeInBuild">
      <summary>
        <para>Identifies whether or not this plugin should be included in the current build target.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PopupWindow">
      <summary>
        <para>Class used to display popup windows that inherit from PopupWindowContent.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.OnDisable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.OnEnable">
      <summary>
        <para>See ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.Show(UnityEngine.Rect,UnityEditor.PopupWindowContent)">
      <summary>
        <para>Show a popup with the given PopupWindowContent.</para>
      </summary>
      <param name="activatorRect">The rect of the button that opens the popup.</param>
      <param name="windowContent">The content to show in the popup window.</param>
    </member>
    <member name="T:UnityEditor.PopupWindowContent">
      <summary>
        <para>Class used to implement content for a popup window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PopupWindowContent.editorWindow">
      <summary>
        <para>The EditorWindow that contains the popup content.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.GetWindowSize">
      <summary>
        <para>The size of the popup window.</para>
      </summary>
      <returns>
        <para>The size of the Popup window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnClose">
      <summary>
        <para>Callback when the popup window is closed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Callback for drawing GUI controls for the popup window.</para>
      </summary>
      <param name="rect">The rectangle to draw the GUI inside.</param>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnOpen">
      <summary>
        <para>Callback when the popup window is opened.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabAssetType">
      <summary>
        <para>Enum indicating the type of Prefab Asset, such as Regular, Model and Variant.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.MissingAsset">
      <summary>
        <para>The object being queried is part of a Prefab instance, but because the asset is missing the actual type of Prefab can’t be determined.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Model">
      <summary>
        <para>The object being queried is part of a Model Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.NotAPrefab">
      <summary>
        <para>The object being queried is not part of a Prefab at all.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Regular">
      <summary>
        <para>The object being queried is part of a regular Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Variant">
      <summary>
        <para>The object being queried is part of a Prefab Variant.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabInstanceStatus">
      <summary>
        <para>Enum with status about whether a Prefab instance is properly connected to its asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.Connected">
      <summary>
        <para>The Prefab instance is connected to its Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.Disconnected">
      <summary>
        <para>The Prefab instance is not connected to its Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.MissingAsset">
      <summary>
        <para>The Prefab instance is missing its Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.NotAPrefab">
      <summary>
        <para>The object is not part of a Prefab instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabType">
      <summary>
        <para>The type of a Prefab object as returned by PrefabUtility.GetPrefabType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.DisconnectedModelPrefabInstance">
      <summary>
        <para>The object is an instance of an imported 3D model, but the connection is broken.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.DisconnectedPrefabInstance">
      <summary>
        <para>The object is an instance of a user created Prefab, but the connection is broken.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.MissingPrefabInstance">
      <summary>
        <para>The object was an instance of a Prefab, but the original Prefab could not be found.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.ModelPrefab">
      <summary>
        <para>The object is an imported 3D model asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.ModelPrefabInstance">
      <summary>
        <para>The object is an instance of an imported 3D model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.None">
      <summary>
        <para>The object is not a Prefab nor an instance of a Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.Prefab">
      <summary>
        <para>The object is a user created Prefab asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.PrefabInstance">
      <summary>
        <para>The object is an instance of a user created Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabUnpackMode">
      <summary>
        <para>Enum used to determine how a Prefab should be unpacked.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUnpackMode.Completely">
      <summary>
        <para>Use this to strip away all Prefab information from a Prefab instance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUnpackMode.OutermostRoot">
      <summary>
        <para>Use this mode to only unpack the outermost layer of a Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabUtility">
      <summary>
        <para>Utility class for any Prefab related operations.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.prefabInstanceUpdated">
      <summary>
        <para>Called after Prefab instances in the Scene have been updated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedComponent(UnityEngine.Component,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies the added component to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="component">The added component on the Prefab instance to apply.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedGameObject(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies the added GameObject to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="gameObject">The added GameObject on the Prefab instance to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyObjectOverride(UnityEngine.Object,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies all overridden properties on a Prefab instance component or GameObject to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="instanceComponentOrGameObject">The object on the Prefab instance to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies all overrides on a Prefab instance to its Prefab Asset.</para>
      </summary>
      <param name="instanceRoot">The root of the given Prefab instance.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyPropertyOverride(UnityEditor.SerializedProperty,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies a single overridden property on a Prefab instance to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="instanceProperty">The SerializedProperty representing the property to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Removes the component from the Prefab Asset which has the component on it.</para>
      </summary>
      <param name="instanceGameObject">The GameObject on the Prefab instance which the component has been removed from.</param>
      <param name="assetComponent">The component on the Prefab Asset corresponding to the removed component on the instance.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ConnectGameObjectToPrefab(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Connects the source Prefab to the game object.</para>
      </summary>
      <param name="go">The disconnected GameObject that you want to reconnect.</param>
      <param name="sourcePrefab">The source Prefab to connect to the GameObject.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreateEmptyPrefab(System.String)">
      <summary>
        <para>Creates an empty Prefab at given path.</para>
      </summary>
      <param name="path">The asset path to use for the new empty Prefab.</param>
      <returns>
        <para>A reference to the new Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Creates a Prefab from a game object hierarchy.</para>
      </summary>
      <param name="path">The path where the Prefab is saved.</param>
      <param name="go">The GameObject that you want to create a Prefab from.</param>
      <param name="options"></param>
      <returns>
        <para>A reference to the created Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject,UnityEditor.ReplacePrefabOptions)">
      <summary>
        <para>Creates a Prefab from a game object hierarchy.</para>
      </summary>
      <param name="path">The path where the Prefab is saved.</param>
      <param name="go">The GameObject that you want to create a Prefab from.</param>
      <param name="options"></param>
      <returns>
        <para>A reference to the created Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.DisconnectPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Deprecated. As of 2018.3 this method does nothing.</para>
      </summary>
      <param name="targetObject"></param>
    </member>
    <member name="T:UnityEditor.PrefabUtility.EditPrefabContentsScope">
      <summary>
        <para>Disposable helper struct for automatically loading the contents of a Prefab file, saving the contents and unloading the contents again.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.EditPrefabContentsScope.assetPath">
      <summary>
        <para>File path of the Prefab asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.EditPrefabContentsScope.prefabContentsRoot">
      <summary>
        <para>The root GameObject of the Prefab contents.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PrefabUtility.EditPrefabContentsScope.#ctor(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="assetPath">File path of a Prefab Asset.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindPrefabRoot(UnityEngine.GameObject)">
      <summary>
        <para>Returns the root GameObject of the Prefab that the supplied GameObject is part of.</para>
      </summary>
      <param name="source">The object to check.</param>
      <returns>
        <para>The Prefab root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindRootGameObjectWithSameParentPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Returns the topmost GameObject that has the same Prefab parent as target.</para>
      </summary>
      <param name="target">The GameObject to use in the search.</param>
      <returns>
        <para>The GameObject at the root of the Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindValidUploadPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Returns the root GameObject of the Prefab instance if that root Prefab instance is a parent of the Prefab.</para>
      </summary>
      <param name="target">GameObject to process.</param>
      <returns>
        <para>Return the root game object of the Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetAddedComponents(UnityEngine.GameObject)">
      <summary>
        <para>Returns a list of PrefabUtility.AddedComponent objects which contain information about added component overrides on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <returns>
        <para>List of objects with information about added components.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetAddedGameObjects(UnityEngine.GameObject)">
      <summary>
        <para>Returns a list of PrefabUtility.AddedGameObject objects which contain information about added GameObjects on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <returns>
        <para>List of objects with information about added GameObjects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromOriginalSource(TObject)">
      <summary>
        <para>Returns the object of origin for the given object.</para>
      </summary>
      <param name="componentOrGameObject">The object to find the corresponding original object from.</param>
      <returns>
        <para>The corresponding object from the original source or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSource(TObject)">
      <summary>
        <para>Returns the corresponding asset object of source, or null if it can't be found.</para>
      </summary>
      <param name="componentOrGameObject">The object to find the corresponding object from.</param>
      <returns>
        <para>The corresponding object or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSourceAtPath(TObject,System.String)">
      <summary>
        <para>Returns the corresponding object of the given object from a given Prefab Asset path.</para>
      </summary>
      <param name="componentOrGameObject">The object to find the corresponding object from.</param>
      <param name="assetPath">The asset path of the Prefab Asset to get the corresponding object from.</param>
      <returns>
        <para>The corresponding object or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetIconForGameObject(UnityEngine.GameObject)">
      <summary>
        <para>Returns the icon for the given GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to get an icon for.</param>
      <returns>
        <para>The icon for the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetNearestPrefabInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Return the GameObject that is the root of the nearest Prefab instance the object is part of.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>The nearest Prefab instance root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetObjectOverrides(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Returns a list of objects with information about object overrides on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <param name="includeDefaultOverrides">If true, components will also be included even if they only contain overrides that are PrefabUtility.IsDefaultOverride|default overrides. False by default.</param>
      <returns>
        <para>List of objects with information about object overrides.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetOutermostPrefabInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Returns the GameObject that is the root of the outermost Prefab instance the object is part of.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>The outermost Prefab instance root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabAssetPathOfNearestInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Returns the asset path of the nearest Prefab instance root the specified object is part of.</para>
      </summary>
      <param name="instanceComponentOrGameObject">An object in the Prefab instance to get the asset path of.</param>
      <returns>
        <para>The asset path.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabAssetType(UnityEngine.Object)">
      <summary>
        <para>Enum value indicating the type of Prefab Asset, such as Regular Prefab, Model Prefab and Prefab Variant.</para>
      </summary>
      <param name="componentOrGameObject">An object that is part of a Prefab Asset or Prefab instance.</param>
      <returns>
        <para>The type of Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceHandle(UnityEngine.Object)">
      <summary>
        <para>This function will give you the PrefabInstance object for the outermost Prefab instance the provided object is part of.</para>
      </summary>
      <param name="instanceComponentOrGameObject">An object from the Prefab instance.</param>
      <returns>
        <para>The Prefab instance handle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceStatus(UnityEngine.Object)">
      <summary>
        <para>Enum value with status about whether a Prefab instance is properly connected to its asset.</para>
      </summary>
      <param name="componentOrGameObject">An object that is part of a Prefab instance.</param>
      <returns>
        <para>The status of the Prefab instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabObject(UnityEngine.Object)">
      <summary>
        <para>Retrieves the enclosing Prefab for any object contained within.</para>
      </summary>
      <param name="targetObject">An object contained within a Prefab object.</param>
      <returns>
        <para>The Prefab the object is contained in.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabParent(UnityEngine.Object)">
      <summary>
        <para>Returns the parent asset object of source, or null if it can't be found.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabType(UnityEngine.Object)">
      <summary>
        <para>Given an object, returns its Prefab type (None, if it's not a Prefab).</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPropertyModifications(UnityEngine.Object)">
      <summary>
        <para>Extract all modifications that are applied to the Prefab instance compared to the parent Prefab.</para>
      </summary>
      <param name="targetPrefab"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetRemovedComponents(UnityEngine.GameObject)">
      <summary>
        <para>Returns a list of objects with information about removed component overrides on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <returns>
        <para>List of objects with information about removed components.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.HasPrefabInstanceAnyOverrides(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Returns true if the given Prefab instance has any overrides.</para>
      </summary>
      <param name="instanceRoot">The root GameObject of the Prefab instance to check.</param>
      <param name="includeDefaultOverrides">Set to true to consider default overrides as overrides too.</param>
      <returns>
        <para>Returns true if there are any overrides.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiateAttachedAsset(UnityEngine.Object)">
      <summary>
        <para>Instantiate an asset that is referenced by a Prefab and use it on the Prefab instance.</para>
      </summary>
      <param name="targetObject"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object)">
      <summary>
        <para>Instantiates the given Prefab in a given Scene.</para>
      </summary>
      <param name="target">Prefab Asset to instantiate.</param>
      <param name="destinationScene">Scene to instantiate the Prefab in.</param>
      <param name="assetComponentOrGameObject"></param>
      <returns>
        <para>The GameObject at the root of the Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Instantiates the given Prefab in a given Scene.</para>
      </summary>
      <param name="target">Prefab Asset to instantiate.</param>
      <param name="destinationScene">Scene to instantiate the Prefab in.</param>
      <param name="assetComponentOrGameObject"></param>
      <returns>
        <para>The GameObject at the root of the Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAddedComponentOverride(UnityEngine.Object)">
      <summary>
        <para>Is this component added to a Prefab instance as an override?</para>
      </summary>
      <param name="component">The component to check.</param>
      <returns>
        <para>True if the component is an added component.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAddedGameObjectOverride(UnityEngine.GameObject)">
      <summary>
        <para>Is this GameObject added as a child to a Prefab instance as an override?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is an added GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAnyPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Is the GameObject the root of any Prefab instance?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is the root GameObject of any Prefab instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsDefaultOverride(UnityEditor.PropertyModification)">
      <summary>
        <para>Returns true if the given modification is considered a PrefabUtility.IsDefaultOverride|default override.</para>
      </summary>
      <param name="modification">The modification for the property in question.</param>
      <returns>
        <para>True if the property is a default override.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsDisconnectedFromPrefabAsset(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of an instance where the PrefabInstance object is missing but the given object has a valid corresponding object.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a GameObject or component.</param>
      <returns>
        <para>True if the instance is disconnected.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsOutermostPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Is the GameObject the root of a Prefab instance, excluding nested Prefabs?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is an outermost Prefab instance root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfAnyPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of any kind of Prefab.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object s part of a Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfImmutablePrefab(UnityEngine.Object)">
      <summary>
        <para>Is this object part of a Prefab that cannot be edited?</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab that cannot be edited.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfModelPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Model Prefab Asset or Model Prefab instance.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a Model Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfNonAssetPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab instance and not part of an asset.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab instance that's not inside a Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabAsset(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True is the object is part of a Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab instance.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabThatCanBeAppliedTo(UnityEngine.Object)">
      <summary>
        <para>Is this object part of a Prefab that cannot be applied to?</para>
      </summary>
      <param name="gameObjectOrComponent">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab that cannot be applied to.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfRegularPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a regular Prefab instance or Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a regular Prefab instance or Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfVariantPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab Variant Asset or Prefab Variant instance.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a Prefab Variant.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPrefabAssetMissing(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab instance but the source asset is missing.</para>
      </summary>
      <param name="instanceComponentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a Prefab instance but the source asset is missing.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.LoadPrefabContents(System.String)">
      <summary>
        <para>Loads a Prefab Asset at a given path into an isolated Scene and returns the root GameObject of the Prefab.</para>
      </summary>
      <param name="assetPath">The path of the Prefab Asset to load the contents of.</param>
      <returns>
        <para>The root of the loaded contents.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.LoadPrefabContentsIntoPreviewScene(System.String,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Loads a Prefab Asset at a given path into a given preview Scene and returns the root GameObject of the Prefab.</para>
      </summary>
      <param name="scene">The Scene to load the contents into.</param>
      <param name="prefabPath">The path of the Prefab Asset to load the contents of.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.MergeAllPrefabInstances(UnityEngine.Object)">
      <summary>
        <para>Force re-merging all Prefab instances of this Prefab.</para>
      </summary>
      <param name="targetObject"></param>
    </member>
    <member name="T:UnityEditor.PrefabUtility.PrefabInstanceUpdated">
      <summary>
        <para>Delegate for method that is called after Prefab instances in the Scene have been updated.</para>
      </summary>
      <param name="instance"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReconnectToLastPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Connects the game object to the Prefab that it was last connected to.</para>
      </summary>
      <param name="go"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RecordPrefabInstancePropertyModifications(UnityEngine.Object)">
      <summary>
        <para>Causes modifications made to the Prefab instance to be recorded.</para>
      </summary>
      <param name="targetObject">Object to process.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object)">
      <summary>
        <para>Replaces the targetPrefab with a copy of the game object hierarchy go.</para>
      </summary>
      <param name="go"></param>
      <param name="targetPrefab"></param>
      <param name="replaceOptions"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object,UnityEditor.ReplacePrefabOptions)">
      <summary>
        <para>Replaces the targetPrefab with a copy of the game object hierarchy go.</para>
      </summary>
      <param name="go"></param>
      <param name="targetPrefab"></param>
      <param name="replaceOptions"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ResetToPrefabState(UnityEngine.Object)">
      <summary>
        <para>Resets the properties of the component or game object to the parent Prefab state.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertAddedComponent(UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Removes this added component on a Prefab instance.</para>
      </summary>
      <param name="component">The added component on the Prefab instance to revert.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertAddedGameObject(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Removes this added GameObject from a Prefab instance.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="gameObject">The added GameObject on the Prefab instance to revert.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertObjectOverride(UnityEngine.Object,UnityEditor.InteractionMode)">
      <summary>
        <para>Reverts all overridden properties on a Prefab instance component or GameObject.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="instanceComponentOrGameObject">The object on the Prefab instance to revert.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject)">
      <summary>
        <para>Reverts all overrides on a Prefab instance.</para>
      </summary>
      <param name="instanceRoot">The root of the Prefab instance.</param>
      <param name="action">The interaction mode for this action.</param>
      <param name="go"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Reverts all overrides on a Prefab instance.</para>
      </summary>
      <param name="instanceRoot">The root of the Prefab instance.</param>
      <param name="action">The interaction mode for this action.</param>
      <param name="go"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPropertyOverride(UnityEditor.SerializedProperty,UnityEditor.InteractionMode)">
      <summary>
        <para>Revert a single property override on a Prefab instance.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="instanceProperty">The SerializedProperty representing the property to revert.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Adds this removed component back on the Prefab instance.</para>
      </summary>
      <param name="assetComponent">The removed component on the Prefab instance to revert.</param>
      <param name="action">The interaction mode for this action.</param>
      <param name="instanceGameObject">The GameObject on the Prefab instance which the component has been removed from.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject, including any childen in the Scene without modifying the input objects.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab Asset.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String,System.Boolean&amp;)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject, including any childen in the Scene without modifying the input objects.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab Asset.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject including any children in the Scene and at the same time make the given GameObject into an instance of the new Prefab.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab and make into a Prefab instance.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="action">The interaction mode to use for this action.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode,System.Boolean&amp;)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject including any children in the Scene and at the same time make the given GameObject into an instance of the new Prefab.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab and make into a Prefab instance.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="action">The interaction mode to use for this action.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject)">
      <summary>
        <para>Use this function to save the version of an existing Prefab Asset that exists in memory back to disk.</para>
      </summary>
      <param name="asset">Any GameObject that is part of the Prefab Asset to save.</param>
      <param name="savedSuccessfully">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject,System.Boolean&amp;)">
      <summary>
        <para>Use this function to save the version of an existing Prefab Asset that exists in memory back to disk.</para>
      </summary>
      <param name="asset">Any GameObject that is part of the Prefab Asset to save.</param>
      <param name="savedSuccessfully">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SetPropertyModifications(UnityEngine.Object,UnityEditor.PropertyModification[])">
      <summary>
        <para>Assigns all modifications that are applied to the Prefab instance compared to the parent Prefab.</para>
      </summary>
      <param name="targetPrefab"></param>
      <param name="modifications"></param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnloadPrefabContents(UnityEngine.GameObject)">
      <summary>
        <para>Releases the content from a Prefab previously loaded with LoadPrefabContents from memory.</para>
      </summary>
      <param name="contentsRoot">The root of the loaded Prefab contents.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstance(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode,UnityEditor.InteractionMode)">
      <summary>
        <para>Unpacks a given Prefab instance so that it is replaced with the contents of the Prefab Asset while retaining all override values.</para>
      </summary>
      <param name="instanceRoot">The root of the Prefab instance to unpack.</param>
      <param name="unpackMode">Whether to unpack the outermost root or unpack completely.</param>
      <param name="action">The interaction mode to use for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstanceAndReturnNewOutermostRoots(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode)">
      <summary>
        <para>This function will unpack the given Prefab instance using the behaviour specified by unpackMode.</para>
      </summary>
      <param name="instanceRoot">Root GameObject of the Prefab instance.</param>
      <param name="unpackMode">The unpack mode to use.</param>
      <returns>
        <para>Array of GameObjects representing roots of unpacked Prefab instances.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PreferenceItem">
      <summary>
        <para>(Obsolete: use the SettingsProvider class instead) The PreferenceItem attribute allows you to add preferences sections to the Preferences window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PreferenceItem.#ctor(System.String)">
      <summary>
        <para>Creates a section in the Settings Window called name and invokes the static function following it for the section's GUI.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="T:UnityEditor.PreprocessorOverride">
      <summary>
        <para>Sets the preprocessor that Unity uses to compile this shader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.ForceCachingPreprocessor">
      <summary>
        <para>Use the Caching Shader Preprocessor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.ForcePlatformPreprocessor">
      <summary>
        <para>Use the platform compilers' preprocessors.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.UseProjectSettings">
      <summary>
        <para>Use the preprocessor defined in your Project's Editor Settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Presets.DefaultPreset">
      <summary>
        <para>This structure defines a default Preset.
See Preset.GetDefaultListForType and Preset.SetDefaultListForType for usage.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.enabled">
      <summary>
        <para>Set this value to false to disable this DefaultPreset setting from the default preset list without removing it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.filter">
      <summary>
        <para>The search filter that is compared against the object instance. The DefaultPreset.m_Preset is applied to the object instance if it matches the search filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Presets.DefaultPreset.m_Filter">
      <summary>
        <para>The search filter that is compared against the object instance. The DefaultPreset.m_Preset is applied to the object instance if it matches the search filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Presets.DefaultPreset.m_Preset">
      <summary>
        <para>The Preset applied to an object instance when it matches the search filter defined by DefaultPreset.m_Filter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.preset">
      <summary>
        <para>The Preset applied to an object instance when it matches the search filter defined by DefaultPreset.m_Filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Presets.DefaultPresetSelectorReceiver">
      <summary>
        <para>Basic implementation of the PresetSelectorReceiver.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.DefaultPresetSelectorReceiver.OnSelectionChanged(UnityEditor.Presets.Preset)">
      <summary>
        <para>Applies the Preset to each target. If Preset is null, this method reverts the value of each target.</para>
      </summary>
      <param name="selection"></param>
    </member>
    <member name="M:UnityEditor.Presets.DefaultPresetSelectorReceiver.OnSelectionClosed(UnityEditor.Presets.Preset)">
      <summary>
        <para>Applies the current selection and then destroys itself.</para>
      </summary>
      <param name="selection"></param>
    </member>
    <member name="T:UnityEditor.Presets.Preset">
      <summary>
        <para>A Preset contains default values for an Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.Preset.excludedProperties">
      <summary>
        <para>List of properties to ignore when applying the Preset to an object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.ApplyTo(UnityEngine.Object)">
      <summary>
        <para>Applies this Preset to the target object.</para>
      </summary>
      <param name="target">The target object that will be updated with the Preset serialized values.</param>
      <param name="selectedPropertyPaths">Optional list of property names that are applied to the target.</param>
      <returns>
        <para>Returns true if the target object was successfully updated by the Preset, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.ApplyTo(UnityEngine.Object,System.String[])">
      <summary>
        <para>Applies this Preset to the target object.</para>
      </summary>
      <param name="target">The target object that will be updated with the Preset serialized values.</param>
      <param name="selectedPropertyPaths">Optional list of property names that are applied to the target.</param>
      <returns>
        <para>Returns true if the target object was successfully updated by the Preset, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.CanBeAppliedTo(UnityEngine.Object)">
      <summary>
        <para>Returns true if this Preset can be applied to the target Object.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.#ctor(UnityEngine.Object)">
      <summary>
        <para>Constructs a new Preset from a given Object.</para>
      </summary>
      <param name="source">Used by the Preset to know its target type and serialized values.</param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.DataEquals(UnityEngine.Object)">
      <summary>
        <para>Determines if the target object has the same serialized values as the Preset.</para>
      </summary>
      <param name="target">The target object to be compared against the Preset.</param>
      <returns>
        <para>Returns true when the target object has the same serialized values as the Preset. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetAllDefaultTypes">
      <summary>
        <para>Returns all the PresetType that have at least one DefaultPreset entry in the default Presets list.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultForObject(UnityEngine.Object)">
      <summary>
        <para>Returns the current default Preset assigned to the same Object type. Returns null if there is no matching default.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultForPreset(UnityEditor.Presets.Preset)">
      <summary>
        <para>Returns the current default Preset assigned to the same Preset type. Returns null if there is no matching default.</para>
      </summary>
      <param name="preset"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultPresetsForObject(UnityEngine.Object)">
      <summary>
        <para>Gets the ordered list of Presets that set its default values when applied to the target.</para>
      </summary>
      <param name="target">The object instance tested against each DefaultPreset.m_Filter search filter.</param>
      <returns>
        <para>Returns an ordered list of Presets that match the specified target.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultPresetsForType(UnityEditor.Presets.PresetType)">
      <summary>
        <para>Gets an ordered list of DefaultPreset based on the specified PresetType.</para>
      </summary>
      <param name="type">A valid default PresetType.</param>
      <returns>
        <para>Returns a list of DefaultPreset from the PresetManager that match the specified PresetType.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetPresetType">
      <summary>
        <para>Returns the PresetType of this Preset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetTargetFullTypeName">
      <summary>
        <para>Returns a human readable string of this Preset's target fulltype, including namespace.</para>
      </summary>
      <returns>
        <para>Fullname of the Preset's target type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetTargetTypeName">
      <summary>
        <para>Returns a human readable string of this Preset's target type.</para>
      </summary>
      <returns>
        <para>Fullname of the Preset's target type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsObjectExcludedFromDefaultPresets(UnityEngine.Object)">
      <summary>
        <para>Returns true if this Object cannot have a default Preset.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsObjectExcludedFromPresets(UnityEngine.Object)">
      <summary>
        <para>Returns true if this Object is not available in the Preset system.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsPresetExcludedFromDefaultPresets(UnityEditor.Presets.Preset)">
      <summary>
        <para>Returns true if this Preset cannot be set as the default.</para>
      </summary>
      <param name="preset"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsValid">
      <summary>
        <para>Returns true if the Preset type of this Preset is valid.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.Preset.PropertyModifications">
      <summary>
        <para>Returns a copy of the PropertyModification array owned by this Preset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.RemoveFromDefault(UnityEditor.Presets.Preset)">
      <summary>
        <para>Remove the Preset type from having default values in the project.</para>
      </summary>
      <param name="preset"></param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.SetAsDefault(UnityEditor.Presets.Preset)">
      <summary>
        <para>Sets the Preset as the default for its target type in the project.</para>
      </summary>
      <param name="preset">The Preset asset to set as the default.</param>
      <returns>
        <para>Returns true if the Preset is successfully set as the default, or false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.SetDefaultPresetsForType(UnityEditor.Presets.PresetType,UnityEditor.Presets.DefaultPreset[])">
      <summary>
        <para>Sets a default list of Presets with a filter for a specific PresetType.</para>
      </summary>
      <param name="type">A valid default PresetType.</param>
      <param name="presets">An ordered list of DefaultPreset.</param>
      <returns>
        <para>Returns true if the list was set as default. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.UpdateProperties(UnityEngine.Object)">
      <summary>
        <para>Updates this Preset's properties from the given Object's values. The given Object's type must match this Preset's type.</para>
      </summary>
      <param name="source">Used by the Preset to get its new serialized values.</param>
      <returns>
        <para>Returns true if the Preset was updated, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Presets.PresetSelector">
      <summary>
        <para>This class implements a modal window that selects a Preset asset from the Project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.DrawPresetButton(UnityEngine.Rect,UnityEngine.Object[])">
      <summary>
        <para>Draw a Preset button that opens the default PresetSelector using the targets array.</para>
      </summary>
      <param name="rectangle">The Rect where the PresetSelector icon is drawn.</param>
      <param name="targets">List of objects to which the selected Preset is applied.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEngine.Object[],UnityEditor.Presets.Preset,System.Boolean)">
      <summary>
        <para>Opens a modal window for selecting a Preset.</para>
      </summary>
      <param name="targets">List of objects to which the selected Preset is applied. DefaultPresetSelectorReceiver applies the Preset selection.</param>
      <param name="currentSelection">The selected Preset when the window is opened. Set to 'null' for no selection.</param>
      <param name="createNewAllowed">Set to true to show the 'Save current to...' button. Set to false to hide this button.</param>
      <param name="target">Object that identifies the type of Preset asset being selected. The modal window filters the selector view based on this object.</param>
      <param name="eventReceiver">The PresetSelectorReceiver instance that the PresetSelector uses to send events.</param>
      <param name="presetType">Filters the list of Presets based on a specific PresetType. Use this param to set the PresetType when no target is specified.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEngine.Object,UnityEditor.Presets.Preset,System.Boolean,UnityEditor.Presets.PresetSelectorReceiver)">
      <summary>
        <para>Opens a modal window for selecting a Preset.</para>
      </summary>
      <param name="targets">List of objects to which the selected Preset is applied. DefaultPresetSelectorReceiver applies the Preset selection.</param>
      <param name="currentSelection">The selected Preset when the window is opened. Set to 'null' for no selection.</param>
      <param name="createNewAllowed">Set to true to show the 'Save current to...' button. Set to false to hide this button.</param>
      <param name="target">Object that identifies the type of Preset asset being selected. The modal window filters the selector view based on this object.</param>
      <param name="eventReceiver">The PresetSelectorReceiver instance that the PresetSelector uses to send events.</param>
      <param name="presetType">Filters the list of Presets based on a specific PresetType. Use this param to set the PresetType when no target is specified.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEditor.Presets.PresetType,UnityEditor.Presets.Preset,System.Boolean,UnityEditor.Presets.PresetSelectorReceiver)">
      <summary>
        <para>Opens a modal window for selecting a Preset.</para>
      </summary>
      <param name="targets">List of objects to which the selected Preset is applied. DefaultPresetSelectorReceiver applies the Preset selection.</param>
      <param name="currentSelection">The selected Preset when the window is opened. Set to 'null' for no selection.</param>
      <param name="createNewAllowed">Set to true to show the 'Save current to...' button. Set to false to hide this button.</param>
      <param name="target">Object that identifies the type of Preset asset being selected. The modal window filters the selector view based on this object.</param>
      <param name="eventReceiver">The PresetSelectorReceiver instance that the PresetSelector uses to send events.</param>
      <param name="presetType">Filters the list of Presets based on a specific PresetType. Use this param to set the PresetType when no target is specified.</param>
    </member>
    <member name="T:UnityEditor.Presets.PresetSelectorReceiver">
      <summary>
        <para>Implement this class to control the selection change when selecting a Preset in the PresetSelector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelectorReceiver.OnSelectionChanged(UnityEditor.Presets.Preset)">
      <summary>
        <para>When a new Preset is selected in the modal window, this method is called by PresetSelector.</para>
      </summary>
      <param name="selection">This parameter is set to null when 'None' is the new selection in the PresetSelector.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelectorReceiver.OnSelectionClosed(UnityEditor.Presets.Preset)">
      <summary>
        <para>This method is called by the PresetSelector when the modal window is closed.</para>
      </summary>
      <param name="selection"></param>
    </member>
    <member name="T:UnityEditor.Presets.PresetType">
      <summary>
        <para>Stores a type to which a Preset can be applied.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.GetManagedTypeName">
      <summary>
        <para>Retrieves a human readable namespace and the name of the target class, regardless of whether it's a managed C# class or a native C++ class.</para>
      </summary>
      <returns>
        <para>Returns the full namespace and type of the target class.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.IsValid">
      <summary>
        <para>Checks whether a PresetType corresponds with a valid native or managed class.</para>
      </summary>
      <returns>
        <para>Returns true if the PresetType is valid. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.IsValidDefault">
      <summary>
        <para>Checks whether a PresetType can be used within the DefaultPreset system.</para>
      </summary>
      <returns>
        <para>Returns true if the PresetType is a valid default type. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView">
      <summary>
        <para>Base funtionality for accessing the Profiler data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameFps">
      <summary>
        <para>The current frames per second (FPS) for the frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameGpuTimeMs">
      <summary>
        <para>The amount of GPU frame time in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameGpuTimeNs">
      <summary>
        <para>The amount of GPU frame time in nanoseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameIndex">
      <summary>
        <para>The frame index for the FrameDataView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameStartTimeMs">
      <summary>
        <para>The start time of CPU frame in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameStartTimeNs">
      <summary>
        <para>The start time of CPU frame in nanoseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameTimeMs">
      <summary>
        <para>The amount of CPU frame time in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameTimeNs">
      <summary>
        <para>The amount of CPU frame time in nanoseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidMarkerId">
      <summary>
        <para>Identifier of the invalid marker.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.maxDepth">
      <summary>
        <para>Maximum child samples levels in the thread data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.sampleCount">
      <summary>
        <para>The amount of samples in the frame for the thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadGroupName">
      <summary>
        <para>The name of the group that the thread belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadId">
      <summary>
        <para>Persistent identifier associated with the thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadIndex">
      <summary>
        <para>The index of the thread in the current frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadName">
      <summary>
        <para>Name of the thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.valid">
      <summary>
        <para>True after the frame data for the thread is processed and ready for retrieval.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetAllCategories(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.ProfilerCategoryInfo&gt;)">
      <summary>
        <para>Gets all the available Profiler Categories for the current profiling session.</para>
      </summary>
      <param name="categoryInfoList">List filled with ProfilerCategoryInfo.</param>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCategoryInfo(System.UInt16)">
      <summary>
        <para>Gets the Profiler category information for a given category ID.</para>
      </summary>
      <param name="id">The ID for the Category.</param>
      <returns>
        <para>Returns a ProfilerCategoryInfo struct based on the supplied ID. If the ID doesn't exist, an exception is thrown.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsDouble(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as a double data type'.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as double.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsFloat(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as a float data type'.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsInt(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as an int data type'.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsLong(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as a long data type.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValuePtr(System.Int32)">
      <summary>
        <para>Gets unsafe pointer to the last value of a counter marker in the frame.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns unsafe pointer to the counter value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaData(System.Guid,System.Int32)">
      <summary>
        <para>Retrieves metadata associated with the frame.</para>
      </summary>
      <param name="id">Project or package identifier.</param>
      <param name="tag">Data stream index.</param>
      <param name="index">Chunk index.</param>
      <returns>
        <para>Returns the frame metadata as a NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaData(System.Guid,System.Int32,System.Int32)">
      <summary>
        <para>Retrieves metadata associated with the frame.</para>
      </summary>
      <param name="id">Project or package identifier.</param>
      <param name="tag">Data stream index.</param>
      <param name="index">Chunk index.</param>
      <returns>
        <para>Returns the frame metadata as a NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaDataCount(System.Guid,System.Int32)">
      <summary>
        <para>Gets the total number of metadata chunks for each id and tag pair in the frame.</para>
      </summary>
      <param name="id">Project or package identifier.</param>
      <param name="tag">Data stream index.</param>
      <returns>
        <para>Returns count of metadata chunks.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerCategoryIndex(System.Int32)">
      <summary>
        <para>Gets Profiler marker category for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns Profiler category index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerFlags(System.Int32)">
      <summary>
        <para>Gets Profiler marker flags for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns Profiler marker flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerId(System.String)">
      <summary>
        <para>Get Profiler marker identifier for a specific name.</para>
      </summary>
      <param name="markerName">Marker name.</param>
      <returns>
        <para>Returns marker identifier as integer. Returns invalidMarkerId if there is no such marker in the capture.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerMetadataInfo(System.Int32)">
      <summary>
        <para>Gets Profiler marker metadata information for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns an array of metadata information structures.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerName(System.Int32)">
      <summary>
        <para>Gets Profiler marker name for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns marker name. Returns null if identifier is unknown.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkers(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.FrameDataView/MarkerInfo&gt;)">
      <summary>
        <para>Gets all available markers for the current profiling session.</para>
      </summary>
      <param name="markerInfoList">List filled with marker descriptors.</param>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.HasCounterValue(System.Int32)">
      <summary>
        <para>Returns true for a marker that includes a counter in the active frame.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MarkerInfo">
      <summary>
        <para>Marker descriptor structure.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.category">
      <summary>
        <para>Marker category.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.flags">
      <summary>
        <para>Marker flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.id">
      <summary>
        <para>Marker identifier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.metadataInfo">
      <summary>
        <para>Metadata information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.name">
      <summary>
        <para>Marker name.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo">
      <summary>
        <para>Marker metadata descriptor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.name">
      <summary>
        <para>Metadata parameter name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.type">
      <summary>
        <para>Metadata type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.unit">
      <summary>
        <para>Metadata unit.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MethodInfo">
      <summary>
        <para>Managed method descriptor structure.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.methodName">
      <summary>
        <para>Fully qualified method name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.sourceFileLine">
      <summary>
        <para>Line number in the source file where the method is defined.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.sourceFileName">
      <summary>
        <para>Name of a source file where the method is defined.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.ResolveMethodInfo(System.UInt64)">
      <summary>
        <para>Returns method name and location information for the specified method address.</para>
      </summary>
      <param name="addr">Instruction pointer.</param>
      <returns>
        <para>Method name and location information.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.HierarchyFrameDataView">
      <summary>
        <para>Provides access to the Profiler data for a specific frame and thread.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnCalls">
      <summary>
        <para>The Calls column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnDontSort">
      <summary>
        <para>The column identifier that indicates whether sorting is disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnGcMemory">
      <summary>
        <para>The GC Allocation column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnName">
      <summary>
        <para>The Profiler Sample Name column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnObjectName">
      <summary>
        <para>The Object Name column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnSelfPercent">
      <summary>
        <para>The percentage of the time CPU spends in a call itself.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnSelfTime">
      <summary>
        <para>The amount of the time CPU spends in a call itself. The amount of time is expressed in milliseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnStartTime">
      <summary>
        <para>The start time of a call in milliseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnTotalPercent">
      <summary>
        <para>The percentage of time the CPU spends in a call hierarchy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnTotalTime">
      <summary>
        <para>The amount of time the CPU spends in a call hierarchy. The amount of time is expressed in milliseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnWarningCount">
      <summary>
        <para>The amount of samples that are inside a code execution path that is suboptimal for performance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.invalidSampleId">
      <summary>
        <para>Index of the invalid item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.sortColumn">
      <summary>
        <para>The column identifier that defines the sort column.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.sortColumnAscending">
      <summary>
        <para>Whether the sorting order is ascending, true, or descending, false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.viewMode">
      <summary>
        <para>The view mode which defines how data is aggregated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemAncestors(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves a list of hierarchy item ancestors.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outAncestors">List filled with item ancestor identifiers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemCallstack(System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Gets the callstack associated with the specified hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outCallstack">List filled with callstack pointers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemCategoryIndex(System.Int32)">
      <summary>
        <para>Gets Profiler marker category for the specific marker identifier.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns Profiler category index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemChildren(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves a list of hierarchy item children.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outChildren">List filled with item child identifiers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnData(System.Int32,System.Int32)">
      <summary>
        <para>Returns string representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsDouble(System.Int32,System.Int32)">
      <summary>
        <para>Returns double representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as double.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsSingle(System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemDepth(System.Int32)">
      <summary>
        <para>Returns hierarchy level of the item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemDescendantsThatHaveChildren(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Use to retrieve a list of a hierarchy item descendants which have other children.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outChildren">List filled with item all child identifiers which have children.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemInstanceID(System.Int32)">
      <summary>
        <para>Returns InstanceID of the UnityEngine.Object associated with the sample.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerFlags(System.Int32)">
      <summary>
        <para>Use to retrieve a marker usage flags.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Marker usage flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerID(System.Int32)">
      <summary>
        <para>Returns Profiler marker which uniquely identifies sample name.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerIDPath(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Use to retrieve a list of a marker identifiers of all hierarchy item parents.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outFullIdPath">List filled with marker identifiers of all ancestors of the item as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSampleCallstack(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Gets the callstack associated with the specified hierarchy item.</para>
      </summary>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outCallstack">List filled with callstack pointers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnData(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Use to retrieve a values of merged samples of a hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <param name="outStrings">List filled with values of merged samples as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnDataAsDoubles(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.Double&gt;)">
      <summary>
        <para>Retrieves the merged samples for a specific hierarchy item. Merged samples are returned as a list of doubles through the outValues param.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <param name="outValues">The merged samples for the specified hierarchy item, returned as a list of doubles. This list is resized if necessary.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnDataAsFloats(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Retrieves the merged samples for a specific hierarchy item. Merged samples are returned as a list of floats through the outValues param.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <param name="outValues">The merged samples for the specified hierarchy item, returned as a list of floats. This list is resized if necessary.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesCount(System.Int32)">
      <summary>
        <para>Return merged samples count represented by the hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns merged samples count represented by the tree item.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesInstanceID(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves the instanceID of the merged samples corresponding to a hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outInstanceIds">List filled with InstanceID values of merged samples as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadata(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns string representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns value of the metadata as string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataAsFloat(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns value of the metadata as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataAsLong(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns long representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns value of the metadata as long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataCount(System.Int32,System.Int32)">
      <summary>
        <para>Returns metadata count associated with hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <returns>
        <para>Returns metadata count.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadata(System.Int32,System.Int32)">
      <summary>
        <para>Returns string representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="index">Metadata index.</param>
      <returns>
        <para>Value of the metadata as string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="index">Metadata index.</param>
      <returns>
        <para>Value of the metadata as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataAsLong(System.Int32,System.Int32)">
      <summary>
        <para>Returns long representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="index">Metadata index.</param>
      <returns>
        <para>Value of the metadata as long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataCount(System.Int32)">
      <summary>
        <para>Returns metadata count associated with hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Metadata count.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemName(System.Int32)">
      <summary>
        <para>Gets the sample name associated with the item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns item name. Returns null if identifier is invalid.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemPath(System.Int32)">
      <summary>
        <para>Retrieves the hierarchy item path as a string. Each level is delimited by forward slashes ('/').</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetRootItemID">
      <summary>
        <para>Gets the identifier for the root tree item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.HasItemChildren(System.Int32)">
      <summary>
        <para>Checks whether the tree item has children.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ResolveItemCallstack(System.Int32)">
      <summary>
        <para>Gets the callstack associated with the specified hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns the callstack associated with the hierarchy item. Returns an empty string if the callstack is empty or if the method is unsuccessful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ResolveItemMergedSampleCallstack(System.Int32,System.Int32)">
      <summary>
        <para>Gets the callstack associated with a specific item sample.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <returns>
        <para>Returns the callstack associated with the specific item sample. Returns an empty string if the callstack is empty or if the method is unsuccessful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.Sort(System.Int32,System.Boolean)">
      <summary>
        <para>Sorts the hierarchy view.</para>
      </summary>
      <param name="sortColumn"></param>
      <param name="sortAscending"></param>
    </member>
    <member name="T:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes">
      <summary>
        <para>The ViewModes enum defines data aggregation rules.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.Default">
      <summary>
        <para>Sets the View mode to raw hierarchy which represents each sample by an individual item.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.HideEditorOnlySamples">
      <summary>
        <para>Skips sub-hierarchies that represent Editor-only code paths.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.MergeSamplesWithTheSameName">
      <summary>
        <para>Merges and aggregates samples with the same name into a single hierarchy item.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ArrayEntries`1">
      <summary>
        <para>An abstract helper class that provides methods to retrieve arrays of data elements of a generic type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ArrayEntries_1.GetEntries(System.UInt32,System.UInt32,T[]&amp;)">
      <summary>
        <para>Retrieves a subset of entries in an array.</para>
      </summary>
      <param name="indexStart">Index to start indexing the entries.</param>
      <param name="numEntries">Number of elements to retrieve.</param>
      <param name="dataOut">An array to store the returned data in.</param>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ArrayEntries_1.GetNumEntries">
      <summary>
        <para>Gets the number of entries in the source array.</para>
      </summary>
      <returns>
        <para>Number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries">
      <summary>
        <para>A class that houses data entries related to Connection data, returned by PackedMemorySnapshot.connections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.from">
      <summary>
        <para>An array of indexes into the object array of GC handles referenced by the to property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.to">
      <summary>
        <para>An array of GC handle objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of connection entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries">
      <summary>
        <para>A class that houses Field Description entry data, returned by PackedMemorySnapshot.fieldDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.fieldDescriptionName">
      <summary>
        <para>An array of field names.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.isStatic">
      <summary>
        <para>True if this field is static; otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.offset">
      <summary>
        <para>An array of offset values from the start of the class for the fields referenced by the fieldDescriptionName property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.typeIndex">
      <summary>
        <para>The typeIndex into PackedMemorySnapshot.typeDescriptions of the type this field belongs to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of field description entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries">
      <summary>
        <para>A class that houses GCHandle data. Returned by PackedMemorySnapshot.gcHandles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries.target">
      <summary>
        <para>An array of addresses for the managed objects that the GC handles are referencing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries.GetNumEntries">
      <summary>
        <para>Gets the number of GCHandle entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries">
      <summary>
        <para>A class that houses MemorySection data, returned by PackedMemorySnapshot.managedHeapSections and PackedMemorySnapshot.managedStacks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.bytes">
      <summary>
        <para>An array of byte arrays that contain memory dumps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.startAddress">
      <summary>
        <para>An array of addresses of the start location in memory of the memory dumps referenced by the startAddress property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of managed memory section entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries">
      <summary>
        <para>A class that houses native allocation entry data, returned by PackedMemorySnapshot.nativeAllocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.address">
      <summary>
        <para>An array that contains addresses of native memory allocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.allocationSiteId">
      <summary>
        <para>The allocation site id of the allocation, used by NativeAllocationSiteEntries.id.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.memoryRegionIndex">
      <summary>
        <para>An array of indexes that indicate which memory region, beginning region, inside region, or end region, that the memory allocation represents.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.overheadSize">
      <summary>
        <para>An array that specifies, in bytes, how much of the memory in the returned native allocation is not part of your request. The overhead memory is used for allocation headers and other metadata describing the allocation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.paddingSize">
      <summary>
        <para>An array specifying, in bytes, the amount of padding used to align the returned native allocation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.rootReferenceId">
      <summary>
        <para>An array of root reference IDs for the allocation. Corresponds to entries in NativeRootReferenceEntries.id array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.size">
      <summary>
        <para>An array containing the total size, in bytes, of the native allocation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.GetNumEntries">
      <summary>
        <para>Gets the number allocation entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries">
      <summary>
        <para>A class that houses native allocation site entries, returned by PackedMemorySnapshot.nativeAllocationSites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.callstackSymbols">
      <summary>
        <para>An array of callstack symbols corresponding to this allocation site, referring to NativeCallstackSymbolEntries.symbol.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.id">
      <summary>
        <para>An array containing allocation site IDs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.memoryLabelIndex">
      <summary>
        <para>An array containing memory labels attached to allocation sites. Referenced by index into PackedMemorySnapshot.nativeMemoryLabels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.GetNumEntries">
      <summary>
        <para>Gets the number of native allocation site entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries">
      <summary>
        <para>A class housing native callstack symbol data, returned by PackedMemorySnapshot.nativeCallstackSymbols.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.readableStackTrace">
      <summary>
        <para>An array of readable stack traces of the callback symbols.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.symbol">
      <summary>
        <para>An array of addresses to the callback symbols, referenced by the NativeAllocationSiteEntries.callstackSymbols property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.GetNumEntries">
      <summary>
        <para>Gets the number of callstack symbol entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries">
      <summary>
        <para>A class that houses native memory label data, returned by PackedMemorySnapshot.nativeMemoryLabels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries.memoryLabelName">
      <summary>
        <para>An array containing the names of the memory labels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries.GetNumEntries">
      <summary>
        <para>Gets the number of memory label entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries">
      <summary>
        <para>A class housing native memory region data, returned by PackedMemorySnapshot.nativeMemoryRegions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.addressBase">
      <summary>
        <para>An array containing addresses of the memory regions. Non-leaf entries containing child memory regions are set to 0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.addressSize">
      <summary>
        <para>An array that contains the accumulated size, in bytes, including all of its children, of the memory region.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.firstAllocationIndex">
      <summary>
        <para>An array that contains indexes into the PackedMemorySnapshot.nativeAllocations array that identify the first allocation that the memory region contains.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.memoryRegionName">
      <summary>
        <para>An array containing the names of the memory regions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.numAllocations">
      <summary>
        <para>An array that contains the number of allocations, including children, that the memory regions contain.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.parentIndex">
      <summary>
        <para>The parent of this memory region, referenced by index into this entry array. The root memory region contains parent index of -1.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of memory region entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries">
      <summary>
        <para>A class that houses native object data, returned by PackedMemorySnapshot.nativeObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.flags">
      <summary>
        <para>An array the contains the flags attached to the native memory objects referenced in the NativeObjectEntries.nativeObjectAddress array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.gcHandleIndex">
      <summary>
        <para>Index of a handle inside the PackedMemorySnapshot.gcHandles array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.hideFlags">
      <summary>
        <para>The hide flags attached to this native object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.instanceId">
      <summary>
        <para>The instance id of this native object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.nativeObjectAddress">
      <summary>
        <para>An array of memory addresses that point to native C++ objects. This matches the "m_CachePtr" field of a UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.nativeTypeArrayIndex">
      <summary>
        <para>An array of indexes into the PackedMemorySnapshot.nativeTypes array used to retrieve the the native C++ type description.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.objectName">
      <summary>
        <para>An array containing the names of the native objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.rootReferenceId">
      <summary>
        <para>An array containing the root reference ids of the native objects. Corresponds to entries in NativeRootReferenceEntries.id array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.size">
      <summary>
        <para>The size in bytes of this object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.GetNumEntries">
      <summary>
        <para>Gets the number of native object entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries">
      <summary>
        <para>A class that houses native root reference data, returned by PackedMemorySnapshot.rootReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.accumulatedSize">
      <summary>
        <para>An array that contains the accumulated sizes of all allocations registered for the root references.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.areaName">
      <summary>
        <para>An array that contains the area names of the root references.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.id">
      <summary>
        <para>An array that contains the IDs of the root references.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.objectName">
      <summary>
        <para>An array containing the object names of the root references.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.GetNumEntries">
      <summary>
        <para>Gets the number of root reference entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries">
      <summary>
        <para>A class that houses native type entries, returned by PackedMemorySnapshot.nativeTypes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.nativeBaseTypeArrayIndex">
      <summary>
        <para>An array of indexes into the PackedMemorySnapshot.nativeTypes array used to retrieve native C++ base class description.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.typeName">
      <summary>
        <para>An array of names of the C++ unity type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.GetNumEntries">
      <summary>
        <para>Gets the number of native type entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ObjectFlags">
      <summary>
        <para>Flags that can be set on a Native Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsDontDestroyOnLoad">
      <summary>
        <para>Specifies that the object is marked as DontDestroyOnLoad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsManager">
      <summary>
        <para>Specifies that the object is marked as a manager.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsPersistent">
      <summary>
        <para>Specifies that the object is set as persistent.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions">
      <summary>
        <para>An extension class that contains member functions to ObjectFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsDontDestroyOnLoad(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>True if the object is marked as DontDestroyOnLoad; otherwise false.</para>
      </summary>
      <param name="flags">The ObjectFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the object associated with this ObjectFlags is marked as DontDestroyOnLoad.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsManager(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>True if the object is a manager, otherwise false.</para>
      </summary>
      <param name="flags">The ObjectFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the object associated with this ObjectFlags is a manager.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsPersistent(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>True if the object is marked as Persistent, otherwise false.</para>
      </summary>
      <param name="flags">The ObjectFlags to operate on (accessible via this).</param>
      <returns>
        <para>Returns true if the object associated with this ObjectFlags is marked as Persistent.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot">
      <summary>
        <para>PackedMemorySnapshot is a compact representation of a memory snapshot that a player has sent through the profiler connection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.captureFlags">
      <summary>
        <para>Flags corresponding to the fields present in a returned memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.connections">
      <summary>
        <para>Connections is an array of from,to pairs that describe which things are keeping which other things alive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.fieldDescriptions">
      <summary>
        <para>Array of Field Descriptions, referenced by Type Description entries by array index.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.filePath">
      <summary>
        <para>Path to the memory snapshot file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.gcHandles">
      <summary>
        <para>All GC handles in use in the memorysnapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.managedHeapSections">
      <summary>
        <para>Array of actual managed heap memory sections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.managedStacks">
      <summary>
        <para>Array of managed stacks in a memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.metadata">
      <summary>
        <para>Meta data that was collected during memory snapshot capture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeAllocations">
      <summary>
        <para>Array of native allocation data, captured in C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeAllocationSites">
      <summary>
        <para>Array of native allocation site data, captured in C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeCallstackSymbols">
      <summary>
        <para>Array of callstack symbols, used by native allocation site data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeMemoryLabels">
      <summary>
        <para>Array of memory labels, used by native allocation site data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeMemoryRegions">
      <summary>
        <para>Array of native memory regions, which houses native allocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeObjects">
      <summary>
        <para>All native C++ objects that were loaded at time of the snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeRootReferences">
      <summary>
        <para>Array of native root references, which represent ownership of native allocation data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeTypes">
      <summary>
        <para>Descriptions of all the C++ unity types the profiled player knows about.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.recordDate">
      <summary>
        <para>The time and date at which the snapshot was recorded.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.typeDescriptions">
      <summary>
        <para>An array of indexes into PackedMemorySnapshot.typeDescriptions indetifying the type this field belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.version">
      <summary>
        <para>The current snapshot format version.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.virtualMachineInformation">
      <summary>
        <para>Information about the virtual machine running executing the managed code inside the player.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Convert(UnityEditor.MemoryProfiler.PackedMemorySnapshot,System.String)">
      <summary>
        <para>Converts the specified old format MemoryProfiler.PackedMemorySnapshot object to a new PackedMemorySnapshot format object and writes it to the location and file name specified the the write path.</para>
      </summary>
      <param name="snapshot">The old format snapshot object.</param>
      <param name="writePath">Destination path and file name for the file containing the converted snapshot.</param>
      <returns>
        <para>True if the conversion was successful; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Dispose">
      <summary>
        <para>Disposes of an existing PackedMemorySnapshot object and closes the file reader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Load(System.String)">
      <summary>
        <para>Load memory snapshot from given file path.</para>
      </summary>
      <param name="path">An absolute file path to load a snapshot file from.</param>
      <returns>
        <para>Memory snapshot.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Save(UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot,System.String)">
      <summary>
        <para>Copy the memory snapshot file to the given file path.</para>
      </summary>
      <param name="snapshot">Source memory snapshot.</param>
      <param name="writePath">Where to create copy of memory snapshot.</param>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries">
      <summary>
        <para>A class that houses type description entries, returned from PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.assembly">
      <summary>
        <para>Name of the assembly this type was loaded from.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.baseOrElementTypeIndex">
      <summary>
        <para>The base type for this type, pointed to by an index into PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.fieldIndices">
      <summary>
        <para>An array containing indices pointing to descriptions of all fields of this type, accessible from PackedMemorySnapshot.fieldDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.flags">
      <summary>
        <para>Flags set for this type description, that define whether this type is an array or a value type, and the array rank of the type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.size">
      <summary>
        <para>Size in bytes of an instance of this type. If this type is an array type, this describes the amount of bytes a single element in the array will take up.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.staticFieldBytes">
      <summary>
        <para>The actual contents of the bytes that store this types static fields, at the point of time when the snapshot was taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeDescriptionName">
      <summary>
        <para>The name of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeIndex">
      <summary>
        <para>The type index of this type. This index is an index into the PackedMemorySnapshot.typeDescriptions array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeInfoAddress">
      <summary>
        <para>The address in memory that contains the description of this type inside the virtual machine. This can be used to match managed objects in the heap to their corresponding TypeDescription, as the first pointer of a managed object points to its type description.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.GetNumEntries">
      <summary>
        <para>The number of type description entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeFlags">
      <summary>
        <para>An enum encoding information for a type description about whether it is a value type or an array type, and the rank of the array if the type is an array. Returned by TypeDescriptionEntries.flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kArray">
      <summary>
        <para>Set if this type is an array.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kArrayRankMask">
      <summary>
        <para>If TypeFlags.kArray is set, the enum masked by this value will return the rank of the array (1 for a 1-dimensional array, 2 for a 2-dimensional array, etc).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kValueType">
      <summary>
        <para>Set if this value is a value type. If not set, the type is a reference type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions">
      <summary>
        <para>An extension class that contains member functions to TypeFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.ArrayRank(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>If the type is an array type, retrieves the array rank of the type flags.</para>
      </summary>
      <param name="flags">The TypeFlags to compute the array rank of (assessible via this).</param>
      <returns>
        <para>The array rank encoded in the Type Flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.IsArray(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Returns whether the flag describes an array type.</para>
      </summary>
      <param name="flags">The TypeFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the Type associated with this TypeFlags is an array.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.IsValueType(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Returns whether the type describes a value type.</para>
      </summary>
      <param name="flags">The TypeFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the type associated with this TypeFlags is a value type (as opposed to a reference type).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation">
      <summary>
        <para>Information about a virtual machine that provided a memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.allocationGranularity">
      <summary>
        <para>Allocation granularity in bytes used by the virtual machine allocator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arrayBoundsOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the bounds of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arrayHeaderSize">
      <summary>
        <para>Size in bytes of the header of an array object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arraySizeOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the size of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.objectHeaderSize">
      <summary>
        <para>Size in bytes of the header of each managed object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.pointerSize">
      <summary>
        <para>Size in bytes of a pointer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerCategoryInfo">
      <summary>
        <para>Category information descriptor structure.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.color">
      <summary>
        <para>The color of the Profiler category, as a Color32.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.flags">
      <summary>
        <para>Flags for showing if the Category is user defined or built into Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.id">
      <summary>
        <para>Id used by Unity for tracking the Category.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.name">
      <summary>
        <para>The name used by Unity for the Category.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.RawFrameDataView">
      <summary>
        <para>Provides access to the Profiler data for a specific frame and thread.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.RawFrameDataView.FlowEvent">
      <summary>
        <para>This struct describes profiler flow and its relation to the specific sample in the frame.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.FlowEventType">
      <summary>
        <para>Use to determine flow event type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.FlowId">
      <summary>
        <para>Flow identifier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.ParentSampleIndex">
      <summary>
        <para>Use to determine the sample index the flow event belongs to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetFlowEvents(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.RawFrameDataView/FlowEvent&gt;)">
      <summary>
        <para>Gets all flow events for the current frame and thread.</para>
      </summary>
      <param name="outFlowEvents">Returns the list of all profiler flow events for the current frame and thread.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleCallstack(System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Gets the callstack associated with the specified sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="outCallstack">List filled with callstack pointers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleCategoryIndex(System.Int32)">
      <summary>
        <para>Gets Profiler marker category for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns Profiler category index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleChildrenCount(System.Int32)">
      <summary>
        <para>Gets amount of child samples for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns amount of child samples.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleChildrenCountRecursive(System.Int32)">
      <summary>
        <para>Gets amount of direct and indirect child samples for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns amount of direct and indirect child samples.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleFlags(System.Int32)">
      <summary>
        <para>Gets Profiler marker flags for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns Profiler marker flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleFlowEvents(System.Int32,System.Collections.Generic.List`1&lt;UnityEditor.Profiling.RawFrameDataView/FlowEvent&gt;)">
      <summary>
        <para>Gets the flow events that originate from the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="outFlowEvents">Returns the list of profiler flow events for the sample in the current frame and thread.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMarkerId(System.Int32)">
      <summary>
        <para>Gets Profiler marker indentifier which uniquely identifies sample name.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns Profiler marker indentifier. Returns invalidMarkerId for invalid index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsDouble(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as double.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns double representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as float.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns float representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsInt(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as integer.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns integer representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsLong(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as long.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns long representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsString(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as string.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns string representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataCount(System.Int32)">
      <summary>
        <para>Gets metadata count associated with the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Amount of metadata values.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleName(System.Int32)">
      <summary>
        <para>Gets the name of the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample name. Returns null if sample index is invalid.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleStartTimeMs(System.Int32)">
      <summary>
        <para>Gets the start time of the sample. The amount of time is expressed in milliseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample start time in milliseconds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleStartTimeNs(System.Int32)">
      <summary>
        <para>Gets the start time of the sample. The amount of time is expressed in nanoseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample start time in nanoseconds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleTimeMs(System.Int32)">
      <summary>
        <para>Gets the duration of sample. The amount of time is expressed in milliseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample duration in milliseconds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleTimeNs(System.Int32)">
      <summary>
        <para>Gets the duration of sample. The amount of time is expressed in nanoseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample duration in nanoseconds.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress">
      <summary>
        <para>The Progress utility class reports the progress of asynchronous tasks to Unity.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.added(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>An event raised when a new progress indicator starts.</para>
      </summary>
      <param name="value">Array of new progress indicators.</param>
    </member>
    <member name="P:UnityEditor.Progress.globalProgress">
      <summary>
        <para>Returns the global average progression of all running tasks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.globalRemainingTime">
      <summary>
        <para>Returns the maximum time remaining for all running progress indicators.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.removed(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>An event raised when a progress indicator is removed.</para>
      </summary>
      <param name="value">Array of removed progress indicators.</param>
    </member>
    <member name="P:UnityEditor.Progress.running">
      <summary>
        <para>Returns true if there is at least one running progress indicator, false otherwise.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.updated(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>An event raised when a progress indicator's state updates.</para>
      </summary>
      <param name="value">Array of updated progress indicators.</param>
    </member>
    <member name="M:UnityEditor.Progress.Cancel(System.Int32)">
      <summary>
        <para>Cancels a runnning progress indicator, and invokes the cancel callback for the associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if the associated task is cancelled, false if it cannot be cancelled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.ClearRemainingTime(System.Int32)">
      <summary>
        <para>Resets the computation of a progress indicator's remaining time.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.Progress.EnumerateItems">
      <summary>
        <para>Returns an enumerator to loop over all progress indicators.</para>
      </summary>
      <returns>
        <para>The enumerable progress indicators.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Exists(System.Int32)">
      <summary>
        <para>Checks whether a progress indicator with the specified ID exists.</para>
      </summary>
      <param name="id">The unique ID to search for.</param>
      <returns>
        <para>True if the progress indicator exists, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Finish(System.Int32,UnityEditor.Progress/Status)">
      <summary>
        <para>Marks the progress indicator as finished.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="status">The status of the associated task when the progress indicator finishes. Indicates whether the task succeeded, failed, or was canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.GetCount">
      <summary>
        <para>Gets the number of available progress indicators.</para>
      </summary>
      <returns>
        <para>The number of available progress indicators.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetCountPerStatus">
      <summary>
        <para>For each available status, gets the number of progress indicators with that status.</para>
      </summary>
      <returns>
        <para>An array that contains the count of progress indicators per status. Each index maps a single status from the Progress.Status enum.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetCurrentStep(System.Int32)">
      <summary>
        <para>Gets the current step for a progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The current step.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetDescription(System.Int32)">
      <summary>
        <para>Gets a progress indicator's description.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The description, if one exists.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetId(System.Int32)">
      <summary>
        <para>Finds a progress indicator's unique ID using its index in the set of all available progress indicators.</para>
      </summary>
      <param name="index">The valid index for a progress indicator.</param>
      <returns>
        <para>The progress indicator's unique ID, or -1 if the unique ID is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetName(System.Int32)">
      <summary>
        <para>Gets a progress indicator's name.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The matching progress indicator's name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetOptions(System.Int32)">
      <summary>
        <para>Gets the options that you specified when you started the progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's option flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetParentId(System.Int32)">
      <summary>
        <para>Gets the unique ID of the progress indicator's parent, if any.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The unique ID of the progress indicator's parent. If the progress indicator is not a child of any other progress indicators, returns -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetPriority(System.Int32)">
      <summary>
        <para>Gets a progress indicator's priority.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The priority.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetProgress(System.Int32)">
      <summary>
        <para>Gets a progress indicator's progress.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The currrent progress.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetProgressById(System.Int32)">
      <summary>
        <para>Gets information about a progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's data structure.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetRemainingTime(System.Int32)">
      <summary>
        <para>Gets a progress indicator's remaining time, in seconds.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The number of seconds remaining.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetRunningProgressCount">
      <summary>
        <para>Gets the number of active or running progress indicators.</para>
      </summary>
      <returns>
        <para>The number of active and running progress indicators.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStartDateTime(System.Int32)">
      <summary>
        <para>Gets the timestamp of when the progress indicator started.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's start timestamp.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStatus(System.Int32)">
      <summary>
        <para>Gets the progress indicator's status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's current status.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStepLabel(System.Int32)">
      <summary>
        <para>Gets the label that displays a progress indicator's steps.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The step label.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetTimeDisplayMode(System.Int32)">
      <summary>
        <para>Get a progress indicator's time display mode.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's time display mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetTotalSteps(System.Int32)">
      <summary>
        <para>Gets the total number of steps, from start to finish, for a progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The number of steps.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetUpdateDateTime(System.Int32)">
      <summary>
        <para>Gets the time that the progress indicator last changed, or finished.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The timestamp of the progress indicator's last update.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.IsCancellable(System.Int32)">
      <summary>
        <para>Indicates whether you can cancel the progress indicator's associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if you can cancel the task, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.IsPausable(System.Int32)">
      <summary>
        <para>Indicates whether you can pause the progress indicator's task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if you can pause the task, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Item">
      <summary>
        <para>A data structure that provides information about a progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.cancellable">
      <summary>
        <para>Returns true if the progress indicator's associated event can be canceled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.currentStep">
      <summary>
        <para>Returns the current step for this progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.description">
      <summary>
        <para>Returns the progress indicator's description.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.elapsedTime">
      <summary>
        <para>Returns the number of seconds that the progress indicator has been running for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.exists">
      <summary>
        <para>Checks whether the progress indicator exists.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.finished">
      <summary>
        <para>Returns true if the progress indicator is finished, but not removed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.id">
      <summary>
        <para>Returns the progress indicator's unique identifier.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.indefinite">
      <summary>
        <para>Returns true if the progress indicator is indefinite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.name">
      <summary>
        <para>Returns the progress indicator's name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.options">
      <summary>
        <para>Returns the option flags used to start the progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.parentId">
      <summary>
        <para>Returns the unique ID of the progress indicator's parent, or -1 if the progress indicator is not a child of another progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.pausable">
      <summary>
        <para>Returns true if the progress indicator's task can be paused.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.paused">
      <summary>
        <para>Returns true if the progress indicator is paused.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.priority">
      <summary>
        <para>Returns the progress indicator's priority.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.progress">
      <summary>
        <para>Returns the progress value of a progress indicator's associated task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.remainingTime">
      <summary>
        <para>Returns this progress indicator's remaining time to completion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.responding">
      <summary>
        <para>Returns true if progress is ongoing, false if the progress indicator has not received any progress report for more than 5 seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.running">
      <summary>
        <para>Returns true if the progress indicator is running and active.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.startTime">
      <summary>
        <para>Returns the time when the progress indicator started.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.status">
      <summary>
        <para>Returns the progress indicator's status.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.stepLabel">
      <summary>
        <para>Returns the label that displays the progress indicator's steps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.timeDisplayMode">
      <summary>
        <para>Returns the progress indicator's time display mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.totalSteps">
      <summary>
        <para>Returns the total number of steps, from start to finish, for this progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.updateTime">
      <summary>
        <para>Returns the last time the progress indicator was updated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.Cancel">
      <summary>
        <para>Cancels a running progress indicator.</para>
      </summary>
      <returns>
        <para>True if the associated task is cancelled, false if something prevents it from being cancelled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.ClearRemainingTime">
      <summary>
        <para>Resets the computation of the progress indicator's remaining time.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.Finish(UnityEditor.Progress/Status)">
      <summary>
        <para>Marks the progress indicator as finished.</para>
      </summary>
      <param name="finishedStatus">The status of the associated task when the progress indicator finishes. Indicates whether the task succeeded, failed, or was canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Pause">
      <summary>
        <para>Pauses a running progress indicator.</para>
      </summary>
      <returns>
        <para>True if the task is paused, false if it cannot be paused.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.RegisterCancelCallback(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when the user cancels a running progress indicator's associated task.</para>
      </summary>
      <param name="callback">The function called when a progress indicator's associated task is canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.RegisterPauseCallback(System.Func`2&lt;System.Boolean,System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when a user pauses a running progress indicator's task.</para>
      </summary>
      <param name="callback">This function is called when a progress indicator's task is paused. It takes a boolean parameter that specifies whether the task needs to pause or resume. When the value is true, the task needs to pause. When the value is false, the task needs to resume. The function returns true if it actually performed the requested action.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Remove">
      <summary>
        <para>Finishes and removes an active progress indicator.</para>
      </summary>
      <returns>
        <para>-1 if the progress indicator is removed, otherwise returns the progress indicator's id.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Single)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Single,System.String)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Int32,System.Int32)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Int32,System.Int32,System.String)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Resume">
      <summary>
        <para>Resumes a paused progress indicator.</para>
      </summary>
      <returns>
        <para>True if the task resumes, false if it cannot resume.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetDescription(System.String)">
      <summary>
        <para>Sets the progress indicator's description. To clear the description pass null.</para>
      </summary>
      <param name="newDescription">The progress indicator's new description.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetPriority(System.Int32)">
      <summary>
        <para>Sets the progress indicator's priority.</para>
      </summary>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetPriority(UnityEditor.Progress/Priority)">
      <summary>
        <para>Sets the progress indicator's priority.</para>
      </summary>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetRemainingTime(System.Int64)">
      <summary>
        <para>Sets the progress indicator's remaining time, in seconds.</para>
      </summary>
      <param name="seconds">The progress indicator's remaining time, in seconds.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetStepLabel(System.String)">
      <summary>
        <para>Sets the label that displays the progress indicator's steps.</para>
      </summary>
      <param name="label">The steps label.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetTimeDisplayMode(UnityEditor.Progress/TimeDisplayMode)">
      <summary>
        <para>Set a progress indicator's time display mode.</para>
      </summary>
      <param name="mode">The progress indicator's time display mode.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.UnregisterCancelCallback">
      <summary>
        <para>Unregisters a previously registered progress cancellation callback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.UnregisterPauseCallback">
      <summary>
        <para>Unregisters a previously registered progress pause callback.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Progress.Options">
      <summary>
        <para>Options that define how a progress indicator behaves.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Indefinite">
      <summary>
        <para>An indefinite progress indicator shows that the associated task is in progress, but does not show how close it is to completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Managed">
      <summary>
        <para>Unity manages progress indicators. When a domain reload happens, the system cancels tasks that support cancellation, and removes their progress indicators. This is the default for progress indicators started from C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.None">
      <summary>
        <para>A progress indicator that starts with no other options activated. This is the default.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Sticky">
      <summary>
        <para>A sticky progress indicator displays progress information even after the task is complete. The system does not remove it automatically. You must remove it using a remove operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Synchronous">
      <summary>
        <para>A synchronous progress indicator updates the Editor UI as soon as it reports progress. This is the opposite of the default behavior, which is to report all progress asynchronously.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Unmanaged">
      <summary>
        <para>An unmanaged progress indicator is one that Unity does not manage. Unity does not cancel unmanaged progress indicators when a domain reload happens. This is the default behavior for internal-use progress indicators started from C++ code.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Pause(System.Int32)">
      <summary>
        <para>Pauses a runnning progress indicator, and invokes the pause callback for its task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if the task is paused, false if it cannot be paused.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Priority">
      <summary>
        <para>An enumeration that defines task priorities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.High">
      <summary>
        <para>A high priority task can be unresponsive, and is displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Idle">
      <summary>
        <para>An idle priority task cannot be unresponsive, and is not displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Low">
      <summary>
        <para>A low priority task cannot be unresponsive, but is displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Normal">
      <summary>
        <para>A normal priority task can be unresponsive, and is displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Unresponsive">
      <summary>
        <para>An unresponsive task is always shown as unresponsive.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.RegisterCancelCallback(System.Int32,System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when the user cancels a running progress indicator's associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="callback">The function called when a progress indicator's associated task is canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.RegisterPauseCallback(System.Int32,System.Func`2&lt;System.Boolean,System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when the user pauses a running progress indicator's task.</para>
      </summary>
      <param name="callback">This function is called when a progress indicator's task is paused. It takes a boolean parameter that specifies whether the task needs to pause or resume. When the value is true, the task needs to pause. When the value is false, the task needs to resume. The function returns true if it actually performed the requested action.</param>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.Progress.Remove(System.Int32)">
      <summary>
        <para>Finishes and removes an active progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="forceSynchronous">When you set this parameter to true it forces this method to remove the progress indicator synchronously.</param>
      <returns>
        <para>-1 if the progress indicator is removed. Otherwise, returns the progress indicator's ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Remove(System.Int32,System.Boolean)">
      <summary>
        <para>Finishes and removes an active progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="forceSynchronous">When you set this parameter to true it forces this method to remove the progress indicator synchronously.</param>
      <returns>
        <para>-1 if the progress indicator is removed. Otherwise, returns the progress indicator's ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Single)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Single,System.String)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Resume(System.Int32)">
      <summary>
        <para>Resumes a paused progress indicator, and invokes the pause callback for the associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if the task resumes, false if it cannot resume.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.SetDescription(System.Int32,System.String)">
      <summary>
        <para>Sets the progress indicator's description. To clear the description pass null.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="description">The progress indicator's new description.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetPriority(System.Int32,System.Int32)">
      <summary>
        <para>Sets a progress indicator's priority.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetPriority(System.Int32,UnityEditor.Progress/Priority)">
      <summary>
        <para>Sets a progress indicator's priority.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetRemainingTime(System.Int32,System.Int64)">
      <summary>
        <para>Sets the progress indicator's remaining time, in seconds.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="seconds">The progress indicator's remaining time, in seconds.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetStepLabel(System.Int32,System.String)">
      <summary>
        <para>Sets the label that displays a progress indicator's steps.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="label">The steps label.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetTimeDisplayMode(System.Int32,UnityEditor.Progress/TimeDisplayMode)">
      <summary>
        <para>Set a progress indicator's time display mode.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="displayMode">The progress indicator's time display mode.</param>
    </member>
    <member name="M:UnityEditor.Progress.ShowDetails(System.Boolean)">
      <summary>
        <para>Opens the progress window for background tasks.</para>
      </summary>
      <param name="shouldReposition">To place the window in the bottom right corner of the main Editor window, pass True. To restore the last window position, pass False.</param>
    </member>
    <member name="M:UnityEditor.Progress.Start(System.String,System.String,UnityEditor.Progress/Options,System.Int32)">
      <summary>
        <para>This method starts a new progress indicator.</para>
      </summary>
      <param name="name">The progress indicator's name. You can display the name as a title in the progress window. Use / (slash) as a separator to group child progress indicators together.</param>
      <param name="description">The progress indicator's initial description. You can change it using Report or SetDescription.</param>
      <param name="parentId">The unique ID of the parent progress indicator, if any. If the progress indicator has no parent, pass -1.</param>
      <param name="options">The progress indicator's initial progress options.</param>
      <returns>
        <para>The newly created progress identifier. This identifier is used for all other APIs to update the progress status.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Status">
      <summary>
        <para>Indicates the status of a progress indicator's associated task.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Canceled">
      <summary>
        <para>Indicates that the task was canceled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Failed">
      <summary>
        <para>Indicates that the task failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Paused">
      <summary>
        <para>Indicates that the task is paused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Running">
      <summary>
        <para>Indicates that the task is still running.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Succeeded">
      <summary>
        <para>Indicates that the task succeeded.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Progress.TimeDisplayMode">
      <summary>
        <para>Specifies what kind of time information the progress indicator displays.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.NoTimeShown">
      <summary>
        <para>The progress indicator does not display any time information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.ShowRemainingTime">
      <summary>
        <para>The progress indicator displays the time remaining.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.ShowRunningTime">
      <summary>
        <para>The progress indicator displays the running time.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.UnregisterCancelCallback(System.Int32)">
      <summary>
        <para>Unregisters a previously registered progress cancellation callback.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.Progress.UnregisterPauseCallback(System.Int32)">
      <summary>
        <para>Unregisters a previously registered progress pause callback.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.ProjectWindowCallback.EndNameEditAction.Action(System.Int32,System.String,System.String)">
      <summary>
        <para>Unity calls this function when the user accepts an edited name, either by pressing the Enter key or by losing the keyboard input focus.</para>
      </summary>
      <param name="instanceId">The instance ID of the edited asset.</param>
      <param name="pathName">The path to the asset.</param>
      <param name="resourceFile">The resource file string argument passed to ProjectWindowUtil.StartNameEditingIfProjectWindowExists.</param>
    </member>
    <member name="M:UnityEditor.ProjectWindowCallback.EndNameEditAction.Cancelled(System.Int32,System.String,System.String)">
      <summary>
        <para>Unity calls this function when the user presses the Escape key to cancel editing a name.</para>
      </summary>
      <param name="instanceId">The instance ID of the asset that the user attempted to edit.</param>
      <param name="pathName">The path to the asset.</param>
      <param name="resourceFile">The resource file string argument passed to ProjectWindowUtil.StartNameEditingIfProjectWindowExists.</param>
    </member>
    <member name="T:UnityEditor.PropertyDrawer">
      <summary>
        <para>Base class to derive custom property drawers from. Use this to create custom drawers for your own Serializable classes or for script variables with custom PropertyAttributes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PropertyDrawer.attribute">
      <summary>
        <para>The PropertyAttribute for the property. Not applicable for custom class drawers. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PropertyDrawer.fieldInfo">
      <summary>
        <para>The reflection FieldInfo for the member this property represents. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Override this method to determine whether the inspector GUI for your property can be cached.</para>
      </summary>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <returns>
        <para>Whether the drawer's UI can be cached.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Override this method to make your own UIElements based GUI for the property.</para>
      </summary>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <returns>
        <para>The element containing the custom GUI.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Override this method to specify how tall the GUI for this field is in pixels.</para>
      </summary>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
      <returns>
        <para>The height in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Override this method to make your own IMGUI based GUI for the property.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the property GUI.</param>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
    </member>
    <member name="T:UnityEditor.PropertyModification">
      <summary>
        <para>Defines a single modified property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.objectReference">
      <summary>
        <para>The value being applied when it is a object reference (which can not be represented as a string).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.propertyPath">
      <summary>
        <para>Property path of the property being modified (Matches as SerializedProperty.propertyPath).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.target">
      <summary>
        <para>Object that will be modified.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.value">
      <summary>
        <para>The value being applied.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ProvisioningProfileType">
      <summary>
        <para>The type of the iOS provisioning profile if manual signing is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Automatic">
      <summary>
        <para>The provisioning profile type will be determined automatically when building the Xcode project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Development">
      <summary>
        <para>Development provisioning profiles are used to install development apps on test devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Distribution">
      <summary>
        <para>Distribution provisioning profiles can be used when uploading the app to the App Store or for Ad Hoc and in house distribution.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PS4BuildSubtarget">
      <summary>
        <para>Type of build to generate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PS4BuildSubtarget.Package">
      <summary>
        <para>Package build for installation on either a dev or test kit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PS4BuildSubtarget.PCHosted">
      <summary>
        <para>Build hosted on a PC, for file serving to a dev or test kit.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Purchasing.PurchasingSettings">
      <summary>
        <para>Editor API for the Unity Services editor feature. Normally Purchasing is enabled from the Services window, but if writing your own editor extension, this API can be used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Purchasing.PurchasingSettings.enabled">
      <summary>
        <para>This Boolean field will cause the Purchasing feature in Unity to be enabled if true, or disabled if false.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.RemoveAssetOptions">
      <summary>
        <para>Options for removing assets</para>
      </summary>
    </member>
    <member name="F:UnityEditor.RemoveAssetOptions.DeleteAssets">
      <summary>
        <para>Delete the asset without moving it to the trash.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.RemoveAssetOptions.MoveAssetToTrash">
      <summary>
        <para>The asset should be moved to trash.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.AlbedoSwatchInfo">
      <summary>
        <para>Contains the custom albedo swatch data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.color">
      <summary>
        <para>Color of the albedo swatch that is shown in the physically based rendering validator user interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.maxLuminance">
      <summary>
        <para>The maximum luminance value used to validate the albedo for the physically based rendering albedo validator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.minLuminance">
      <summary>
        <para>The minimum luminance value used to validate the albedo for the physically based rendering albedo validator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.name">
      <summary>
        <para>Name of the albedo swatch to show in the physically based renderer validator user interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.EditorCameraUtils">
      <summary>
        <para>Utilities for Camera rendering in the Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.EditorCameraUtils.RenderToCubemap(UnityEngine.Camera,UnityEngine.Texture,System.Int32,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Renders this Camera into a static cubemap.</para>
      </summary>
      <param name="camera">The Camera to use during rendering.</param>
      <param name="target">The cubemap to render to.</param>
      <param name="faceMask">A bitmask which determines which of the six faces to render to.</param>
      <param name="culledFlags">The flags of objects to cull during rendering.</param>
      <returns>
        <para>If the render process succeeds, returns true. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Rendering.EditorGraphicsSettings">
      <summary>
        <para>Editor-specific script interface for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.EditorGraphicsSettings.albedoSwatches">
      <summary>
        <para>Returns an array of Rendering.AlbedoSwatchInfo.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetShaderSettingsForPlatform(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier)">
      <summary>
        <para>Will return PlatformShaderSettings for given platform and shader hardware tier.</para>
      </summary>
      <param name="target"></param>
      <param name="tier"></param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Returns TierSettings for the target build platform and shader hardware tier.</para>
      </summary>
      <param name="target"></param>
      <param name="tier"></param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="target"></param>
      <param name="tier"></param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetShaderSettingsForPlatform(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier,UnityEditor.Rendering.PlatformShaderSettings)">
      <summary>
        <para>Allows you to set the PlatformShaderSettings for the specified platform and shader hardware tier.</para>
      </summary>
      <param name="target"></param>
      <param name="tier"></param>
      <param name="settings"></param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.GraphicsTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>Allows you to set the PlatformShaderSettings for the specified platform and shader hardware tier.</para>
      </summary>
      <param name="target"></param>
      <param name="tier"></param>
      <param name="settings"></param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="target"></param>
      <param name="tier"></param>
      <param name="settings"></param>
    </member>
    <member name="T:UnityEditor.Rendering.PlatformShaderSettings">
      <summary>
        <para>Used to set up shader settings, per-platform and per-shader-hardware-tier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.cascadedShadowMaps">
      <summary>
        <para>Allows you to specify whether cascaded shadow maps should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.reflectionProbeBlending">
      <summary>
        <para>Allows you to specify whether Reflection Probes Blending should be enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.reflectionProbeBoxProjection">
      <summary>
        <para>Allows you to specify whether Reflection Probes Box Projection should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.standardShaderQuality">
      <summary>
        <para>Allows you to select Standard Shader Quality.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.RenderPipelineEditorUtility">
      <summary>
        <para>Helper class that contains a utility function on ScriptableRenderPipeline for Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.RenderPipelineEditorUtility.FetchFirstCompatibleTypeUsingScriptableRenderPipelineExtension">
      <summary>
        <para>Returns the first type that is a child of TBaseClass and has a ScriptableRenderPipelineExtensionAttribute filter corresponding to the ScriptableRenderPipeline that you are using.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute">
      <summary>
        <para>Use this attribute to apply a condition to a filter that finds the class based on which ScriptableRenderPipeline you are currently using.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute.inUse">
      <summary>
        <para>Determines whether the current ScriptableRenderPipeline is the same type as the one given by the constructor. Returns true if the ScriptableRenderPipeline is of the type used when constructing the attribute. Otherwise, returns false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute.#ctor(System.Type)">
      <summary>
        <para>Construct a ScriptableRenderPipelineExtensionAttribute.</para>
      </summary>
      <param name="renderPipelineAsset">Type inheriting from RenderPipelineAsset used for filtering.</param>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerData">
      <summary>
        <para>Collection of data used for shader variants generation, including targeted platform data and the keyword set representing a specific shader variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.graphicsTier">
      <summary>
        <para>Identifier to classify low, medium and high performance hardware.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerData.platformKeywordSet">
      <summary>
        <para>A collection of Rendering.ShaderKeyword that represents a specific platform shader variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.shaderCompilerPlatform">
      <summary>
        <para>Shader compiler used to generate player data shader variants.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerData.shaderKeywordSet">
      <summary>
        <para>A collection of Rendering.ShaderKeyword that represents a specific shader variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.shaderRequirements">
      <summary>
        <para>Required shader features by a specific shader.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerMessageSeverity">
      <summary>
        <para>Indicates the severity of a message returned by the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerMessageSeverity.Error">
      <summary>
        <para>Indicates that a message returned by the Unity Shader Compiler is an error and the compilation failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerMessageSeverity.Warning">
      <summary>
        <para>Indicates that a message returned by the Unity Shader Compiler is a warning.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerPlatform">
      <summary>
        <para>Shader compiler used to generate player data shader variants.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.D3D">
      <summary>
        <para>Compiler used with Direct3D 11 and Direct3D 12 graphics API on Windows platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GameCore">
      <summary>
        <para>Compiler used with Direct3D 12 graphics API on Game Core platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GLES20">
      <summary>
        <para>Compiler used with OpenGL ES 2.0 and WebGL 1.0 graphics APIs on Android, iOS, Windows and WebGL platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GLES3x">
      <summary>
        <para>Compiler used with OpenGL ES 3.x and WebGL 2.0 graphics APIs on Android, iOS, Windows and WebGL platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Metal">
      <summary>
        <para>Compiler used with Metal graphics API on macOS, iOS and tvOS platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.None">
      <summary>
        <para>Provide a reasonable value for non initialized variables.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.OpenGLCore">
      <summary>
        <para>Compiler used with OpenGL core graphics API on macOS, Linux and Windows platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.PS4">
      <summary>
        <para>Compiler used on PlayStation 4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Switch">
      <summary>
        <para>Compiler used on Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Vulkan">
      <summary>
        <para>Compiler used with Vulkan graphics API on Android, Linux and Windows platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.XboxOneD3D11">
      <summary>
        <para>Compiler used with Direct3D 11 graphics API on XBox One.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.XboxOneD3D12">
      <summary>
        <para>Compiler used with Direct3D 12 graphics API on XBox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderQuality">
      <summary>
        <para>Shader quality preset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.High">
      <summary>
        <para>High quality shader preset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.Low">
      <summary>
        <para>Low quality shader preset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.Medium">
      <summary>
        <para>Medium quality shader preset.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderRequirements">
      <summary>
        <para>Required shader features for some particular shader. Features are bit flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.BaseShaders">
      <summary>
        <para>Indicates that basic shader capability, Shader Model 2.0 level is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Compute">
      <summary>
        <para>
                    Indicates that compute shader support is required.
                </para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.CubeArray">
      <summary>
        <para>Indicates the shader requires cubemap array support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Derivatives">
      <summary>
        <para>Indicates that derivative (ddx/ddy) instructions support is required in the fragment shader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FragCoord">
      <summary>
        <para>Indicates that pixel position (SV_Position) input support is required in the fragment shader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FramebufferFetch">
      <summary>
        <para>Indicates the shader must support framebuffer fetch, which is the ability to have in+out fragment shader color params.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Geometry">
      <summary>
        <para>Indicates that geometry shader support is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Instancing">
      <summary>
        <para>Indicates the shader must support SV_InstanceID shader input.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators10">
      <summary>
        <para>Indicates the shader must have 10 interpolators.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators15Integers">
      <summary>
        <para>Indicates the shader must have 15 integers and interpolators in total. Unity bundles them together because it is extremely unlikely a GPU/API will ever exist that only has part of that.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators32">
      <summary>
        <para>Indicates the shader must have 32 interpolators</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MRT4">
      <summary>
        <para>Indicates the shader must have multiple render targets (at least 4), as in support a fragment shader that can output up to 4 values.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MRT8">
      <summary>
        <para>Indicates the shader must have multiple render targets (at least 8), as in support a fragment shader that can output up to 4 values.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MSAATextureSamples">
      <summary>
        <para>Indicates the shader requires access to MSAA texture samples.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.None">
      <summary>
        <para>No shader requirements.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.RandomWrite">
      <summary>
        <para>Indicates the shader requires have random-write textures (UAVs) support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SampleLOD">
      <summary>
        <para>Indicates the shader requires the support of texture sampling in a fragment shader with an explicit mipmap level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SparseTexelResident">
      <summary>
        <para>Indicates the shader requires the support of sparse textures with sampling instructions that return residency information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.TessellationCompute">
      <summary>
        <para>Indicates the shader requires the support of tessellation using a compute shader for control points processing. Metal graphics API requires this feature for tessellation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.TessellationShaders">
      <summary>
        <para>Indicates the shader requires the support of tessellation using the hull and domain shader stages.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Texture2DArray">
      <summary>
        <para>Indicates the shader requires 2D array textures.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderSnippetData">
      <summary>
        <para>Collection of properties about the specific shader code being compiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.passName">
      <summary>
        <para>Shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.passType">
      <summary>
        <para>Shader pass type for Unity's lighting pipeline.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.shaderType">
      <summary>
        <para>Shader stage in the rendering the pipeline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderType">
      <summary>
        <para>Identifies the stage in the rendering pipeline.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Count">
      <summary>
        <para>The number of ShaderTypes that Unity supports.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Domain">
      <summary>
        <para>Identifier for the domain Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Fragment">
      <summary>
        <para>Identifier for the fragment Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Geometry">
      <summary>
        <para>Identifier for the geometry Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Hull">
      <summary>
        <para>Identifier for the hull Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.RayTracing">
      <summary>
        <para>Identifier for the ray tracing Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Surface">
      <summary>
        <para>Identifier for the surface Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Vertex">
      <summary>
        <para>Identifier for the vertex Shader stage.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.TierSettings">
      <summary>
        <para>Used to set up per-platorm per-shader-hardware-tier graphics settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.cascadedShadowMaps">
      <summary>
        <para>Allows you to specify whether cascaded shadow maps should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.detailNormalMap">
      <summary>
        <para>Allows you to specify whether Detail Normal Map should be sampled if assigned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.enableLPPV">
      <summary>
        <para>Allows you to specify whether Light Probe Proxy Volume should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.hdr">
      <summary>
        <para>Setting this field to true enables HDR rendering for this tier. Setting it to false disables HDR rendering for this tier.
See Also:</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.hdrMode">
      <summary>
        <para>The CameraHDRMode to use for this tier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.prefer32BitShadowMaps">
      <summary>
        <para>Allows you to specify whether Unity should try to use 32-bit shadow maps, where possible.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.realtimeGICPUUsage">
      <summary>
        <para>The RealtimeGICPUUsage to use for this tier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.reflectionProbeBlending">
      <summary>
        <para>Allows you to specify whether Reflection Probes Blending should be enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.reflectionProbeBoxProjection">
      <summary>
        <para>Allows you to specify whether Reflection Probes Box Projection should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.renderingPath">
      <summary>
        <para>The rendering path that should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.semitransparentShadows">
      <summary>
        <para>Allows you to specify whether Semitransparent Shadows should be enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.standardShaderQuality">
      <summary>
        <para>Allows you to select Standard Shader Quality.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ReplacePrefabOptions">
      <summary>
        <para>Flags for the PrefabUtility.ReplacePrefab function.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.ConnectToPrefab">
      <summary>
        <para>Connects the passed objects to the Prefab after uploading the Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.Default">
      <summary>
        <para>Replaces Prefabs by matching pre-existing connections to the Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.ReplaceNameBased">
      <summary>
        <para>Replaces the Prefab using name based lookup in the transform hierarchy.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ResolutionDialogSetting">
      <summary>
        <para>Resolution dialog setting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.Disabled">
      <summary>
        <para>Never show the resolution dialog.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.Enabled">
      <summary>
        <para>Show the resolution dialog on first launch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.HiddenByDefault">
      <summary>
        <para>Hide the resolution dialog on first launch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneAsset">
      <summary>
        <para>SceneAsset is used to reference Scene objects in the Editor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.AddedComponent">
      <summary>
        <para>Class with information about a component that has been added to a Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedComponent.instanceComponent">
      <summary>
        <para>The added component on the Prefab instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
      <param name="mode"></param>
    </member>
    <member name="T:UnityEditor.SceneManagement.AddedGameObject">
      <summary>
        <para>Class with information about a GameObject that has been added as a child under a Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedGameObject.instanceGameObject">
      <summary>
        <para>The added GameObject on the Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedGameObject.siblingIndex">
      <summary>
        <para>The sibling index of the added GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
      <param name="mode"></param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager">
      <summary>
        <para>Scene management in the Editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.activeSceneChangedInEditMode(UnityEngine.Events.UnityAction`2&lt;UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene&gt;)">
      <summary>
        <para>Subscribe to this event to get notified when the active Scene has changed in Edit mode in the Editor.</para>
      </summary>
      <param name="value">Previous active Scene and the new active Scene.</param>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.loadedSceneCount">
      <summary>
        <para>The number of loaded Scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.newSceneCreated(UnityEditor.SceneManagement.EditorSceneManager/NewSceneCreatedCallback)">
      <summary>
        <para>This event is called after a new Scene has been created.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.playModeStartScene">
      <summary>
        <para>Loads this SceneAsset when you start Play Mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.preventCrossSceneReferences">
      <summary>
        <para>Controls whether cross-Scene references are allowed in the Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.previewSceneCount">
      <summary>
        <para>The current amount of active preview Scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneClosed(UnityEditor.SceneManagement.EditorSceneManager/SceneClosedCallback)">
      <summary>
        <para>This event is called after a Scene has been closed in the editor.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneClosing(UnityEditor.SceneManagement.EditorSceneManager/SceneClosingCallback)">
      <summary>
        <para>This event is called before closing an open Scene after you have requested that the Scene is closed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneDirtied(UnityEditor.SceneManagement.EditorSceneManager/SceneDirtiedCallback)">
      <summary>
        <para>This event is called after a Scene has been modified in the editor.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneOpened(UnityEditor.SceneManagement.EditorSceneManager/SceneOpenedCallback)">
      <summary>
        <para>This event is called after a Scene has been opened in the editor.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneOpening(UnityEditor.SceneManagement.EditorSceneManager/SceneOpeningCallback)">
      <summary>
        <para>This event is called before opening an existing Scene.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneSaved(UnityEditor.SceneManagement.EditorSceneManager/SceneSavedCallback)">
      <summary>
        <para>This event is called after a Scene has been saved.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneSaving(UnityEditor.SceneManagement.EditorSceneManager/SceneSavingCallback)">
      <summary>
        <para>This event is called before a Scene is saved disk after you have requested the Scene to be saved.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.CalculateAvailableSceneCullingMask">
      <summary>
        <para>Go through all Scenes and find the smallest unused bit in the unition of all Scene culling masks.</para>
      </summary>
      <returns>
        <para>The lowest unused bit of the union of all culling masks.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.ClosePreviewScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Closes a preview Scene created by NewPreviewScene.</para>
      </summary>
      <param name="scene">The preview Scene to close.</param>
      <returns>
        <para>True if the Scene was successfully closed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.CloseScene(UnityEngine.SceneManagement.Scene,System.Boolean)">
      <summary>
        <para>Close the Scene. If removeScene flag is true, the closed Scene will also be removed from EditorSceneManager.</para>
      </summary>
      <param name="scene">The Scene to be closed/removed.</param>
      <param name="removeScene">Bool flag to indicate if the Scene should be removed after closing.</param>
      <returns>
        <para>Returns true if the Scene is closed/removed.</para>
      </returns>
    </member>
    <member name="F:UnityEditor.SceneManagement.EditorSceneManager.DefaultSceneCullingMask">
      <summary>
        <para>Use SceneCullingMasks.DefaultSceneCullingMask instead.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.DetectCrossSceneReferences(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Detects cross-Scene references in a Scene.</para>
      </summary>
      <param name="scene">Scene to check for cross-Scene references.</param>
      <returns>
        <para>Was any cross-Scene references found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.EnsureUntitledSceneHasBeenSaved(System.String)">
      <summary>
        <para>Shows a save dialog if an Untitled Scene exists in the current Scene manager setup.</para>
      </summary>
      <param name="dialogContent">Text shown in the save dialog.</param>
      <returns>
        <para>True if the Scene is saved or if there is no Untitled Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.GetSceneCullingMask(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Return the culling mask set on the given Scene.</para>
      </summary>
      <param name="scene">The scene to get the culling mask from.</param>
      <returns>
        <para>The scene's current culling mask as a bitfield.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.GetSceneManagerSetup">
      <summary>
        <para>Returns the current setup of the SceneManager.</para>
      </summary>
      <returns>
        <para>An array of SceneSetup classes - one item for each Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.IsPreviewScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Is the Scene a preview Scene?</para>
      </summary>
      <param name="scene">The Scene to check.</param>
      <returns>
        <para>True if the Scene is a preview Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.IsPreviewSceneObject(UnityEngine.Object)">
      <summary>
        <para>Is this object part of a preview Scene?</para>
      </summary>
      <param name="obj">The object to check.</param>
      <returns>
        <para>True if this object is part of a preview Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.LoadSceneAsyncInPlayMode(System.String,UnityEngine.SceneManagement.LoadSceneParameters)">
      <summary>
        <para>This method allows you to load a Scene during playmode in the editor, without requiring the Scene to be included in the Scene list.</para>
      </summary>
      <param name="path">Path to Scene to load.</param>
      <param name="parameters">Parameters to apply to loading. See SceneManagement.LoadSceneParameters.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.LoadSceneInPlayMode(System.String,UnityEngine.SceneManagement.LoadSceneParameters)">
      <summary>
        <para>This method allows you to load a Scene during playmode in the editor, without requiring the Scene to be included in the Scene list.</para>
      </summary>
      <param name="path">Path to Scene to load.</param>
      <param name="parameters">Parameters used to load the Scene SceneManagement.LoadSceneParameters.</param>
      <returns>
        <para>Scene that is loading.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MarkAllScenesDirty">
      <summary>
        <para>Mark all the loaded Scenes as modified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MarkSceneDirty(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Mark the specified Scene as modified.</para>
      </summary>
      <param name="scene">The Scene to be marked as modified.</param>
      <returns>
        <para>Whether the Scene was successfully marked as dirty.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MoveSceneAfter(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Allows you to reorder the Scenes currently open in the Hierarchy window. Moves the source Scene so it comes after the destination Scene.</para>
      </summary>
      <param name="src">The Scene to move.</param>
      <param name="dst">The Scene which should come directly before the source Scene in the hierarchy.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MoveSceneBefore(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Allows you to reorder the Scenes currently open in the Hierarchy window. Moves the source Scene so it comes before the destination Scene.</para>
      </summary>
      <param name="src">The Scene to move.</param>
      <param name="dst">The Scene which should come directly after the source Scene in the hierarchy.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.NewPreviewScene">
      <summary>
        <para>Creates a new preview Scene.  Any object added to a preview Scene will only be rendered in that Scene.</para>
      </summary>
      <returns>
        <para>The new preview Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.NewScene(UnityEditor.SceneManagement.NewSceneSetup,UnityEditor.SceneManagement.NewSceneMode)">
      <summary>
        <para>Create a new Scene.</para>
      </summary>
      <param name="setup">Whether the new Scene should use the default set of GameObjects.</param>
      <param name="mode">Whether to keep existing Scenes open.</param>
      <returns>
        <para>A reference to the new Scene.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.NewSceneCreatedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the newSceneCreated event are called after a new Scene has been created.</para>
      </summary>
      <param name="scene">The Scene that was created.</param>
      <param name="setup">The setup mode used when creating the Scene.</param>
      <param name="mode">The mode used for creating the Scene.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.OpenScene(System.String,UnityEditor.SceneManagement.OpenSceneMode)">
      <summary>
        <para>Open a Scene in the Editor.</para>
      </summary>
      <param name="scenePath">The path of the Scene. This should be relative to the Project folder; for example, "AssetsMyScenesMyScene.unity".</param>
      <param name="mode">Allows you to select how to open the specified Scene, and whether to keep existing Scenes in the Hierarchy. See SceneManagement.OpenSceneMode for more information about the options.</param>
      <returns>
        <para>A reference to the opened Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.RestoreSceneManagerSetup(UnityEditor.SceneManagement.SceneSetup[])">
      <summary>
        <para>Restore the setup of the SceneManager.</para>
      </summary>
      <param name="value">In this array, at least one Scene should be loaded, and there must be one active Scene.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveCurrentModifiedScenesIfUserWantsTo">
      <summary>
        <para>Asks you if you want to save the modified Scene or Scenes.</para>
      </summary>
      <returns>
        <para>This returns true if you chose to save the Scene or Scenes, and returns false if you pressed Cancel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveModifiedScenesIfUserWantsTo(UnityEngine.SceneManagement.Scene[])">
      <summary>
        <para>Asks whether the modfied input Scenes should be saved.</para>
      </summary>
      <param name="scenes">Scenes that should be saved if they are modified.</param>
      <returns>
        <para>Your choice of whether to save or not save the Scenes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveOpenScenes">
      <summary>
        <para>Save all open Scenes.</para>
      </summary>
      <returns>
        <para>Returns true if all open Scenes are successfully saved.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveScene(UnityEngine.SceneManagement.Scene,System.String,System.Boolean)">
      <summary>
        <para>Save a Scene.</para>
      </summary>
      <param name="scene">The Scene to be saved.</param>
      <param name="dstScenePath">The file path to save the Scene to. If the path is empty, the current open Scene is overwritten. If it has not yet been saved at all, a save dialog is shown.</param>
      <param name="saveAsCopy">If set to true, the Scene is saved without changing the current Scene, and without clearing the unsaved changes marker.</param>
      <returns>
        <para>True if the save succeeded, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveScenes(UnityEngine.SceneManagement.Scene[])">
      <summary>
        <para>Save a list of Scenes.</para>
      </summary>
      <param name="scenes">List of Scenes that should be saved.</param>
      <returns>
        <para>True if the save succeeded. Otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneClosedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneClosed event are called immediately after the Scene has been closed.</para>
      </summary>
      <param name="scene">The Scene that was closed.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneClosingCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneClosing event are called just before a Scene is closed.</para>
      </summary>
      <param name="scene">The Scene that is going to be closed.</param>
      <param name="removingScene">Whether or not the Scene is also going to be removed from the Scene Manager after closing. If true the Scene is removed after closing.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneDirtiedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneDirtied event are called after a Scene changes from being unmodified to being modified.</para>
      </summary>
      <param name="scene"></param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneOpenedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneOpened event are called after a Scene has been opened.</para>
      </summary>
      <param name="scene">The Scene that was opened.</param>
      <param name="mode">The mode used to open the Scene.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneOpeningCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneOpening event are called just before opening a Scene.</para>
      </summary>
      <param name="path">Path of the Scene to be opened. This is relative to the Project path.</param>
      <param name="mode">Mode that is used when opening the Scene.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneSavedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneSaved event are called after a Scene has been saved.</para>
      </summary>
      <param name="scene">The Scene that was saved.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneSavingCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneSaving event are called just before the Scene is saved.</para>
      </summary>
      <param name="scene">The Scene to be saved.</param>
      <param name="path">The path to which the Scene is saved.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SetSceneCullingMask(UnityEngine.SceneManagement.Scene,System.UInt64)">
      <summary>
        <para>Set the culling mask on this scene to this value.
Cameras will only render objects in Scenes that have the same bits set in their culling mask.</para>
      </summary>
      <param name="scene">The scene to set the culling mask on.</param>
      <param name="sceneCullingMask">The value of the culling mask, stored as a bitfield.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.MainStage">
      <summary>
        <para>The Main Stage contains all the currently open regular Scenes and is always available.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.NewSceneMode">
      <summary>
        <para>Used when creating a new Scene in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneMode.Additive">
      <summary>
        <para>The newly created Scene is added to the current open Scenes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneMode.Single">
      <summary>
        <para>All current open Scenes are closed and the newly created Scene are opened.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.NewSceneSetup">
      <summary>
        <para>Used when creating a new Scene in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneSetup.DefaultGameObjects">
      <summary>
        <para>Adds default game objects to the new Scene (a light and camera).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneSetup.EmptyScene">
      <summary>
        <para>No game objects are added to the new Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.ObjectOverride">
      <summary>
        <para>Class with information about an object on a Prefab instance with overridden properties.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.ObjectOverride.coupledOverride">
      <summary>
        <para>Access the coupled component modifications of the object being overidden, if present.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.ObjectOverride.instanceObject">
      <summary>
        <para>The object on the Prefab instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.Revert">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.OpenSceneMode">
      <summary>
        <para>Used when opening a Scene in the Editor to specify how a Scene should be opened.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.Additive">
      <summary>
        <para>Adds a Scene to the current open Scenes and loads it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.AdditiveWithoutLoading">
      <summary>
        <para>Adds a Scene to the current open Scenes without loading it. It will show up as 'unloaded' in the Hierarchy Window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.Single">
      <summary>
        <para>Closes all current open Scenes and loads a Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabOverride">
      <summary>
        <para>Class with information about a given override on a Prefab instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Apply(System.String)">
      <summary>
        <para>Applies the override to the Prefab Asset at the given path.</para>
      </summary>
      <param name="prefabAssetPath">The path of the Prefab Asset to apply to.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Apply">
      <summary>
        <para>Applies the override to the Prefab Asset at the given path.</para>
      </summary>
      <param name="prefabAssetPath">The path of the Prefab Asset to apply to.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.FindApplyTargetAssetObject(System.String)">
      <summary>
        <para>Finds the object in the Prefab Asset at the given path which will be applied to.</para>
      </summary>
      <param name="prefabAssetPath">The asset path of the Prefab Asset to apply to.</param>
      <returns>
        <para>The object inside the Prefab Asset affected by the override.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.GetAssetObject">
      <summary>
        <para>Returns the asset object of the override in the outermost Prefab that the Prefab instance comes from.</para>
      </summary>
      <returns>
        <para>The object inside the Prefab Asset affected by the override.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Revert">
      <summary>
        <para>Reverts the override on the Prefab instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PreviewSceneStage">
      <summary>
        <para>The PreviewSceneStage class represents an editing context based on a single preview Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PreviewSceneStage.scene">
      <summary>
        <para>The preview Scene this stage controls. Stage content should be moved into this Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PreviewSceneStage.stageHandle">
      <summary>
        <para>See Stage.stageHandle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PreviewSceneStage.OnCloseStage">
      <summary>
        <para>Unity calls this method when the Stage is closed. Classes that inherit from PreviewSceneStage should implement cleanup logic in this method.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PreviewSceneStage.OnOpenStage">
      <summary>
        <para>Unity calls this method when the Stage is opened. Classes that inherit from PreviewSceneStage should implement initialization logic in this method.</para>
      </summary>
      <returns>
        <para>If your Stage opened successfully return true, otherwise return false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.RemovedComponent">
      <summary>
        <para>Class with information about a component that has been removed from a Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.RemovedComponent.assetComponent">
      <summary>
        <para>The components on the Prefab Asset which has been removed on the Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.RemovedComponent.containingInstanceGameObject">
      <summary>
        <para>The GameObject on the Prefab instance that the component has been removed from.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
      <param name="mode"></param>
    </member>
    <member name="T:UnityEditor.SceneManagement.SceneCullingMasks">
      <summary>
        <para>Masks that control what kind of Scene views and Game views Unity should render a GameObject in.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.DefaultSceneCullingMask">
      <summary>
        <para>Specifies the default culling mask for a Scene.  Use the bits from this Scene culling mask for objects that you want to render in both in the Game view and the Scene view.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.GameViewObjects">
      <summary>
        <para>The bits from this mask specify GameObjects that Unity should render in Game view.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.MainStageSceneViewObjects">
      <summary>
        <para>The bits from this mask specify GameObjects that Unity should render in Scene views showing the main stage.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.SceneSetup">
      <summary>
        <para>The setup information for a Scene in the SceneManager. This cannot be used in Play Mode. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.isActive">
      <summary>
        <para>If the Scene is active.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.isLoaded">
      <summary>
        <para>If the Scene is loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.path">
      <summary>
        <para>Path of the Scene. Should be relative to the project folder. Like: "AssetsMyScenesMyScene.unity".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.Stage">
      <summary>
        <para>The Stage class represents an editing context which includes a collection of Scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.Stage.assetPath">
      <summary>
        <para>The path of the Asset file associated with the stage, relative to the project root folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.Stage.stageHandle">
      <summary>
        <para>The StageHandle struct for this stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.CreateHeaderContent">
      <summary>
        <para>Creates the header content for this Stage. Both the Hierarchy window header and Scene view breadcrumb bar use this content.</para>
      </summary>
      <returns>
        <para>The header content for this Stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.FindComponentOfType">
      <summary>
        <para>Returns the first active loaded object of the given type.</para>
      </summary>
      <returns>
        <para>This returns the object that matches the specified type. It returns null if no object matches the type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.FindComponentsOfType">
      <summary>
        <para>Returns a list of all active loaded objects of the given type.</para>
      </summary>
      <returns>
        <para>An array of objects found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.GetCombinedSceneCullingMaskForCamera">
      <summary>
        <para>Gets the Scene culling mask from this Stage.</para>
      </summary>
      <returns>
        <para>The combined Scene culling mask for this Stage. Unity uses this mask on the Scene view Camera for renderer filtering.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.GetHashForStateStorage">
      <summary>
        <para>Unity calls this method to get a hash code that is used to save the state of the Stage to disk.</para>
      </summary>
      <returns>
        <para>The hash code identifying this stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnCloseStage">
      <summary>
        <para>Unity calls this method when the Stage is closed. Classes that inherit from Stage should implement cleanup logic in this method.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnDisable">
      <summary>
        <para>See ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnEnable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnFirstTimeOpenStageInSceneView(UnityEditor.SceneView)">
      <summary>
        <para>Unity calls this method the first time a Stage is opened for a specific Asset, for a specific Scene view.</para>
      </summary>
      <param name="sceneView">The Scene view the Stage is opened in.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnOpenStage">
      <summary>
        <para>Unity calls this method when the Stage is opened. Classes that inherit from Stage should implement initialization logic in this method.</para>
      </summary>
      <returns>
        <para>true if Unity opened the Stage successfully, otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnReturnToStage">
      <summary>
        <para>Unity calls this method when you return to a Stage that is already open.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.StageHandle">
      <summary>
        <para>Struct that represents a stage handle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.Contains(UnityEngine.GameObject)">
      <summary>
        <para>Does the stage contain the given GameObject?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the stage contains the given GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.FindComponentOfType">
      <summary>
        <para>Returns the first active loaded object of the given type.</para>
      </summary>
      <returns>
        <para>This returns the object that matches the specified type. It returns null if no object matches the type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.FindComponentsOfType">
      <summary>
        <para>Returns a list of all active loaded objects of the given type.</para>
      </summary>
      <returns>
        <para>An array of objects found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.IsValid">
      <summary>
        <para>Is this stage handle valid?</para>
      </summary>
      <returns>
        <para>True if the stage handle is valid.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.StageUtility">
      <summary>
        <para>Utility methods related to stages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetCurrentStage">
      <summary>
        <para>The current Stage can either be the MainStage or any other opened Stage, visualized in the Scene view as the last breadcrumb in the breadcrumb bar.</para>
      </summary>
      <returns>
        <para>The current Stage that is currently being rendered in the Scene view and shown in the Hierarchy.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetCurrentStageHandle">
      <summary>
        <para>Get the current stage being edited.</para>
      </summary>
      <returns>
        <para>The current stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetMainStage">
      <summary>
        <para>Get the MainStage object. This object is always available.</para>
      </summary>
      <returns>
        <para>The Main Stage object.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetMainStageHandle">
      <summary>
        <para>Get the main stage which contains all the currently open regular Scenes.</para>
      </summary>
      <returns>
        <para>The main stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStage(UnityEngine.GameObject)">
      <summary>
        <para>Get the Stage object that contains the input GameObject or Scene.</para>
      </summary>
      <param name="gameObject"></param>
      <param name="scene"></param>
      <returns>
        <para>The Stage that contains either the GameObject or the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStage(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Get the Stage object that contains the input GameObject or Scene.</para>
      </summary>
      <param name="gameObject"></param>
      <param name="scene"></param>
      <returns>
        <para>The Stage that contains either the GameObject or the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStageHandle(UnityEngine.GameObject)">
      <summary>
        <para>Get the stage in which the given GameObject exists.</para>
      </summary>
      <param name="gameObject">The GameObject to find the stage of.</param>
      <returns>
        <para>The stage of the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStageHandle(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Get the stage in which the given Scene exists.</para>
      </summary>
      <param name="scene">The Scene to find the stage of.</param>
      <returns>
        <para>The stage of the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoBackToPreviousStage">
      <summary>
        <para>Navigate the Editor to the previous stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoToMainStage">
      <summary>
        <para>Navigate the Editor to the main stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoToStage(UnityEditor.SceneManagement.Stage,System.Boolean)">
      <summary>
        <para>Navigates the Editor to the specified stage.</para>
      </summary>
      <param name="stage">The stage to navigate to.</param>
      <param name="setAsFirstItemAfterMainStage">When set to true, the new stage replaces existing stages in the breadcrumbs, apart from the main stage.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.IsGameObjectRenderedByCamera(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
        <para>Is the given GameObject rendered by the given Camera?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <param name="camera">The camera to check.</param>
      <returns>
        <para>True if the GameObject is rendered by the camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.IsGameObjectRenderedByCameraAndPartOfEditableScene(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
        <para>Specifies whether the given Camera currently renders the given GameObject and the GameObject is also part of an editable scene.</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <param name="camera">The Camera to check.</param>
      <returns>
        <para>True if the GameObject is rendered by the camera and part of an editable scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.PlaceGameObjectInCurrentStage(UnityEngine.GameObject)">
      <summary>
        <para>Place the given GameObject in the current stage being edited.</para>
      </summary>
      <param name="gameObject">The GameObject to be placed in the current stage.</param>
    </member>
    <member name="T:UnityEditor.SceneView">
      <summary>
        <para>Use this class to manage SceneView settings, change the SceneView camera properties, subscribe to events, call SceneView methods, and render open scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.audioPlay">
      <summary>
        <para>Enables or disables Scene view audio effects.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.beforeSceneGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>The event issued when the OnGUI method is called.</para>
      </summary>
      <param name="value">The [[SceneView] that invokes this callback.</param>
    </member>
    <member name="P:UnityEditor.SceneView.camera">
      <summary>
        <para>The Camera that is rendering this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraDistance">
      <summary>
        <para>The distance from camera to pivot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraMode">
      <summary>
        <para>The current DrawCameraMode for the Scene view camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraSettings">
      <summary>
        <para>Use CameraSettings to set the properties for the SceneView Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.currentDrawingSceneView">
      <summary>
        <para>The SceneView that is being drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.drawGizmos">
      <summary>
        <para>Sets the visibility of all Gizmos in the Scene view.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.duringSceneGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Subscribe to this event to receive a callback whenever the Scene view calls the OnGUI method.</para>
      </summary>
      <param name="value">The Scene view invoking this callback.</param>
    </member>
    <member name="?:UnityEditor.SceneView.gridVisibilityChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Invoked when grid visibility changes.</para>
      </summary>
      <param name="value">New state of grid visibility.</param>
    </member>
    <member name="P:UnityEditor.SceneView.in2DMode">
      <summary>
        <para>Whether the SceneView is in 2D mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.isRotationLocked">
      <summary>
        <para>Whether the Scene view camera can be rotated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.lastActiveSceneView">
      <summary>
        <para>The SceneView that was most recently in focus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.lastSceneViewRotation">
      <summary>
        <para>When the Scene view is in 2D mode, this property contains the last camera rotation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_AudioPlay">
      <summary>
        <para>M_AudioPlay has been deprecated. Use audioPlay instead (UnityUpgradable) -&gt; audioPlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_RenderMode">
      <summary>
        <para>M_RenderMode has been deprecated. Use cameraMode instead.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_ValidateTrueMetals">
      <summary>
        <para>M_ValidateTrueMetals has been deprecated. Use validateTrueMetals instead (UnityUpgradable) -&gt; validateTrueMetals.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.onCameraModeChanged(System.Action`1&lt;UnityEditor.SceneView/CameraMode&gt;)">
      <summary>
        <para>An event that is invoked when the selected cameraMode changes.</para>
      </summary>
      <param name="value">The new camera mode.</param>
    </member>
    <member name="P:UnityEditor.SceneView.orthographic">
      <summary>
        <para>Whether the Scene view camera is set to orthographic mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.pivot">
      <summary>
        <para>The center point, or pivot, of the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.renderMode">
      <summary>
        <para>RenderMode has been deprecated. Use cameraMode instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.rotation">
      <summary>
        <para>The direction of the camera to the pivot of the SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneLighting">
      <summary>
        <para>Whether lighting is enabled or disabled in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneViews">
      <summary>
        <para>The list of all open Scene view windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneViewState">
      <summary>
        <para>Use SceneViewState to set the debug options for the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.selectedOutlineColor">
      <summary>
        <para>Gets the Color of selected outline.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.showGrid">
      <summary>
        <para>Gets or sets whether to enable the grid for an instance of the SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.size">
      <summary>
        <para>The size of the Scene view measured diagonally.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.validateTrueMetals">
      <summary>
        <para>Whether the albedo is black for materials with an average specular color above 0.45.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.AddCameraMode(System.String,System.String)">
      <summary>
        <para>Add a custom camera mode to the Scene view camera mode list.</para>
      </summary>
      <param name="name">The name for the new mode.</param>
      <param name="section">The section in which the new mode will be added. This can be an existing or new section.</param>
      <returns>
        <para>A CameraMode with the provided name and section.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.AlignViewToObject(UnityEngine.Transform)">
      <summary>
        <para>Moves the Scene view to frame a transform.</para>
      </summary>
      <param name="t">The transform to frame in the Scene view.</param>
    </member>
    <member name="M:UnityEditor.SceneView.AlignWithView">
      <summary>
        <para>Aligns the current selection with the position and rotation of the Scene view camera.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.CameraMode">
      <summary>
        <para>Describes a built-in Scene view mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.drawMode">
      <summary>
        <para>The CameraDrawMode associated with the CameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.name">
      <summary>
        <para>The name of the CameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.section">
      <summary>
        <para>The section in the toolbar drop-down that this CameraMode belongs to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.CameraMode.Equals(System.Object)">
      <summary>
        <para>Compares this CameraMode object against a specified CameraMode object.</para>
      </summary>
      <param name="otherObject">The CameraMode to compare.</param>
      <returns>
        <para>Returns true if the CameraMode objects are equal. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.CameraMode.ToString">
      <summary>
        <para>Gets a string summary of this CameraMode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.CameraSettings">
      <summary>
        <para>Use this class to set SceneView Camera properties.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.accelerationEnabled">
      <summary>
        <para>Enables Camera movement acceleration in the SceneView. This makes the Camera accelerate for the duration of movement.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.dynamicClip">
      <summary>
        <para>When enabled, the SceneView Camera's near and far clipping planes are calculated relative to the viewport size of the Scene. When disabled, nearClip and farClip are used instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.easingDuration">
      <summary>
        <para>How long it takes for the speed of the SceneView Camera to accelerate to its initial full speed. Measured in seconds. Valid values are between [0.1, 2].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.easingEnabled">
      <summary>
        <para>Enables Camera movement easing in the SceneView. This makes the Camera ease in when it starts moving, and ease out when it stops.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.farClip">
      <summary>
        <para>The furthest point from the SceneView Camera that drawing occurs. The valid minimum value is 0.02.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.fieldOfView">
      <summary>
        <para>The height of the SceneView Camera's view angle. Measured in degrees vertically, or along the local Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.nearClip">
      <summary>
        <para>The closest point to the SceneView Camera where drawing occurs. The valid minimum value is 0.01.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.occlusionCulling">
      <summary>
        <para>Enables occlusion culling in the SceneView. This prevents Unity from rendering GameObjects that the Camera cannot see because they are hidden by other GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speed">
      <summary>
        <para>The speed of the SceneView Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedMax">
      <summary>
        <para>The maximum speed of the SceneView Camera. Valid values are between [0.02, 99].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedMin">
      <summary>
        <para>The minimum speed of the SceneView Camera. Valid values are between [0.01, 98].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedNormalized">
      <summary>
        <para>The normalized speed of the SceneView Camera, relative to the current minimum/maximum range. Valid values are between [0, 1].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.CameraSettings.#ctor">
      <summary>
        <para>Create a new CameraSettings object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.ClearUserDefinedCameraModes">
      <summary>
        <para>Remove all user-defined camera modes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.Frame(UnityEngine.Bounds)">
      <summary>
        <para>Frames the given bounds in the Scene view.</para>
      </summary>
      <param name="bounds">The bounds to frame in the Scene view.</param>
      <param name="instant">Set to true to immediately frame the camera. Set to false to animate the action.</param>
      <returns>
        <para>Returns true if the given bounds can be encompassed in the Scene view. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameLastActiveSceneView">
      <summary>
        <para>Frames the currently selected object(s) in the last active Scene view.</para>
      </summary>
      <returns>
        <para>Returns true if the camera frame successfully frames the current selection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameSelected">
      <summary>
        <para>Frame the object selection in the Scene view.</para>
      </summary>
      <param name="lockView">Whether the view should be locked to the selection.</param>
      <returns>
        <para>Returns true if the current selection fits in the Scene view. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameSelected(System.Boolean)">
      <summary>
        <para>Frame the object selection in the Scene view.</para>
      </summary>
      <param name="lockView">Whether the view should be locked to the selection.</param>
      <returns>
        <para>Returns true if the current selection fits in the Scene view. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.GetAllSceneCameras">
      <summary>
        <para>Retrieves an array of all camera components from all open Scene views.</para>
      </summary>
      <returns>
        <para>Returns an array of camera components.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.GetBuiltinCameraMode(UnityEditor.DrawCameraMode)">
      <summary>
        <para>Gets the built-in CameraMode that matches the specified DrawCameraMode.</para>
      </summary>
      <param name="mode">The DrawCameraMode to match.</param>
      <returns>
        <para>Returns a built-in CameraMode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.IsCameraDrawModeEnabled(UnityEditor.SceneView/CameraMode)">
      <summary>
        <para>Returns true if mode is enabled in the current rendering setup, including custom validators.</para>
      </summary>
      <param name="mode">A CameraMode to check.</param>
      <returns>
        <para>Returns true if the CameraMode is available in this SceneView. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Boolean)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>.LookAt without animating the scene movement.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction from which the Scene view should view the point.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>.LookAt without animating the scene movement.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction from which the Scene view should view the point.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
    </member>
    <member name="M:UnityEditor.SceneView.MoveToView">
      <summary>
        <para>Transforms all selected object to the scene pivot.</para>
      </summary>
      <param name="target">A transform to place at the scene pivot.</param>
    </member>
    <member name="M:UnityEditor.SceneView.MoveToView(UnityEngine.Transform)">
      <summary>
        <para>Transforms all selected object to the scene pivot.</para>
      </summary>
      <param name="target">A transform to place at the scene pivot.</param>
    </member>
    <member name="M:UnityEditor.SceneView.RepaintAll">
      <summary>
        <para>Repaints every open SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.ResetCameraSettings">
      <summary>
        <para>Resets the CameraSettings for the SceneView Camera to default.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.SceneViewState">
      <summary>
        <para>A collection of graphic settings for this SceneView. All graphic settings are boolean.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.allEnabled">
      <summary>
        <para>Whether all graphic settings are enabled for this SceneViewState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.alwaysRefresh">
      <summary>
        <para>Whether to redraw SceneView at a fixed interval.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.alwaysRefreshEnabled">
      <summary>
        <para>Whether to redraw SceneView at a fixed interval.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.flaresEnabled">
      <summary>
        <para>Whether lens flares render in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.fogEnabled">
      <summary>
        <para>Whether fog renders in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.fxEnabled">
      <summary>
        <para>Whether to render (when enabled) effects in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.imageEffectsEnabled">
      <summary>
        <para>Whether image effects (post processing) render in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.materialUpdateEnabled">
      <summary>
        <para>Whether animated materials render in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.particleSystemsEnabled">
      <summary>
        <para>Whether particle systems render in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showFlares">
      <summary>
        <para>Whether lens flare rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showFog">
      <summary>
        <para>Whether fog rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showImageEffects">
      <summary>
        <para>Whether image effects (post processing) rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.showMaterialUpdate">
      <summary>
        <para>Whether animated materials rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showParticleSystems">
      <summary>
        <para>Whether particle systems rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showSkybox">
      <summary>
        <para>Whether the skybox rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showVisualEffectGraphs">
      <summary>
        <para>Whether visual effect graphs rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.skyboxEnabled">
      <summary>
        <para>Whether the skybox renders in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.visualEffectGraphsEnabled">
      <summary>
        <para>Whether visual effect graphs render in this SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.#ctor">
      <summary>
        <para>Creates a new SceneViewState with either default values or values from another SceneViewState.</para>
      </summary>
      <param name="other">Specify a SceneViewState to copy values from when creating the new SceneViewState. If this param is not specified, the new SceneViewState is created with default values.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.#ctor(UnityEditor.SceneView/SceneViewState)">
      <summary>
        <para>Creates a new SceneViewState with either default values or values from another SceneViewState.</para>
      </summary>
      <param name="other">Specify a SceneViewState to copy values from when creating the new SceneViewState. If this param is not specified, the new SceneViewState is created with default values.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.SetAllEnabled(System.Boolean)">
      <summary>
        <para>Sets all graphic settings, for this SceneViewState, to either true or false.</para>
      </summary>
      <param name="value">The new value for all graphic settings in this SceneViewState. Possible values are true or false.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SetSceneViewShaderReplace(UnityEngine.Shader,System.String)">
      <summary>
        <para>Sets a replacement shader for rendering this Scene view.</para>
      </summary>
      <param name="shader">The replacement shader.</param>
      <param name="replaceString">The replacement shader tag.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SupportsStageHandling">
      <summary>
        <para>Override this method to control whether the Scene view should change when you switch from one stage to another stage.</para>
      </summary>
      <returns>
        <para>True if the Scene view automatically reacts to stage changes.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneViewCameraWindow">
      <summary>
        <para>Use this class to instantiate a SceneViewCameraWindow window.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneViewCameraWindow.additionalSettingsGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Subscribe to this event to receive a callback when the SceneViewCameraWindow.OnGUI function is called.</para>
      </summary>
      <param name="value">The SceneView that opened the SceneViewCameraWindow window.</param>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.#ctor(UnityEditor.SceneView)">
      <summary>
        <para>Creates an instance of the SceneViewCameraWindow window.</para>
      </summary>
      <param name="sceneView">The SceneView inspected by the SceneViewCameraWindow window.</param>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.GetWindowSize">
      <summary>
        <para>Retrieves the dimensions of the SceneViewCameraWindow window.</para>
      </summary>
      <returns>
        <para>Returns the width and height of the SceneViewCameraWindow window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>A callback used for drawing the GUI controls of the SceneViewCameraWindow window.</para>
      </summary>
      <param name="rect">The rectangle where the GUI controls are drawn.</param>
    </member>
    <member name="T:UnityEditor.SceneVisibilityManager">
      <summary>
        <para>Manages Scene Visibility in the editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneVisibilityManager.pickingChanged(System.Action)">
      <summary>
        <para>The event raised whenever the picking state of a GameObject changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEditor.SceneVisibilityManager.visibilityChanged(System.Action)">
      <summary>
        <para>The event raised whenever the visibility of a GameObject changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsHidden(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether all the descendants of a GameObject are hidden.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <returns>
        <para>Returns true if all descendants are hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsHidden(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether root GameObjects, and all their descendants, are hidden in a Scene.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true if all root GameObjects of the Scene and all their descendants are hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsVisible(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether all the descendants are visible.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <returns>
        <para>Returns true if all descendants of the GameObject are visible.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAnyDescendantsHidden(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether any descendants are hidden.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true when at least one hidden descendant is found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisableAllPicking">
      <summary>
        <para>Disables picking on all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Disables picking on a GameObject, or an Array of GameObjects, and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject on which to disable picking.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObjects">Array of GameObjects on which to disable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Disables picking on a GameObject, or an Array of GameObjects, and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject on which to disable picking.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObjects">Array of GameObjects on which to disable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Disables picking on all GameObjects in a Scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects on which to disable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnableAllPicking">
      <summary>
        <para>Enables picking on all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Enables picking on a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObject">GameObject on which to enable picking.</param>
      <param name="gameObjects">Array of GameObjects on which to enable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Enables picking on a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObject">GameObject on which to enable picking.</param>
      <param name="gameObjects">Array of GameObjects on which to enable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Enables picking on all GameObjects in a Scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects on which to enable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ExitIsolation">
      <summary>
        <para>Exits Isolation Mode.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Hides a GameObject, or an Array of GameObjects,  and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject to hide.</param>
      <param name="gameObjects">Array of GameObjects to hide.</param>
      <param name="includeDescendants">Whether to also hide descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Hides a GameObject, or an Array of GameObjects,  and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject to hide.</param>
      <param name="gameObjects">Array of GameObjects to hide.</param>
      <param name="includeDescendants">Whether to also hide descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Hides all GameObjects in a scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects to hide.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.HideAll">
      <summary>
        <para>Hides all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsCurrentStageIsolated">
      <summary>
        <para>Checks whether the current stage is in Isolation mode.</para>
      </summary>
      <returns>
        <para>Returns true if current stage is in Isolation mode. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsHidden(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Checks the hidden state of a GameObject and, optionally, its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <param name="includeDescendants">Specify true to check the GameObject and all its descendants. Set to false to check the GameObject.</param>
      <returns>
        <para>When includeDescendants is true, this method returns true when the GameObject and all its descendants are hidden. When includeDescendants is false, this method returns true when the GameObject is hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Isolate(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Isolates a GameObject and its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to isolate.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Isolate(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Isolates an Array of GameObjects and their descendants.</para>
      </summary>
      <param name="gameObjects">Array of GameObjects to isolate.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabled(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Checks the picking state of a GameObject and, optionally, its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <param name="includeDescendants">Specify true to check the GameObject and all its descendants. Set to false to check the GameObject.</param>
      <returns>
        <para>When includeDescendants is true, this method returns true when the GameObject and all its descendants have picking disabled. When includeDescendants is false, this method returns true when the GameObject has picking disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAllDescendants(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether all the descendants of a GameObject have picking disabled.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true if all descendants have picking disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAllDescendants(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether root GameObjects, and all their descendants, have picking disabled in a scene.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <returns>
        <para>Returns true if all root GameObjects of the Scene and all their descendants have picking disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAnyDescendant(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether any descendants have picking disabled.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true when at least one descendant with picking disabled is found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingEnabledOnAllDescendants(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether all the descendants are pickable.</para>
      </summary>
      <param name="gameObject">GameObject on which to do the check.</param>
      <returns>
        <para>Returns true if all descendants of the GameObject are pickable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Shows a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to show.</param>
      <param name="gameObjects">Array of GameObjects to show.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Shows a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to show.</param>
      <param name="gameObjects">Array of GameObjects to show.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Shows all GameObjects in scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects to show.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ShowAll">
      <summary>
        <para>Shows all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.TogglePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Toggles the picking ability of a GameObject.</para>
      </summary>
      <param name="gameObject">GameObject on which to toggle picking ability.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ToggleVisibility(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Toggles the visible state of a GameObject.</para>
      </summary>
      <param name="gameObject">GameObject on which to toggle visibility.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="T:UnityEditor.ScriptableSingleton`1">
      <summary>
        <para>Generic class for storing Editor state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableSingleton_1.instance">
      <summary>
        <para>Gets the instance of the Singleton. Unity creates the Singleton instance when this property is accessed for the first time. If you use the FilePathAttribute, then Unity loads the data on the first access as well.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ScriptableSingleton_1.GetFilePath">
      <summary>
        <para>Get the file path where this ScriptableSingleton is saved to.</para>
      </summary>
      <returns>
        <para>The file path where this ScriptableSingleton is saved to.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableSingleton_1.Save(System.Boolean)">
      <summary>
        <para>Saves the current state of the ScriptableSingleton.</para>
      </summary>
      <param name="saveAsText">If true then the file is saved as text, if false it is saved as binary.</param>
    </member>
    <member name="T:UnityEditor.ScriptableWizard">
      <summary>
        <para>Derive from this class to create an editor wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.createButtonName">
      <summary>
        <para>Allows you to set the text shown on the create button of the wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.errorString">
      <summary>
        <para>Allows you to set the error text of the wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.helpString">
      <summary>
        <para>Allows you to set the help text of the wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.isValid">
      <summary>
        <para>Allows you to enable and disable the wizard create button, so that the user can not click it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.otherButtonName">
      <summary>
        <para>Allows you to set the text shown on the optional other button of the wizard. Leave this parameter out to leave the button out.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <param name="createButtonName">The text shown on the create button.</param>
      <param name="otherButtonName">The text shown on the optional other button. Leave this parameter out to leave the button out.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String,System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <param name="createButtonName">The text shown on the create button.</param>
      <param name="otherButtonName">The text shown on the optional other button. Leave this parameter out to leave the button out.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.Type,System.String,System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <param name="klass">The class implementing the wizard. It has to derive from ScriptableWizard.</param>
      <param name="createButtonName">The text shown on the create button.</param>
      <param name="otherButtonName">The text shown on the optional other button. Leave this parameter out to leave the button out.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DrawWizardGUI">
      <summary>
        <para>Will be called for drawing contents when the ScriptableWizard needs to update its GUI.</para>
      </summary>
      <returns>
        <para>Returns true if any property has been modified.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ScriptCallOptimizationLevel">
      <summary>
        <para>Script call optimization level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCallOptimizationLevel.FastButNoExceptions">
      <summary>
        <para>Script method call overhead decreased at the expense of limited compatibility.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCallOptimizationLevel.SlowAndSafe">
      <summary>
        <para>Default setting.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptCompiler">
      <summary>
        <para>Represents different C# compilers that can be used to compile C# scripts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCompiler.Mono">
      <summary>
        <para>Mono C# Compiler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCompiler.Roslyn">
      <summary>
        <para>Roslyn C# Compiler.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Scripting.ManagedDebugger">
      <summary>
        <para>Representation of managed debugger in UnityEditor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Scripting.ManagedDebugger.debuggerAttached(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>This event triggers whenever managed debugger is attached or detached.</para>
      </summary>
      <param name="value">if the debugger is attached or not.</param>
    </member>
    <member name="P:UnityEditor.Scripting.ManagedDebugger.isAttached">
      <summary>
        <para>Returns true if there is a managed debugger attached to the UnityEditor, or false if there is not.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Scripting.ManagedDebugger.isEnabled">
      <summary>
        <para>Returns true if managed debugger is enabled, or false if it is not.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Scripting.ManagedDebugger.Disconnect">
      <summary>
        <para>Disconnects the managed debugger attached to the UnityEditor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptingImplementation">
      <summary>
        <para>Scripting implementation (backend).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.IL2CPP">
      <summary>
        <para>Unity's .NET runtime.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.Mono2x">
      <summary>
        <para>The standard Mono 2.6 runtime.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.WinRTDotNET">
      <summary>
        <para>Microsoft's .NET runtime.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptingRuntimeVersion">
      <summary>
        <para>Available scripting runtimes to be used by the Editor and Players.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingRuntimeVersion.Latest">
      <summary>
        <para>Use the most recent version of the scripting runtime available.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingRuntimeVersion.Legacy">
      <summary>
        <para>Use the stable version of the scripting runtime.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.IFilterEngine_1">
      <summary>
        <para>The base interface for search engines that implement a filter operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.IFilterEngine_1.Filter(UnityEditor.SearchService.ISearchContext,System.String,T)">
      <summary>
        <para>This function checks whether or not the specified element satisfies the search query.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="query">The query string used for the search.</param>
      <param name="objectToFilter">The element to test against the search query.</param>
      <returns>
        <para>True if the element satisfies the search query, false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.SearchService.IObjectSelectorEngine">
      <summary>
        <para>An interface that ObjectSelector engines implement. It inherits from SearchService.ISelectorEngine.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.IProjectSearchEngine">
      <summary>
        <para>The interface for Project engines to implement. It inherits from SearchService.ISearchEngine_1.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISceneSearchEngine">
      <summary>
        <para>The interface for Scene engines to implement. It inherits from SearchService.IFilterEngine_1.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchContext">
      <summary>
        <para>The base interface for search contexts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.engineScope">
      <summary>
        <para>An enum that identifies the current search scope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.requiredTypes">
      <summary>
        <para>IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchEngine_1">
      <summary>
        <para>The base interface for search engines that implement a search operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngine_1.Search(UnityEditor.SearchService.ISearchContext,System.String,System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;)">
      <summary>
        <para>This function returns an IEnumerable of items that satisfy the search query.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="query">The query string used for the search.</param>
      <param name="asyncItemsReceived">Callback used to return results asynchronously.</param>
      <returns>
        <para>The initial search results, if any are available. If you want to return results asynchronously, and no results are available yet, return an empty list instead. If you return null, then Unity uses the default implementation.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchEngineBase">
      <summary>
        <para>The base interface for all search engines.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchEngineBase.name">
      <summary>
        <para>The name displayed in the Preferences window in the Unity Editor. This name is used to store the active engine in the preferences.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.BeginSearch(UnityEditor.SearchService.ISearchContext,System.String)">
      <summary>
        <para>A function called at the beginning of each search.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="query">The query string used for the search.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.BeginSession(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>A function called at the beginning of a search session.</para>
      </summary>
      <param name="context">The search context.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.EndSearch(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>A function called at the end of a search.</para>
      </summary>
      <param name="context">The search context.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.EndSession(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>A function called at the end of a search session.</para>
      </summary>
      <param name="context">The search context.</param>
    </member>
    <member name="?:UnityEditor.SearchService.ISelectorEngine">
      <summary>
        <para>The base interface for search engines that implement an object select operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISelectorEngine.SelectObject(UnityEditor.SearchService.ISearchContext,System.Action`2&lt;UnityEngine.Object,System.Boolean&gt;,System.Action`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>This function is called when a window must be opened to perform a search and select operation.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="onObjectSelectorClosed">Callback to call when the selector window is closed. The callback takes two arguments. The first argument is the selected object, or null for none. The second is a boolean that indicates whether the operation was cancelled or not.</param>
      <param name="onObjectSelectedUpdated">Callback to call when the selection in the window changes. This callback takes one argument: the selected object, or null for none.</param>
      <returns>
        <para>True if the search engine handles the object select operation, false otherwise. If false is returned, the default object selector is used instead.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SearchService.ISelectorEngine.SetSearchFilter(UnityEditor.SearchService.ISearchContext,System.String)">
      <summary>
        <para>This function is called when the initial search text for the object selector window is set.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="searchFilter">The search filter to set on the object selector window.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelector">
      <summary>
        <para>Use this API to select objects. Engines for this type of search implement the SearchService.IObjectSelectorEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ObjectSelector.EngineScope">
      <summary>
        <para>A enum that indicates the search scope of ObjectSelector engines. Used by ObjectSelectorSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelector.RegisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Registers an ObjectSelector search engine dynamically.</para>
      </summary>
      <param name="engine">The ObjectSelector search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelector.UnregisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The ObjectSelector search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorEngineAttribute">
      <summary>
        <para>Use this class attribute to register ObjectSelector search engines automatically. Search engines with this attribute must implement the SearchService.IObjectSelectorEngine interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorHandlerAttribute">
      <summary>
        <para>A class attribute that allows you to define dynamic constraint on a MonoBehavior or ScriptableObject's field for the object selector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorHandlerAttribute.attributeType">
      <summary>
        <para>The attribute type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorHandlerAttribute.#ctor(System.Type)">
      <summary>
        <para>Constructor used to declare the SearchService.ObjectSelectorHandlerAttribute on a method.</para>
      </summary>
      <param name="attributeType">The attribute type.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorSearchContext">
      <summary>
        <para>A search context implementation for ObjectSelector search engines. All methods that are called on an ObjectSelector search engine, and expect a SearchService.ISearchContext, receive an object of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.allowedInstanceIds">
      <summary>
        <para>IEnumerable of integers that contains the instanceIds of objects that the search can include in its results.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.currentObject">
      <summary>
        <para>Identifies the currently selected object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.editedObjects">
      <summary>
        <para>When the object selector is opened from an Inspector, this property indicates which objects are currently being edited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.engineScope">
      <summary>
        <para>An enum that identifies the scope of the current search. This property is automatically set to SearchService.ObjectSelector.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.requiredTypes">
      <summary>
        <para>An IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.selectorConstraint">
      <summary>
        <para>A function that, when called, indicates whether the object selector should show an item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.visibleObjects">
      <summary>
        <para>Indicates which categories of objects are visible in the window. For example, GameObjects, Assets, or both.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorTargetInfo">
      <summary>
        <para>A structure that contains information about an item that is about to be shown.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.globalObjectId">
      <summary>
        <para>The object's global identifier. It is always valid.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.targetObject">
      <summary>
        <para>If the object is already loaded in Unity, this is its instance. The instance can be null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.type">
      <summary>
        <para>If the object is currently loaded in Unity, this is its underlying type. The type can be null.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorTargetInfo.#ctor(UnityEditor.GlobalObjectId,UnityEngine.Object,System.Type)">
      <summary>
        <para>Creates an ObjectSelectorTargetInfo.</para>
      </summary>
      <param name="globalObjectId">The object's global identifier.</param>
      <param name="targetObject">The object's instance. It can be null if the object is not loaded.</param>
      <param name="type">The object's underlying type. It can be null if the object is not loaded.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorTargetInfo.LoadObject">
      <summary>
        <para>Loads an object instance if it is not already loaded in Unity. This can return null if the object is part of a Scene or Prefab that is not loaded.</para>
      </summary>
      <returns>
        <para>The object instance.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SearchService.Project">
      <summary>
        <para>Use this API to perform searches in the Project. Engines for this type of search implement the SearchService.IProjectSearchEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.Project.EngineScope">
      <summary>
        <para>A enum that indicates the search scope for Project engines. It is used by ProjectSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.Project.RegisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Registers a Project search engine dynamically.</para>
      </summary>
      <param name="engine">The Project search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.Project.UnregisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The Project search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearchContext">
      <summary>
        <para>A search context implementation for Project search engines. All methods that are called on a Project search engine, and expect a SearchService.ISearchContext, receive an object of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.engineScope">
      <summary>
        <para>An enum that identifies the scope of the current search. This property is automatically set to SearchService.Project.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.requiredTypes">
      <summary>
        <para>An IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearchEngineAttribute">
      <summary>
        <para>A class attribute that registers Project search engines automatically. Search engines with this attribute must implement the SearchService.IProjectSearchEngine interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.Scene">
      <summary>
        <para>Use this API to perform searches in the Scene. Engines for this type of search implement the SearchService.ISceneSearchEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.Scene.EngineScope">
      <summary>
        <para>A enum that indicates the search scope for Scene engines. It is used by SceneSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.Scene.RegisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Registers a Scene search engine dynamically.</para>
      </summary>
      <param name="engine">The Scene search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.Scene.UnregisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The Scene search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearchContext">
      <summary>
        <para>A search context implementation for Scene search engines. All methods that are called on a Scene search engine, and expect a SearchService.ISearchContext, receive an object of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.engineScope">
      <summary>
        <para>An enum that identifies the scope of the current search. This property is automatically set to SearchService.Scene.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.requiredTypes">
      <summary>
        <para>An IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.rootProperty">
      <summary>
        <para>The root HierarchyProperty on which the search is started.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearchEngineAttribute">
      <summary>
        <para>A class attribute that registers Scene search engines automatically. Search engines with this attribute must implement the SearchService.ISceneSearchEngine interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.SearchEngineScope">
      <summary>
        <para>An enumeration that contains the available search engine scopes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.ObjectSelector">
      <summary>
        <para>Identifies a search for ObjectSelector engines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.Project">
      <summary>
        <para>Identifies a search for Project engines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.Scene">
      <summary>
        <para>Identifies a search for Scene engines.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.VisibleObjects">
      <summary>
        <para>A bit field that contains the different categories of object that the object selector window can display.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.All">
      <summary>
        <para>The object selector window can display all categories.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.Assets">
      <summary>
        <para>The object selector window can only display Assets.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.None">
      <summary>
        <para>The object selector window cannot display any objects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.Scene">
      <summary>
        <para>The object selector window can only display GameObjects.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Selection">
      <summary>
        <para>Access to the selection in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeContext">
      <summary>
        <para>Returns the current context object, as was set via SetActiveObjectWithContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeGameObject">
      <summary>
        <para>Returns the active game object. (The one shown in the inspector).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeInstanceID">
      <summary>
        <para>Returns the instanceID of the actual object selection. Includes Prefabs, non-modifiable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeObject">
      <summary>
        <para>Returns the actual object selection. Includes Prefabs, non-modifiable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeTransform">
      <summary>
        <para>Returns the active transform. (The one shown in the inspector).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.assetGUIDs">
      <summary>
        <para>Returns the guids of the selected assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.count">
      <summary>
        <para>Returns the number of objects in the Selection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.gameObjects">
      <summary>
        <para>Returns the actual game object selection. Includes Prefabs, non-modifiable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.instanceIDs">
      <summary>
        <para>The actual unfiltered selection from the Scene returned as instance ids instead of objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.objects">
      <summary>
        <para>The actual unfiltered selection from the Scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Selection.selectionChanged">
      <summary>
        <para>Delegate callback triggered when currently active/selected item has changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.transforms">
      <summary>
        <para>Returns the top level selection, excluding Prefabs.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Selection.Contains(System.Int32)">
      <summary>
        <para>Returns whether an object is contained in the current selection.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Selection.Contains(UnityEngine.Object)">
      <summary>
        <para>Returns whether an object is contained in the current selection.</para>
      </summary>
      <param name="instanceID"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.Selection.GetFiltered(System.Type,UnityEditor.SelectionMode)">
      <summary>
        <para>Returns the current selection filtered by type and mode.</para>
      </summary>
      <param name="type">Only objects of this type will be retrieved.</param>
      <param name="mode">Further options to refine the selection.</param>
    </member>
    <member name="M:UnityEditor.Selection.GetTransforms(UnityEditor.SelectionMode)">
      <summary>
        <para>Allows for fine grained control of the selection type using the SelectionMode bitmask.</para>
      </summary>
      <param name="mode">Options for refining the selection.</param>
    </member>
    <member name="M:UnityEditor.Selection.SetActiveObjectWithContext(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Selects an object with a context.</para>
      </summary>
      <param name="obj">Object being selected (will be equal activeObject).</param>
      <param name="context">Context object.</param>
    </member>
    <member name="T:UnityEditor.SelectionMode">
      <summary>
        <para>SelectionMode can be used to tweak the selection returned by Selection.GetTransforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Assets">
      <summary>
        <para>Only return objects that are assets in the Asset directory.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Deep">
      <summary>
        <para>Return the selection and all child transforms of the selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.DeepAssets">
      <summary>
        <para>If the selection contains folders, also include all assets and subfolders within that folder in the file hierarchy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Editable">
      <summary>
        <para>Excludes any objects which shall not be modified.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.ExcludePrefab">
      <summary>
        <para>Excludes any Prefabs from the selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.TopLevel">
      <summary>
        <para>Only return the topmost selected transform. A selected child of another selected transform will be filtered out.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Unfiltered">
      <summary>
        <para>Return the whole selection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SemanticMergeMode">
      <summary>
        <para>Behavior of semantic merge.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SemanticMergeMode.Off">
      <summary>
        <para>Disable use of semantic merging.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedObject">
      <summary>
        <para>SerializedObject and SerializedProperty are classes for editing serialized fields on Object|Unity objects in a completely generic way. These classes automatically handle dirtying individual serialized fields so they will be processed by the Undo system and styled correctly for Prefab overrides when drawn in the Inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.context">
      <summary>
        <para>The context used to store and resolve ExposedReference types. This is set by the SerializedObject constructor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.hasModifiedProperties">
      <summary>
        <para>Is true when the SerializedObject has a modified property that has not been applied.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.isEditingMultipleObjects">
      <summary>
        <para>Does the serialized object represents multiple objects due to multi-object editing? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.maxArraySizeForMultiEditing">
      <summary>
        <para>Defines the maximum size beyond which arrays cannot be edited when multiple objects are selected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.targetObject">
      <summary>
        <para>The inspected object (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.targetObjects">
      <summary>
        <para>The inspected objects (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.ApplyModifiedProperties">
      <summary>
        <para>Apply property modifications.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.ApplyModifiedPropertiesWithoutUndo">
      <summary>
        <para>Applies property modifications without registering an undo operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.CopyFromSerializedProperty(UnityEditor.SerializedProperty)">
      <summary>
        <para>Copies a value from a SerializedProperty to the corresponding serialized property on the serialized object.</para>
      </summary>
      <param name="prop"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.CopyFromSerializedPropertyIfDifferent(UnityEditor.SerializedProperty)">
      <summary>
        <para>Copies a changed value from a SerializedProperty to the corresponding serialized property on the serialized object.</para>
      </summary>
      <param name="prop"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object)">
      <summary>
        <para>Create SerializedObject for inspected object.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object[])">
      <summary>
        <para>Create SerializedObject for inspected object.</para>
      </summary>
      <param name="objs"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Create SerializedObject for inspected object by specifying a context to be used to store and resolve ExposedReference types.</para>
      </summary>
      <param name="obj"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object[],UnityEngine.Object)">
      <summary>
        <para>Create SerializedObject for inspected object by specifying a context to be used to store and resolve ExposedReference types.</para>
      </summary>
      <param name="objs"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.FindProperty(System.String)">
      <summary>
        <para>Find serialized property by name.</para>
      </summary>
      <param name="propertyPath"></param>
    </member>
    <member name="M:UnityEditor.SerializedObject.GetIterator">
      <summary>
        <para>Get the first serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.SetIsDifferentCacheDirty">
      <summary>
        <para>Update hasMultipleDifferentValues cache on the next Update() call.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.Update">
      <summary>
        <para>Update serialized object's representation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.UpdateIfDirtyOrScript">
      <summary>
        <para>This has been made obsolete. See SerializedObject.UpdateIfRequiredOrScript instead.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.UpdateIfRequiredOrScript">
      <summary>
        <para>Update serialized object's representation, only if the object has been modified since the last call to Update or if it is a script.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedProperty">
      <summary>
        <para>SerializedProperty and SerializedObject are classes for editing properties on objects in a completely generic way that automatically handles undo and styling UI for Prefabs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.animationCurveValue">
      <summary>
        <para>Value of a animation curve property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.arrayElementType">
      <summary>
        <para>Type name of the element in an array property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.arraySize">
      <summary>
        <para>The number of elements in the array. If the SerializedObject contains multiple objects it will return the smallest number of elements. So it is always possible to iterate through the SerializedObject and only get properties found in all objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boolValue">
      <summary>
        <para>Value of a boolean property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boundsIntValue">
      <summary>
        <para>Value of bounds with integer values property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boundsValue">
      <summary>
        <para>Value of bounds property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.colorValue">
      <summary>
        <para>Value of a color property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.depth">
      <summary>
        <para>Nesting depth of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.displayName">
      <summary>
        <para>Nice display name of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.doubleValue">
      <summary>
        <para>Value of a float property as a double.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.editable">
      <summary>
        <para>Is this property editable? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumDisplayNames">
      <summary>
        <para>Display-friendly names of enumeration of an enum property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumNames">
      <summary>
        <para>Names of enumeration of an enum property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumValueIndex">
      <summary>
        <para>Enum index of an enum property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.exposedReferenceValue">
      <summary>
        <para>A reference to another Object in the Scene. This reference is resolved in the context of the SerializedObject containing the SerializedProperty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.fixedBufferSize">
      <summary>
        <para>The number of elements in the fixed buffer. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.floatValue">
      <summary>
        <para>Value of a float property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasChildren">
      <summary>
        <para>Does it have child properties? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasMultipleDifferentValues">
      <summary>
        <para>Does this property represent multiple different values due to multi-object editing? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasVisibleChildren">
      <summary>
        <para>Does it have visible child properties? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.intValue">
      <summary>
        <para>Value of an integer property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isArray">
      <summary>
        <para>Is this property an array? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isDefaultOverride">
      <summary>
        <para>Allows you to check whether his property is a PrefabUtility.IsDefaultOverride|default override.

Certain properties on Prefab instances are default overrides.

See PrefabUtility.IsDefaultOverride for more information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isExpanded">
      <summary>
        <para>Is this property expanded in the inspector?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isFixedBuffer">
      <summary>
        <para>Is this property a fixed buffer? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isInstantiatedPrefab">
      <summary>
        <para>Is property part of a Prefab instance? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.longValue">
      <summary>
        <para>Value of a integer property as a long.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceFieldTypename">
      <summary>
        <para>String corresponding to the value of the managed reference field full type string.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceFullTypename">
      <summary>
        <para>String corresponding to the value of the managed reference object (dynamic) full type string.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceValue">
      <summary>
        <para>Sets the value of a managed reference.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.name">
      <summary>
        <para>Name of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.objectReferenceValue">
      <summary>
        <para>Value of an object reference property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.prefabOverride">
      <summary>
        <para>Allows you to check whether a property's value is overriden (i.e. different to the Prefab it belongs to).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.propertyPath">
      <summary>
        <para>Full path of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.propertyType">
      <summary>
        <para>Type of this property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.quaternionValue">
      <summary>
        <para>Value of a quaternion property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.rectIntValue">
      <summary>
        <para>Value of a rectangle with integer values property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.rectValue">
      <summary>
        <para>Value of a rectangle property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.serializedObject">
      <summary>
        <para>SerializedObject this property belongs to (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.stringValue">
      <summary>
        <para>Value of a string property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.tooltip">
      <summary>
        <para>Tooltip of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.type">
      <summary>
        <para>Type name of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector2IntValue">
      <summary>
        <para>Value of a 2D integer vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector2Value">
      <summary>
        <para>Value of a 2D vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector3IntValue">
      <summary>
        <para>Value of a 3D integer vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector3Value">
      <summary>
        <para>Value of a 3D vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector4Value">
      <summary>
        <para>Value of a 4D vector property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.ClearArray">
      <summary>
        <para>Remove all elements from the array.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Copy">
      <summary>
        <para>Returns a copy of the SerializedProperty iterator in its current state. This is useful if you want to keep a reference to the current property but continue with the iteration.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.CountInProperty">
      <summary>
        <para>Count visible children of this property, including this property itself.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.CountRemaining">
      <summary>
        <para>Count remaining visible properties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DataEquals(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Compares the data for two SerializedProperties. This method ignores paths and SerializedObjects.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DeleteArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Delete the element at the specified index in the array.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DeleteCommand">
      <summary>
        <para>Deletes the serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DuplicateCommand">
      <summary>
        <para>Duplicates the serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.EqualContents(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>See if contained serialized properties are equal.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.FindPropertyRelative(System.String)">
      <summary>
        <para>Retrieves the SerializedProperty at a relative path to the current property.</para>
      </summary>
      <param name="relativePropertyPath"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Returns the element at the specified index in the array.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEndProperty">
      <summary>
        <para>Retrieves the SerializedProperty that defines the end range of this property.</para>
      </summary>
      <param name="includeInvisible"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEndProperty(System.Boolean)">
      <summary>
        <para>Retrieves the SerializedProperty that defines the end range of this property.</para>
      </summary>
      <param name="includeInvisible"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEnumerator">
      <summary>
        <para>Retrieves an iterator that allows you to iterator over the current nexting of a serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetFixedBufferElementAtIndex(System.Int32)">
      <summary>
        <para>Returns the element at the specified index in the fixed buffer.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.InsertArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Insert an empty element at the specified index in the array.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.MoveArrayElement(System.Int32,System.Int32)">
      <summary>
        <para>Move an array element from srcIndex to dstIndex.</para>
      </summary>
      <param name="srcIndex"></param>
      <param name="dstIndex"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Next(System.Boolean)">
      <summary>
        <para>Move to next property.</para>
      </summary>
      <param name="enterChildren"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.NextVisible(System.Boolean)">
      <summary>
        <para>Move to next visible property.</para>
      </summary>
      <param name="enterChildren"></param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Reset">
      <summary>
        <para>Move to first property of the object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedPropertyType">
      <summary>
        <para>Type of a SerializedProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.AnimationCurve">
      <summary>
        <para>AnimationCurve property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ArraySize">
      <summary>
        <para>Array size property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Boolean">
      <summary>
        <para>Boolean property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Bounds">
      <summary>
        <para>Bounds property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.BoundsInt">
      <summary>
        <para>Bounds with Integer values property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Character">
      <summary>
        <para>Character property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Color">
      <summary>
        <para>Color property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Enum">
      <summary>
        <para>Enumeration property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ExposedReference">
      <summary>
        <para>A reference to another Object in the Scene. This is done via an ExposedReference type and resolves to a reference to an Object that exists in the context of the SerializedObject containing the SerializedProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.FixedBufferSize">
      <summary>
        <para>Fixed buffer size property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Float">
      <summary>
        <para>Float property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Gradient">
      <summary>
        <para>Gradient property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Integer">
      <summary>
        <para>Integer property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.LayerMask">
      <summary>
        <para>LayerMask property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ManagedReference">
      <summary>
        <para>Managed reference property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ObjectReference">
      <summary>
        <para>Reference to another object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Quaternion">
      <summary>
        <para>Quaternion property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Rect">
      <summary>
        <para>Rectangle property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.RectInt">
      <summary>
        <para>Rectangle with Integer values property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.String">
      <summary>
        <para>String property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector2">
      <summary>
        <para>2D vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector2Int">
      <summary>
        <para>2D integer vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector3">
      <summary>
        <para>3D vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector3Int">
      <summary>
        <para>3D integer vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector4">
      <summary>
        <para>4D vector property.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SessionState">
      <summary>
        <para>SessionState is a Key-Value Store intended for storing and retrieving Editor session state that should survive assembly reloading.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SessionState.EraseBool(System.String)">
      <summary>
        <para>Erase a Boolean entry in the key-value store.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseFloat(System.String)">
      <summary>
        <para>Erase a Float entry in the key-value store.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseInt(System.String)">
      <summary>
        <para>Erase an Integer entry in the key-value store.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseIntArray(System.String)">
      <summary>
        <para>Erase an Integer array entry in the key-value store.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseString(System.String)">
      <summary>
        <para>Erase a String entry in the key-value store.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseVector3(System.String)">
      <summary>
        <para>Erase a Vector3 entry in the key-value store.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEditor.SessionState.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Retrieve a Boolean value.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.SessionState.GetFloat(System.String,System.Single)">
      <summary>
        <para>Retrieve a Float value.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.SessionState.GetInt(System.String,System.Int32)">
      <summary>
        <para>Retrieve an Integer value.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.SessionState.GetIntArray(System.String,System.Int32[])">
      <summary>
        <para>Retrieve an Integer array.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.SessionState.GetString(System.String,System.String)">
      <summary>
        <para>Retrieve a String value.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.SessionState.GetVector3(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Retrieve a Vector3.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEditor.SessionState.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Store a Boolean value.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SessionState.SetFloat(System.String,System.Single)">
      <summary>
        <para>Store a Float value.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SessionState.SetInt(System.String,System.Int32)">
      <summary>
        <para>Store an Integer value.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SessionState.SetIntArray(System.String,System.Int32[])">
      <summary>
        <para>Store an Integer array.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SessionState.SetString(System.String,System.String)">
      <summary>
        <para>Store a String value.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.SessionState.SetVector3(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Store a Vector3.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="T:UnityEditor.SettingsProvider">
      <summary>
        <para>SettingsProvider is the configuration class that specifies how a Project setting or a preference should appear in the Settings or Preferences window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.activateHandler">
      <summary>
        <para>Overrides SettingsProvider.OnActivate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.deactivateHandler">
      <summary>
        <para>Overrides SettingsProvider.OnDeactivate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.footerBarGuiHandler">
      <summary>
        <para>Overrides SettingsProvider.OnFooterBarGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.guiHandler">
      <summary>
        <para>Overrides SettingsProvider.OnGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.hasSearchInterestHandler">
      <summary>
        <para>Overrides SettingsProvider.HasSearchInterest.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.inspectorUpdateHandler">
      <summary>
        <para>Overrides SettingsProvider.OnInspectorUpdate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.keywords">
      <summary>
        <para>Gets or sets the list of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.label">
      <summary>
        <para>Gets or sets the display name of the SettingsProvider as it appears in the Settings window. If not set, the Settings window uses last token of SettingsProvider.settingsPath instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.scope">
      <summary>
        <para>Gets the Scope of the SettingsProvider. The Scope determines whether the SettingsProvider appears in the Preferences window (SettingsScope.User) or the Settings window (SettingsScope.Project).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.settingsPath">
      <summary>
        <para>Gets Path used to place the SettingsProvider in the tree view of the Settings window. The path should be unique among all other settings paths and should use "/" as its separator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.titleBarGuiHandler">
      <summary>
        <para>Overrides SettingsProvider.OnTitleBarGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.#ctor(System.String,UnityEditor.SettingsScope,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Creates a new SettingsProvider.</para>
      </summary>
      <param name="path">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="scope">Scope of the Settings. The Scope determines where the setting appears: in the Settings or the Preferences windows.</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <param name="scopes"></param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromGUIContentProperties">
      <summary>
        <para>Extract search keywords from all public static memebers in a specific Type.</para>
      </summary>
      <returns>
        <para>Returns the list of keywords extracted from the static GUIContent.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromPath(System.String)">
      <summary>
        <para>Extract search keywords from the serialized properties of an Asset at a specific path.</para>
      </summary>
      <param name="path">Path of the Asset on disk.</param>
      <returns>
        <para>Returns the list of keywords.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromSerializedObject(UnityEditor.SerializedObject)">
      <summary>
        <para>Extract search keywords from from the serialized properties of a SerializedObject.</para>
      </summary>
      <param name="serializedObject">Object to extract properties from.</param>
      <returns>
        <para>Returns the list of keywords.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.HasSearchInterest(System.String)">
      <summary>
        <para>Checks whether the SettingsProvider should appear when the user types something in the Settings window search box. SettingsProvider tries to match the search terms (even partially) to any of the SettingsProvider.keywords. The search is case insensitive.</para>
      </summary>
      <param name="searchContext">Search terms that the user entered in the search box on the Settings window.</param>
      <returns>
        <para>True if the SettingsProvider matched the search term and if it should appear.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Use this function to implement a handler for when the user clicks on the Settings in the Settings window. You can fetch a settings Asset or set up UIElements UI from this function.</para>
      </summary>
      <param name="searchContext">Search context in the search box on the Settings window.</param>
      <param name="rootElement">Root of the UIElements tree. If you add to this root, the SettingsProvider uses UIElements instead of calling SettingsProvider.OnGUI to build the UI. If you do not add to this VisualElement, then you must use the IMGUI to build the UI.</param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnDeactivate">
      <summary>
        <para>Use this function to implement a handler for when the user clicks on another setting or when the Settings window closes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnFooterBarGUI">
      <summary>
        <para>Use this function to override drawing the footer for the SettingsProvider using IMGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnGUI(System.String)">
      <summary>
        <para>Use this function to draw the UI based on IMGUI. This assumes you haven't added any children to the rootElement passed to the OnActivate function.</para>
      </summary>
      <param name="searchContext">Search context for the Settings window. Used to show or hide relevant properties.</param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnInspectorUpdate">
      <summary>
        <para>OnInspectorUpdate is called at 10 frames per second to give the inspector a chance to update. See EditorWindow.OnInspectorUpdate for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnTitleBarGUI">
      <summary>
        <para>Use this function to override drawing the title for the SettingsProvider using IMGUI. This allows you to add custom UI (such as a toolbar button) next to the title. AssetSettingsProvider uses this mecanism to display the "add to preset" and the "help" buttons.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.Repaint">
      <summary>
        <para>Request the SettingsWindow for a repaint.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsProviderAttribute">
      <summary>
        <para>Attribute used to register a new SettingsProvider. Use this attribute to decorate a function that returns an instance of a SettingsProvider. If the function returns null, no SettingsProvider appears in the Settings window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProviderAttribute.#ctor">
      <summary>
        <para>Creates a new SettingsProviderAttribute used to register new SettingsProvider. </para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsProviderGroupAttribute">
      <summary>
        <para>Attribute used to register multiple SettingsProvider items. Use this attribute to decorate a function that returns an array of SettingsProvider instances. If the function returns null, no SettingsProvider appears in the Settings window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProviderGroupAttribute.#ctor">
      <summary>
        <para>Creates a SettingsProviderGroupAttribute used to register multiple SettingsProviders. </para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsScope">
      <summary>
        <para>Sets the scope of a SettingsProvider. The Scope determines where it appears in the UI. For example, whether it appears with the Project settings in the Settings window, or in the Preferences window, or in both windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SettingsScope.Project">
      <summary>
        <para>The SettingsProvider appears only in the Project Settings window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SettingsScope.User">
      <summary>
        <para>The SettingsProvider appears only in the Preferences window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsService">
      <summary>
        <para>This class provides global APIs to interact with the Settings window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsService.NotifySettingsProviderChanged">
      <summary>
        <para>Use this function to notify the SettingsService that a SettingsProvider changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsService.OpenProjectSettings(System.String)">
      <summary>
        <para>Open the Project Settings window with the specified settings item already selected.</para>
      </summary>
      <param name="settingsPath">Settings paths of the item to select (for example, 'ProjectPlayer' or 'ProjectQuality').</param>
      <returns>
        <para>Returns an instance to the Settings window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsService.OpenUserPreferences(System.String)">
      <summary>
        <para>Open the Preferences window with the specified settings item already selected.</para>
      </summary>
      <param name="settingsPath">Settings path of the item to select (for example, 'PreferencesKeys' or 'Preferences2D').</param>
      <returns>
        <para>Returns an instance to the Settings window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsService.RepaintAllSettingsWindow">
      <summary>
        <para>Notifies the SettingsService that all open Settings windows must be repainted.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData">
      <summary>
        <para>This class describes a shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ActiveSubshader">
      <summary>
        <para>Returns the active subshader or null if none is currently active.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ActiveSubshaderIndex">
      <summary>
        <para>Returns the index of the active subshader or -1 if none is currently active.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.GetSubshader(System.Int32)">
      <summary>
        <para>Get a subshader.</para>
      </summary>
      <param name="index">The index of the subshader.</param>
      <returns>
        <para>The associated subshader or null if none exists.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShaderData.Pass">
      <summary>
        <para>This class describes a pass of a subshader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.Pass.Name">
      <summary>
        <para>The name of this pass (may be empty).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.Pass.SourceCode">
      <summary>
        <para>The source code for this pass.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.SourceShader">
      <summary>
        <para>The shader attached to this data set.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.Subshader">
      <summary>
        <para>This class describes a subshader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Subshader.GetPass(System.Int32)">
      <summary>
        <para>Get a pass of a subshader.</para>
      </summary>
      <param name="passIndex">The index of the pass.</param>
      <returns>
        <para>The specified pass or null, if none exists.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Subshader.PassCount">
      <summary>
        <para>The number of passes for this subshader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.SubshaderCount">
      <summary>
        <para>The number of subshaders used by this shader.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderGUI">
      <summary>
        <para>Abstract class to derive from for defining custom GUI for shader properties and for extending the material preview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderGUI.AssignNewShaderToMaterial(UnityEngine.Material,UnityEngine.Shader,UnityEngine.Shader)">
      <summary>
        <para>This method is called when a new shader has been selected for a Material.</para>
      </summary>
      <param name="material">The material the newShader should be assigned to.</param>
      <param name="oldShader">Previous shader.</param>
      <param name="newShader">New shader to assign to the material.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[])">
      <summary>
        <para>Find shader properties.</para>
      </summary>
      <param name="propertyName">Name of the material property.</param>
      <param name="properties">The array of available properties.</param>
      <param name="propertyIsMandatory">If true then this method will throw an exception if a property with propertyName was not found.</param>
      <returns>
        <para>The material property found, otherwise null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[],System.Boolean)">
      <summary>
        <para>Find shader properties.</para>
      </summary>
      <param name="propertyName">Name of the material property.</param>
      <param name="properties">The array of available properties.</param>
      <param name="propertyIsMandatory">If true then this method will throw an exception if a property with propertyName was not found.</param>
      <returns>
        <para>The material property found, otherwise null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnClosed(UnityEngine.Material)">
      <summary>
        <para>This method is called when the ShaderGUI is being closed.</para>
      </summary>
      <param name="material"></param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnGUI(UnityEditor.MaterialEditor,UnityEditor.MaterialProperty[])">
      <summary>
        <para>To define a custom shader GUI use the methods of materialEditor to render controls for the properties array.</para>
      </summary>
      <param name="materialEditor">The MaterialEditor that are calling this OnGUI (the 'owner').</param>
      <param name="properties">Material properties of the current selected shader.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewGUI(UnityEditor.MaterialEditor,UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Override for extending the rendering of the Preview area or completly replace the preview (by not calling base.OnMaterialPreviewGUI).</para>
      </summary>
      <param name="materialEditor">The MaterialEditor that are calling this method (the 'owner').</param>
      <param name="r">Preview rect.</param>
      <param name="background">Style for the background.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewSettingsGUI(UnityEditor.MaterialEditor)">
      <summary>
        <para>Override for extending the functionality of the toolbar of the preview area or completly replace the toolbar by not calling base.OnMaterialPreviewSettingsGUI.</para>
      </summary>
      <param name="materialEditor">The MaterialEditor that are calling this method (the 'owner').</param>
    </member>
    <member name="T:UnityEditor.ShaderImporter">
      <summary>
        <para>Shader importer lets you modify shader import settings from Editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderImporter.preprocessorOverride">
      <summary>
        <para>The preprocessor that Unity uses to compile this shader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetDefaultTexture(System.String)">
      <summary>
        <para>Gets the default texture assigned to the shader importer for the shader property with given name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetNonModifiableTexture(System.String)">
      <summary>
        <para>Gets the non-modifiable texture assigned to the shader importer for the shader property with given name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetShader">
      <summary>
        <para>Gets the reference to the shader imported by this importer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderImporter.SetDefaultTextures(System.String[],UnityEngine.Texture[])">
      <summary>
        <para>Sets the default textures for each texture material property.</para>
      </summary>
      <param name="name"></param>
      <param name="textures"></param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.SetNonModifiableTextures(System.String[],UnityEngine.Texture[])">
      <summary>
        <para>Sets the non-modifiable textures for each texture material property.</para>
      </summary>
      <param name="name"></param>
      <param name="textures"></param>
    </member>
    <member name="T:UnityEditor.ShaderIncludePathAttribute">
      <summary>
        <para>This attribute is no longer supported.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderInfo">
      <summary>
        <para>Contains the following information about a shader:
-If the shader has compilation errors.
-If the shader is supported on the currently selected platform.
-The name of the shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.hasErrors">
      <summary>
        <para>True if the shader has compilation errors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.name">
      <summary>
        <para>The name of the shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.supported">
      <summary>
        <para>True if the shader is supported on the currently selected platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderMessage">
      <summary>
        <para>Contains information about messages generated by Unity's Shader Compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.file">
      <summary>
        <para>The source file where the shader message was found.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.line">
      <summary>
        <para>The line of code where the shader message was found.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.message">
      <summary>
        <para>The message returned by the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.messageDetails">
      <summary>
        <para>An (optional) detailed message returned from the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.platform">
      <summary>
        <para>The specific platform where the Unity Shader Compiler discovered the message.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.severity">
      <summary>
        <para>Indicates the severity of the message returned from the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderMessage.#ctor(System.String,UnityEditor.Rendering.ShaderCompilerMessageSeverity)">
      <summary>
        <para>Creates a new ShaderMessage with the given message and severity.</para>
      </summary>
      <param name="msg">The message to report.</param>
      <param name="sev">Indicates the severity of the message.</param>
    </member>
    <member name="M:UnityEditor.ShaderMessage.Equals(UnityEditor.ShaderMessage)">
      <summary>
        <para>Compares two ShaderMessage on an element-by-element basis.</para>
      </summary>
      <param name="other"></param>
      <param name="obj"></param>
      <returns>
        <para>True if all fields of the message are equal, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderMessage.Equals(System.Object)">
      <summary>
        <para>Compares two ShaderMessage on an element-by-element basis.</para>
      </summary>
      <param name="other"></param>
      <param name="obj"></param>
      <returns>
        <para>True if all fields of the message are equal, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderMessage.GetHashCode">
      <summary>
        <para>Generates a hash value based on the contents of the message.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShaderMessage.op_Equal(UnityEditor.ShaderMessage,UnityEditor.ShaderMessage)">
      <summary>
        <para>Returns true if all memebers of the two arguments are equal.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="?:UnityEditor.ShaderMessage.op_NotEqual(UnityEditor.ShaderMessage,UnityEditor.ShaderMessage)">
      <summary>
        <para>Returns true if any of the elements of the two arguments are not equal.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="T:UnityEditor.ShaderPrecisionModel">
      <summary>
        <para>Options for the shader precision model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderPrecisionModel.PlatformDefault">
      <summary>
        <para>Use the target platform defaults for sampler precision. This results in lower precision on mobile targets and full precision elsewhere.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderPrecisionModel.Unified">
      <summary>
        <para>Use full sampler precision by default and make it so you have to explicitly declare when you want to use lower precision. This sets Rendering.BuiltinShaderDefine.UNITY_UNIFIED_SHADER_PRECISION_MODEL when Unity compiles shaders.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderUtil">
      <summary>
        <para>Utility functions to assist with working with shaders from the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.allowAsyncCompilation">
      <summary>
        <para>When true, asynchronous Shader compilation is allowed at the current call site.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.anythingCompiling">
      <summary>
        <para>When true, the Editor is compiling some Shaders asynchronously at the point of query.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.hardwareSupportsRectRenderTexture">
      <summary>
        <para>Does the current hardware support render textues.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearCachedData(UnityEngine.Shader)">
      <summary>
        <para>Clears all internally-cached data that was generated for the given shader, such as errors and compilation info.</para>
      </summary>
      <param name="s"></param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearShaderErrors(UnityEngine.Shader)">
      <summary>
        <para>Clears compile time messages for the given shader.</para>
      </summary>
      <param name="s"></param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearShaderMessages(UnityEngine.Shader)">
      <summary>
        <para>Clear compile time messages for the given shader.</para>
      </summary>
      <param name="s"></param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CompilePass(UnityEngine.Material,System.Int32,System.Boolean)">
      <summary>
        <para>Request the Editor to compile the Shader Variant needed for the specific pass of the given Material.</para>
      </summary>
      <param name="material">Target Material.</param>
      <param name="pass">Index of the target Shader pass.</param>
      <param name="forceSync">Forces the script execution to wait until the compilation has finished. Optional.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(UnityEditor.AssetImporters.AssetImportContext,System.String,System.Boolean)">
      <summary>
        <para>Creates a new Shader object from the provided source code string. You can use this method alongside the ScriptedImporter to create custom shader generation tools in the Editor.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(System.String,System.Boolean)">
      <summary>
        <para>Creates a new Shader object from the provided source code string. You can use this method alongside the ScriptedImporter to create custom shader generation tools in the Editor.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(System.String)">
      <summary>
        <para>Creates a new Shader object from the provided source code string. You can use this method alongside the ScriptedImporter to create custom shader generation tools in the Editor.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetAllShaderInfo">
      <summary>
        <para>Returns an array of ShaderInfo of all available shaders. That includes built-in shaders.</para>
      </summary>
      <returns>
        <para>ShaderInfo array of all available shaders.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of callable Shaders defined whitin a given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <returns>
        <para>The number of callable Shaders defined in the RayTracingShader instance passed as argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the name of a user-defined callable Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The callable Shader index for which to retrieve the name. The callable Shaders defined in a RayTracingShader are sorted alphabetically by the Shader compiler.</param>
      <returns>
        <para>The name of the callable Shader at the index passed using the "shaderIndex" argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderParamSize(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the parameter size of a user-defined callable Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The callable Shader index for which to retrieve the parameter size.</param>
      <returns>
        <para>The parameter size in bytes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessageCount(UnityEngine.ComputeShader)">
      <summary>
        <para>Returns the number of errors and warnings generated by the Unity Shader Compiler for the given ComputeShader.</para>
      </summary>
      <param name="s">The ComputeShader instance to check for messages.</param>
      <returns>
        <para>The number of errors and warnings generated by the Unity Shader Compiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessages(UnityEngine.ComputeShader)">
      <summary>
        <para>Returns each error and warning generated by the Unity Shader Compiler for the given ComputeShader.</para>
      </summary>
      <param name="s">The ComputeShader instance to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of miss Shaders defined whitin a given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <returns>
        <para>The number of miss Shaders defined in the RayTracingShader instance passed as argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the name of a user-defined miss Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The miss Shader index for which to retrieve the name. The miss Shaders defined in a RayTracingShader are sorted alphabetically by the Shader compiler.</param>
      <returns>
        <para>The name of the miss Shader at the index passed using the "shaderIndex" argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderRayPayloadSize(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the ray payload size of a user-defined miss Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The miss Shader index for which to retrieve the ray payload size.</param>
      <returns>
        <para>The ray payload size in bytes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyCount(UnityEngine.Shader)">
      <summary>
        <para>Get the number of properties in Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyDescription(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Get the description of the shader propery at index propertyIdx of Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyName(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Get the name of the shader propery at index propertyIdx of Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyType(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Get the ShaderProperyType of the shader propery at index propertyIdx of Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRangeLimits(UnityEngine.Shader,System.Int32,System.Int32)">
      <summary>
        <para>Get Limits for a range property at index propertyIdx of Shader s.</para>
      </summary>
      <param name="defminmax">Which value to get: 0 = default, 1 = min, 2 = max.</param>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayGenerationShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of ray generation Shaders defined whitin a given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <returns>
        <para>The number of ray generation Shaders defined in the RayTracingShader instance passed as argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayGenerationShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the name of a user-defined ray generation Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The ray generation Shader index for which to retrieve the name. The ray generation Shaders defined in a RayTracingShader are sorted alphabetically by the Shader compiler.</param>
      <returns>
        <para>The name of the ray generation Shader at the index passed using the "shaderIndex" argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayTracingShaderMessageCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of errors and warnings generated by the Shader Compiler for the given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance to check for messages.</param>
      <returns>
        <para>The number of errors and warnings generated by the Shader Compiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayTracingShaderMessages(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns each error and warning generated by the Shader Compiler for the given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderData(UnityEngine.Shader)">
      <summary>
        <para>Get the shader data for a specific shader.</para>
      </summary>
      <param name="shader">The shader to get data from.</param>
      <returns>
        <para>The shader data for the provided shader.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessageCount(UnityEngine.Shader)">
      <summary>
        <para>Returns the number of errors and warnings generated by the Unity Shader Compiler for the given Shader.</para>
      </summary>
      <param name="s">The Shader instance to check for messages.</param>
      <returns>
        <para>The number of errors and warnings generated by the Unity Shader Compiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessages(UnityEngine.Shader)">
      <summary>
        <para>Returns each error and warning generated by the Unity Shader Compiler for the given Shader.</para>
      </summary>
      <param name="s">The Shader instance to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetTexDim(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Gets texture dimension of a shader property.</para>
      </summary>
      <param name="s">The shader to get the property from.</param>
      <param name="propertyIdx">The property index to use.</param>
      <returns>
        <para>Texture dimension.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.HasProceduralInstancing(UnityEngine.Shader)">
      <summary>
        <para>Determines whether the specified Shader contains a valid Procedural Instancing variant.</para>
      </summary>
      <param name="s">The Shader to check.</param>
      <returns>
        <para>Returns true if the Shader has a valid Procedural Instancing variant. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsPassCompiled(UnityEngine.Material,System.Int32)">
      <summary>
        <para>Checks if the Shader variant for the given pass in the Material has already been compiled.</para>
      </summary>
      <param name="material">The Material to check against.</param>
      <param name="pass">The index of the Shader pass to check.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsShaderPropertyHidden(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Is the shader propery at index propertyIdx of Shader s hidden?</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsShaderPropertyNonModifiableTexureProperty(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Is the shader propery at index propertyIdx of Shader s a NonModifiableTextureProperty?</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.RegisterShader(UnityEngine.Shader)">
      <summary>
        <para>Register a user created shader.</para>
      </summary>
      <param name="shader"></param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.RestoreAsyncCompilation(UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Restores the previous Shader compilation mode in this CommandBuffer scope.</para>
      </summary>
      <param name="cmd">Target CommandBuffer.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.SetAsyncCompilation(UnityEngine.Rendering.CommandBuffer,System.Boolean)">
      <summary>
        <para>Adds shader compilation mode command in the CommandBuffer.</para>
      </summary>
      <param name="cmd">Target CommandBuffer.</param>
      <param name="allow">Is async Shader compilation allowed or not.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ShaderHasError(UnityEngine.Shader)">
      <summary>
        <para>Returns true if the given Shader generated any errors. Ignores warnings.</para>
      </summary>
      <param name="shader">The Shader instance to check for errors.</param>
      <returns>
        <para>True if the Shader generated errors, false if there were no errors.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShaderUtil.ShaderPropertyType">
      <summary>
        <para>Type of a given texture property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Color">
      <summary>
        <para>Color Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Float">
      <summary>
        <para>Float Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Range">
      <summary>
        <para>Range Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.TexEnv">
      <summary>
        <para>Texture Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Vector">
      <summary>
        <para>Vector Property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEditor.AssetImporters.AssetImportContext,UnityEngine.Shader,System.String,System.Boolean)">
      <summary>
        <para>Replaces the existing source code in the specified shader with the source code in the supplied string.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
      <param name="shader">The Shader to update.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String,System.Boolean)">
      <summary>
        <para>Replaces the existing source code in the specified shader with the source code in the supplied string.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
      <param name="shader">The Shader to update.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String)">
      <summary>
        <para>Replaces the existing source code in the specified shader with the source code in the supplied string.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
      <param name="shader">The Shader to update.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs">
      <summary>
        <para>Provides data for the ShortcutManagement.IShortcutManager.activeProfileChanged event.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.currentActiveProfileId">
      <summary>
        <para>The ID of the current active profile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.previousActiveProfileId">
      <summary>
        <para>The ID of the previous active profile.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the ShortcutManagement.ActiveProfileChangedEventArgs struct using the specified previous active profile ID and current active profile ID.</para>
      </summary>
      <param name="previousActiveProfileId">Previous active profile ID.</param>
      <param name="currentActiveProfileId">Current active profile ID.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ClutchShortcutAttribute">
      <summary>
        <para>Attribute used to register a static method as the action for a clutch shortcut.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Creates an attribute for a clutch shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,System.Type,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for a clutch shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for a clutch shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager">
      <summary>
        <para>Represents a manager that configures a particular instance of the shortcuts system.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager.activeProfileChanged(System.Action`1&lt;UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs&gt;)">
      <summary>
        <para>Raised when the ID of the active profile is changed.</para>
      </summary>
      <param name="value">Active profile changed event handler.</param>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.IShortcutManager.activeProfileId">
      <summary>
        <para>Gets or sets the ID of the currently active profile.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager.shortcutBindingChanged(System.Action`1&lt;UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs&gt;)">
      <summary>
        <para>Raised when shortcut overrides are changed on the active profile.</para>
      </summary>
      <param name="value">Shortcut binding changed event handler.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.ClearShortcutOverride(System.String)">
      <summary>
        <para>Clears the binding for shortcut with given shortcut ID from the active profile.</para>
      </summary>
      <param name="shortcutId">ID of shortcut to clear override for.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.CreateProfile(System.String)">
      <summary>
        <para>Creates a new profile with the given profile ID.</para>
      </summary>
      <param name="profileId">ID of created profile.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.DeleteProfile(System.String)">
      <summary>
        <para>Deletes profile with the given profile ID.</para>
      </summary>
      <param name="profileId">ID of profile to delete.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetAvailableProfileIds">
      <summary>
        <para>Returns an enumeration of all of avaliable profile IDs.</para>
      </summary>
      <returns>
        <para>Enumerable of available profile IDs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetAvailableShortcutIds">
      <summary>
        <para>Returns an enumeration of all available shortcut IDs.</para>
      </summary>
      <returns>
        <para>Enumeration of available shortcut IDs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetShortcutBinding(System.String)">
      <summary>
        <para>Returns the active binding for the given shortcut ID.</para>
      </summary>
      <param name="shortcutId">ID of shortcut to retrieve binding for.</param>
      <returns>
        <para>Active binding for shortcut.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsProfileIdValid(System.String)">
      <summary>
        <para>Checks that the profile ID is valid.</para>
      </summary>
      <param name="profileId">The profile ID to be checked. If a null string is specified, the method throws an ArgumentNullException error.</param>
      <returns>
        <para>Returns true if the profile ID is valid. Returns false if the profile ID is empty or equals ShortcutManager.defaultProfileId.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsProfileReadOnly(System.String)">
      <summary>
        <para>Is the profile for the given profile ID read-only?</para>
      </summary>
      <param name="profileId">ID of profile to determine read-only status for.</param>
      <returns>
        <para>true if the profile with ID profileId is read-only: otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsShortcutOverridden(System.String)">
      <summary>
        <para>Does the active profile override the binding for the given shortcut ID?</para>
      </summary>
      <param name="shortcutId">ID of shortcut to determine overridden status for.</param>
      <returns>
        <para>true if the shortcut with ID shortcutId is overridden in the active profile; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.RebindShortcut(System.String,UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Rebinds the shortcut for the given shortcut ID to the given binding in the active profile.</para>
      </summary>
      <param name="shortcutId">ID of shortcut to rebind.</param>
      <param name="binding">New binding of shortcut.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.RenameProfile(System.String,System.String)">
      <summary>
        <para>Renames the ID of a profile.</para>
      </summary>
      <param name="profileId">ID of existing profile.</param>
      <param name="newProfileId">New ID for profile.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.KeyCombination">
      <summary>
        <para>Represents a combination of a non-modifier key and zero or more modifier keys.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.action">
      <summary>
        <para>Is the action key modifier part of the key combination? The action key represents the Control key on Windows and Linux, and the Command key on macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.alt">
      <summary>
        <para>Is the Alt key (or Option key on macOS) modifier part of the key combination?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.keyCode">
      <summary>
        <para>Key code representing non-modifier key of key combination.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.modifiers">
      <summary>
        <para>Modifier keys of key combination.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.shift">
      <summary>
        <para>Is the Shift key modifier part of key combination?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.KeyCombination.#ctor(UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates a new key combination with given key code and shortcut modifiers.</para>
      </summary>
      <param name="keyCode">Non-modifier key code of key combination.</param>
      <param name="shortcutModifiers">Shortcut modifiers keys of key combination.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.KeyCombination.ToString">
      <summary>
        <para>Returns string representation of key combination.</para>
      </summary>
      <returns>
        <para>String representation of key combination.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutArguments">
      <summary>
        <para>Provides data for shortcut action methods invoked by the shortcut system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutArguments.context">
      <summary>
        <para>Instance of the context in which the shortcut was triggered.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutArguments.stage">
      <summary>
        <para>The stage at which a shortcut action was invoked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutAttribute">
      <summary>
        <para>Attribute used to register a static method as the action for an action shortcut.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutAttribute.displayName">
      <summary>
        <para>Optional override of the Shortcut ID when listing the Shortcut in the configuration interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Creates an attribute for an action shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,System.Type,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for an action shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for an action shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBaseAttribute">
      <summary>
        <para>Abstract base class for ShortcutManagement.ShortcutAttribute and ShortcutManagement.ClutchShortcutAttribute.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBinding">
      <summary>
        <para>Represents a key binding used to trigger a shortcut.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBinding.empty">
      <summary>
        <para>A key combination representing the empty binding.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBinding.keyCombinationSequence">
      <summary>
        <para>The sequence of key combinations required to trigger a shortcut with this binding.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.#ctor(UnityEditor.ShortcutManagement.KeyCombination)">
      <summary>
        <para>Creates a shortcut binding from a single key combination.</para>
      </summary>
      <param name="keyCombination">Key combination used to trigger a shortcut with this binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.Equals(UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Determines whether this instance and another specified ShortcutBinding instance have the same value.</para>
      </summary>
      <param name="other">The ShortcutBinding to compare to this instance.</param>
      <returns>
        <para>true if the value of the other parameter is the same as the value of this instance; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.Equals(System.Object)">
      <summary>
        <para>Determines whether this instance and a specified object, which must also be a [[ShortcutBinding}} object, have the same value.</para>
      </summary>
      <param name="obj">The ShortcutBinding to compare to this instance.</param>
      <returns>
        <para>true if obj is a ShortcutBinding and its value is the same as this instance; otherwise, false. If obj is null, the method returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.GetHashCode">
      <summary>
        <para>Returns the hash code for the value of this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.ToString">
      <summary>
        <para>Converts the value of the current ShortcutManagement.ShortcutBinding object to its equivalent string representation.</para>
      </summary>
      <returns>
        <para>The string representation of the current ShortcutManagement.ShortcutBinding value.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs">
      <summary>
        <para>Provides data for the ShortcutManagement.IShortcutManager.shortcutBindingChanged event.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.newBinding">
      <summary>
        <para>The new binding for the shortcut that had its binding changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.oldBinding">
      <summary>
        <para>The old binding for the shortcut that had its binding changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.shortcutId">
      <summary>
        <para>The ID of the shortcut that had its binding changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.#ctor(System.String,UnityEditor.ShortcutManagement.ShortcutBinding,UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Initializes a new instance of the ShortcutManagement.ShortcutBindingChangedEventArgs struct using the specified shortcut ID, old binding, and new binding.</para>
      </summary>
      <param name="shortcutId">The ID of the shortcut that had its binding changed.</param>
      <param name="oldBinding">The old binding of the shortcut that had its binding changed.</param>
      <param name="newBinding">The new binding of the shortcut that had its binding changed.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutManager">
      <summary>
        <para>Provides access to an instance of ShortcutManagement.IShortcutManager for managing shortcuts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutManager.defaultProfileId">
      <summary>
        <para>A constant defining the ID of the default shortcut profile. See the documentation for the ShortcutManagement.IShortcutManager.activeProfileId property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutManager.instance">
      <summary>
        <para>An instance of the ShortcutManagement.IShortcutManager interface used for managing shortcuts in the editor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutModifiers">
      <summary>
        <para>Represents modifier keys for use in a shortcut binding.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Action">
      <summary>
        <para>Control key on Windows and Linux. Command key on macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Alt">
      <summary>
        <para>Alt key (or Option key on macOS).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.None">
      <summary>
        <para>No modifier keys.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Shift">
      <summary>
        <para>Shift key.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutStage">
      <summary>
        <para>Represents the stage at which a shortcut action was invoked.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutStage.Begin">
      <summary>
        <para>Represents that a shortcut action has begun.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutStage.End">
      <summary>
        <para>Represents that a shortcut action has ended.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SketchUpImportCamera">
      <summary>
        <para>Structure to hold camera data extracted from a SketchUp file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.aspectRatio">
      <summary>
        <para>Aspect ratio of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.farPlane">
      <summary>
        <para>The near clipping plane distance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.fieldOfView">
      <summary>
        <para>Field of view of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.isPerspective">
      <summary>
        <para>Indicate if the camera is using a perspective or orthogonal projection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.lookAt">
      <summary>
        <para>The position the camera is looking at.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.nearPlane">
      <summary>
        <para>The far clipping plane distance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.orthoSize">
      <summary>
        <para>The orthogonal projection size of the camera. This value only make sense if SketchUpImportCamera.isPerspective is false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.position">
      <summary>
        <para>The position of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.up">
      <summary>
        <para>Up vector of the camera.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SketchUpImporter">
      <summary>
        <para>Derives from AssetImporter to handle importing of SketchUp files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.latitude">
      <summary>
        <para>Retrieves the latitude Geo Coordinate imported from the SketchUp file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.longitude">
      <summary>
        <para>Retrieves the longitude Geo Coordinate imported from the SketchUp file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.northCorrection">
      <summary>
        <para>Retrieves the north correction value imported from the SketchUp file.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SketchUpImporter.GetDefaultCamera">
      <summary>
        <para>The default camera or the camera of the active Scene which the SketchUp file was saved with.</para>
      </summary>
      <returns>
        <para>The default camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SketchUpImporter.GetScenes">
      <summary>
        <para>The method returns an array of SketchUpImportScene which represents SketchUp scenes.</para>
      </summary>
      <returns>
        <para>Array of scenes extracted from a SketchUp file.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SketchUpImportScene">
      <summary>
        <para>Structure to hold scene data extracted from a SketchUp file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportScene.camera">
      <summary>
        <para>The camera data of the SketchUp scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportScene.name">
      <summary>
        <para>The name of the SketchUp scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpeedTreeImporter">
      <summary>
        <para>AssetImportor for importing SpeedTree model assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.alphaTestRef">
      <summary>
        <para>Gets and sets a default alpha test reference values.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.animateCrossFading">
      <summary>
        <para>Indicates if the cross-fade LOD transition, applied to the last mesh LOD and the billboard, should be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.bestWindQuality">
      <summary>
        <para>Returns the best-possible wind quality on this asset (configured in SpeedTree modeler).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.billboardTransitionCrossFadeWidth">
      <summary>
        <para>Proportion of the last 3D mesh LOD region width which is used for cross-fading to billboard tree.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.castShadows">
      <summary>
        <para>Gets and sets an array of booleans to enable shadow casting for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.defaultBillboardShader">
      <summary>
        <para>Returns the default SpeedTree billboard shader for the active render pipeline, or null if the asset is a SpeedTree v8 asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.defaultShader">
      <summary>
        <para>Returns the default SpeedTree shader for the active render pipeline (either v7 or v8 according to the asset version).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableBump">
      <summary>
        <para>Gets and sets an array of booleans to enable normal mapping for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableHue">
      <summary>
        <para>Gets and sets an array of booleans to enable Hue variation effect for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableSmoothLODTransition">
      <summary>
        <para>Enables smooth LOD transitions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableSubsurface">
      <summary>
        <para>Gets and sets an array of booleans to enable Subsurface effect for each LOD (affects only SpeedTree v8 assets).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.fadeOutWidth">
      <summary>
        <para>Proportion of the billboard LOD region width which is used for fading out the billboard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hasBillboard">
      <summary>
        <para>Tells if there is a billboard LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hasImported">
      <summary>
        <para>Tells if the SPM file has been previously imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hueVariation">
      <summary>
        <para>Gets and sets a default Hue variation color and amount (in alpha).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.isV8">
      <summary>
        <para>Returns true if the asset is a SpeedTree v8 asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.mainColor">
      <summary>
        <para>Gets and sets a default main color.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.materialFolderPath">
      <summary>
        <para>Returns the folder path where generated materials will be placed in.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.materialLocation">
      <summary>
        <para>Material import location options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.receiveShadows">
      <summary>
        <para>Gets and sets an array of booleans to enable shadow receiving for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.scaleFactor">
      <summary>
        <para>How much to scale the tree model compared to what is in the .spm file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.shininess">
      <summary>
        <para>Gets and sets a default Shininess value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.specColor">
      <summary>
        <para>Gets and sets a default specular color.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.useLightProbes">
      <summary>
        <para>Gets and sets an array of booleans to enable Light Probe lighting for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.windQualities">
      <summary>
        <para>Gets and sets an array of integers of the wind qualities on each LOD. Values will be clampped by bestWindQuality internally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.windQualityNames">
      <summary>
        <para>Gets an array of name strings for wind quality value.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.#ctor">
      <summary>
        <para>Construct a new SpeedTreeImporter object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.GenerateMaterials">
      <summary>
        <para>Generates all necessary materials under materialFolderPath. If Version Control is enabled please first check out the folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.LODHeights">
      <summary>
        <para>Gets and sets an array of floats of each LOD's screen height value.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpeedTreeImporter.MaterialLocation">
      <summary>
        <para>Material import location options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.MaterialLocation.External">
      <summary>
        <para>Extract the materials and textures from the model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.MaterialLocation.InPrefab">
      <summary>
        <para>Unity imports materials as sub-assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.SearchAndRemapMaterials(System.String)">
      <summary>
        <para>Search the project for matching materials and use them instead of the internal materials.</para>
      </summary>
      <param name="materialFolderPath">The path to search for matching materials.</param>
      <returns>
        <para>Returns true if any materials have been remapped, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SplashScreenStyle">
      <summary>
        <para>The style of builtin splash screen to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SplashScreenStyle.Dark">
      <summary>
        <para>Dark background with light logo and text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SplashScreenStyle.Light">
      <summary>
        <para>White background with dark logo and text.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpriteImportMode">
      <summary>
        <para>Texture importer modes for Sprite import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Multiple">
      <summary>
        <para>Sprites are multiple image sections extracted from the texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.None">
      <summary>
        <para>Graphic is not a Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Polygon">
      <summary>
        <para>Sprite has it own mesh outline defined.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Single">
      <summary>
        <para>Sprite is a single image section extracted automatically from the texture.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpriteMetaData">
      <summary>
        <para>Editor data used in producing a Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.alignment">
      <summary>
        <para>Edge-relative alignment of the sprite graphic.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.border">
      <summary>
        <para>Edge border size for a sprite (in pixels).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.name">
      <summary>
        <para>Name of the Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.pivot">
      <summary>
        <para>The pivot point of the Sprite, relative to its bounding rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.rect">
      <summary>
        <para>Bounding rectangle of the sprite's graphic within the atlas image.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpritePackerMode">
      <summary>
        <para>Sprite Packer mode for the current project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.AlwaysOn">
      <summary>
        <para>Always maintain an up-to-date sprite atlas cache for Sprite with packing tag (legacy).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.AlwaysOnAtlas">
      <summary>
        <para>Always pack all the SpriteAtlas.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.BuildTimeOnly">
      <summary>
        <para>Updates the sprite atlas cache when the Player or bundles builds containing Sprite with the legacy packing tag.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.BuildTimeOnlyAtlas">
      <summary>
        <para>Pack all the SpriteAtlas when building player/bundles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.Disabled">
      <summary>
        <para>Doesn't pack sprites.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.SpriteAtlasV2">
      <summary>
        <para>If enabled, will automatically migrate all *.spriteatlas assets to *.spriteatlasv2 assets. Old *.spriteatlas assets will be removed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.AtlasSettings">
      <summary>
        <para>Describes the final atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.allowsAlphaSplitting">
      <summary>
        <para>Marks this atlas so that it contains textures that have been flagged for Alpha splitting when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.anisoLevel">
      <summary>
        <para>Anisotropic filtering level of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.colorSpace">
      <summary>
        <para>Desired color space of the atlas.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.compressionQuality">
      <summary>
        <para>Quality of atlas texture compression in the range [0..100].</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.enableRotation">
      <summary>
        <para>Allows Sprite Packer to rotate/flip the Sprite to ensure optimal Packing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.filterMode">
      <summary>
        <para>Filtering mode of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.format">
      <summary>
        <para>The format of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.generateMipMaps">
      <summary>
        <para>Should sprite atlas textures generate mip maps?</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.maxHeight">
      <summary>
        <para>Maximum height of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.maxWidth">
      <summary>
        <para>Maximum width of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.paddingPower">
      <summary>
        <para>The amount of extra padding between packed sprites.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Sprites.IPackerPolicy">
      <summary>
        <para>Sprite packing policy interface. Provide a custom implementation to control which Sprites go into which atlases.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sprites.IPackerPolicy.AllowSequentialPacking">
      <summary>
        <para>Specifies whether sequential processing of atlas tags is enabled. If enabled, sprite packing tags are processed one by one to reduce memory usage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.IPackerPolicy.GetVersion">
      <summary>
        <para>Return the version of your policy. Sprite Packer needs to know if atlas grouping logic changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.IPackerPolicy.OnGroupAtlases(UnityEditor.BuildTarget,UnityEditor.Sprites.PackerJob,System.Int32[])">
      <summary>
        <para>Implement custom atlas grouping here.</para>
      </summary>
      <param name="target"></param>
      <param name="job"></param>
      <param name="textureImporterInstanceIDs"></param>
    </member>
    <member name="T:UnityEditor.Sprites.Packer">
      <summary>
        <para>Sprite Packer helpers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.atlasNames">
      <summary>
        <para>Array of Sprite atlas names found in the current atlas cache.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.kDefaultPolicy">
      <summary>
        <para>Name of the default Sprite Packer policy.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.Packer.Execution">
      <summary>
        <para>Sprite Packer execution mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.Execution.ForceRegroup">
      <summary>
        <para>Will always trigger IPackerPolicy.OnGroupAtlases.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.Execution.Normal">
      <summary>
        <para>Normal execution. Will not trigger IPackerPolicy.OnGroupAtlases unless IPackerPolicy, IPackerPolicy version or TextureImporter settings have changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetAlphaTexturesForAtlas(System.String)">
      <summary>
        <para>Returns all alpha atlas textures generated for the specified atlas.</para>
      </summary>
      <param name="atlasName">Name of the atlas.</param>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetAtlasDataForSprite(UnityEngine.Sprite,System.String&amp;,UnityEngine.Texture2D&amp;)">
      <summary>
        <para>Returns atlasing data for the specified Sprite.</para>
      </summary>
      <param name="sprite">Sprite to query.</param>
      <param name="atlasName">Gets set to the name of the atlas containing the specified Sprite.</param>
      <param name="atlasTexture">Gets set to the Texture containing the specified Sprite.</param>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetTexturesForAtlas(System.String)">
      <summary>
        <para>Returns all atlas textures generated for the specified atlas.</para>
      </summary>
      <param name="atlasName">Atlas name.</param>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.Policies">
      <summary>
        <para>Available Sprite Packer policies for this project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.RebuildAtlasCacheIfNeeded(UnityEditor.BuildTarget,System.Boolean,UnityEditor.Sprites.Packer/Execution)">
      <summary>
        <para>Rebuilds the Sprite atlas cache.</para>
      </summary>
      <param name="target"></param>
      <param name="displayProgressBar"></param>
      <param name="execution"></param>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.SelectedPolicy">
      <summary>
        <para>The active Sprite Packer policy for this project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.PackerJob">
      <summary>
        <para>Current Sprite Packer job definition.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.PackerJob.AddAtlas(System.String,UnityEditor.Sprites.AtlasSettings)">
      <summary>
        <para>Registers a new atlas.</para>
      </summary>
      <param name="atlasName"></param>
      <param name="settings"></param>
    </member>
    <member name="M:UnityEditor.Sprites.PackerJob.AssignToAtlas(System.String,UnityEngine.Sprite,UnityEngine.SpritePackingMode,UnityEngine.SpritePackingRotation)">
      <summary>
        <para>Assigns a Sprite to an already registered atlas.</para>
      </summary>
      <param name="atlasName"></param>
      <param name="sprite"></param>
      <param name="packingMode"></param>
      <param name="packingRotation"></param>
    </member>
    <member name="T:UnityEditor.Sprites.SpriteUtility">
      <summary>
        <para>Helper utilities for accessing Sprite data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteIndices(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite mesh indices.</para>
      </summary>
      <param name="sprite">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="getAtlasData"></param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteMesh(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite mesh positions.</para>
      </summary>
      <param name="getAtlasData">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="sprite"></param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteTexture(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite texture. If Sprite is packed, it is possible to query for both source and atlas textures.</para>
      </summary>
      <param name="getAtlasData">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="sprite"></param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteUVs(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite mesh uvs.</para>
      </summary>
      <param name="sprite">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="getAtlasData"></param>
    </member>
    <member name="T:UnityEditor.StaticEditorFlags">
      <summary>
        <para>Describes which Unity systems consider the GameObject as static, and include the GameObject in their precomputations in the Unity Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.BatchingStatic">
      <summary>
        <para>Combine the GameObject's Mesh with other eligible Meshes, to potentially reduce runtime rendering costs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.ContributeGI">
      <summary>
        <para>Include the GameObject when precomputing lighting data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.LightmapStatic">
      <summary>
        <para>Include the GameObject when precomputing lighting data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.NavigationStatic">
      <summary>
        <para>Include the GameObject when precomputing navigation data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OccludeeStatic">
      <summary>
        <para>Mark the GameObject as a Static Occludee in the occlusion culling system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OccluderStatic">
      <summary>
        <para>Mark the GameObject as a Static Occluder in the occlusion culling system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OffMeshLinkGeneration">
      <summary>
        <para>Attempt to generate an Off-Mesh Link that starts from this GameObject when precomputing navigation data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.ReflectionProbeStatic">
      <summary>
        <para>Include this GameObject when when precomputing data for Reflection Probes whose Type property is set to Baked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticOcclusionCulling">
      <summary>
        <para>StaticOcclusionCulling lets you perform static occlusion culling operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.doesSceneHaveManualPortals">
      <summary>
        <para>Does the Scene contain any occlusion portals that were added manually rather than automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.isRunning">
      <summary>
        <para>Used to check if asynchronous generation of static occlusion culling data is still running.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.umbraDataSize">
      <summary>
        <para>Returns the size in bytes that the PVS data is currently taking up in this Scene on disk.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Cancel">
      <summary>
        <para>Used to cancel asynchronous generation of static occlusion culling data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Clear">
      <summary>
        <para>Clears the PVS of the opened Scene.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Compute">
      <summary>
        <para>Used to generate static occlusion culling data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.GenerateInBackground">
      <summary>
        <para>Used to compute static occlusion culling data asynchronously.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.RemoveCacheFolder">
      <summary>
        <para>Removes temporary folder used when baking occlusion.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticOcclusionCullingVisualization">
      <summary>
        <para>Used to visualize static occlusion culling at development time in Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showGeometryCulling">
      <summary>
        <para>If set to true, culling of geometry is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showOcclusionCulling">
      <summary>
        <para>If set to true, visualization of target volumes is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPortals">
      <summary>
        <para>If set to true, visualization of portals is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPreVisualization">
      <summary>
        <para>If set to true, the visualization lines of the PVS volumes will show all cells rather than cells after culling.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showViewVolumes">
      <summary>
        <para>If set to true, visualization of view volumes is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showVisibilityLines">
      <summary>
        <para>If set to true, visualization of portals is enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StatusQueryOptions">
      <summary>
        <para>Options for querying the version control system status of a file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.ForceUpdate">
      <summary>
        <para>Force a refresh of the version control system status of the file. This is slow but accurate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.UseCachedAsync">
      <summary>
        <para>This option sets the status query to first use the latest valid version control system status of the file and query for a valid status asynchronously if otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.UseCachedIfPossible">
      <summary>
        <para>This option sets the status query to first use the latest valid version control system status of the file and query for a valid status synchronously if otherwise.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StereoRenderingPath">
      <summary>
        <para>Enum used to specify what stereo rendering path to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.Instancing">
      <summary>
        <para>Single pass VR rendering ( via instanced rendering ).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.MultiPass">
      <summary>
        <para>Multiple pass VR rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.SinglePass">
      <summary>
        <para>Single pass VR rendering ( via double-wide render texture ).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StrippingLevel">
      <summary>
        <para>Managed code stripping level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.Disabled">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.StripAssemblies">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.StripByteCode">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.UseMicroMSCorlib">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sysroot">
      <summary>
        <para>Base class for implementing sysroots and toolchains for IL2CPP</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sysroot.GetIl2CppArguments">
      <summary>
        <para>Returns the next Il2Cpp argument on each call</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.HostArch">
      <summary>
        <para>Returns name of the host architecture</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.HostPlatform">
      <summary>
        <para>Returns name of the host platform</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sysroot.Initialize">
      <summary>
        <para>Initializes sysroot</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.Name">
      <summary>
        <para>Returns name of the sysroot</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.TargetArch">
      <summary>
        <para>Returns name of the target architecture</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.TargetPlatform">
      <summary>
        <para>Returns name of the target platform</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TakeInfo">
      <summary>
        <para>A Takeinfo object contains all the information needed to describe a take.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.bakeStartTime">
      <summary>
        <para>Start time in second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.bakeStopTime">
      <summary>
        <para>Stop time in second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.defaultClipName">
      <summary>
        <para>This is the default clip name for the clip generated for this take.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.name">
      <summary>
        <para>Take name as define from imported file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.sampleRate">
      <summary>
        <para>Sample rate of the take.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.startTime">
      <summary>
        <para>Start time in second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.stopTime">
      <summary>
        <para>Stop time in second.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainLayerInspector">
      <summary>
        <para>The default Inspector class for Terrain Layer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.ApplyCustomUI(UnityEditor.ITerrainLayerCustomUI,UnityEngine.Terrain)">
      <summary>
        <para>Applies the custom UI for the Terrain Layer object.</para>
      </summary>
      <param name="customUI">The custom UI object.</param>
      <param name="terrain">The Terrain object.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.HasPreviewGUI">
      <summary>
        <para>Returns true if the Terrain Layer has a preview GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.OnInspectorGUI">
      <summary>
        <para>Draws the default Terrain Layer Inspector GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Draws the default Terrain Layer preview GUI.</para>
      </summary>
      <param name="r"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
      <summary>
        <para>Draws the default Terrain Layer static preview.</para>
      </summary>
      <param name="assetPath"></param>
      <param name="subAssets"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="T:UnityEditor.TerrainLayerUtility">
      <summary>
        <para>A set of helper functions for using terrain layers.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.CheckNormalMapTextureType(UnityEngine.Texture2D)">
      <summary>
        <para>Checks whether the texture is correctly imported as a normal map texture.</para>
      </summary>
      <param name="texture">The texture to check.</param>
      <returns>
        <para>True if texture is correctly imported, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayerGUI(UnityEngine.Terrain,UnityEngine.TerrainLayer,UnityEditor.Editor&amp;,UnityEditor.ITerrainLayerCustomUI)">
      <summary>
        <para>This helper function shows the Terrain Layer Inspector GUI nested inside the current Inspector GUI.</para>
      </summary>
      <param name="terrain">The Terrain from which the Terrain Layer originates.</param>
      <param name="terrainLayer">The Terrain Layer object to show the Inspector for.</param>
      <param name="terrainLayerEditor">Reference to a variable of type Editor in which Unity caches the Terrain Layer Inspector object.</param>
      <param name="customGUI">The custom Terrain Layer GUI object.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayersSelectionHelper(UnityEngine.Terrain,System.Int32)">
      <summary>
        <para>Helper function to show the layer selection window for selecting terrain layers in inspector.</para>
      </summary>
      <param name="terrain">Terrain tile.</param>
      <param name="activeTerrainLayer">Currently selected terrain layer index.</param>
      <returns>
        <para>Newly selected terrain layer index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEngine.TerrainLayer)">
      <summary>
        <para>Displays the tiling settings UI.</para>
      </summary>
      <param name="terrainLayer">The terrain layer that contains the tiling settings to display.</param>
      <param name="tileSize">The tile size property to display.</param>
      <param name="tileOffset">The tile offset property to display.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Displays the tiling settings UI.</para>
      </summary>
      <param name="terrainLayer">The terrain layer that contains the tiling settings to display.</param>
      <param name="tileSize">The tile size property to display.</param>
      <param name="tileOffset">The tile offset property to display.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateDiffuseTextureUI(UnityEngine.Texture2D)">
      <summary>
        <para>Checks whether the texture is a valid TerrainLayer diffuse texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</para>
      </summary>
      <param name="texture">The texture to validate.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateMaskMapTextureUI(UnityEngine.Texture2D)">
      <summary>
        <para>Checks whether the texture is a valid TerrainLayer mask map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</para>
      </summary>
      <param name="texture">The texture to validate.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateNormalMapTextureUI(UnityEngine.Texture2D,System.Boolean)">
      <summary>
        <para>Checks whether the texture is a valid TerrainLayer normal map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</para>
      </summary>
      <param name="texture">The texture to validate.</param>
      <param name="normalMapTextureType">The return value from the CheckNormalMapTextureType method indicating whether the texture is imported as a normal map.</param>
    </member>
    <member name="T:UnityEditor.TextureCompressionQuality">
      <summary>
        <para>Compression Quality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Best">
      <summary>
        <para>Best compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Fast">
      <summary>
        <para>Fast compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Normal">
      <summary>
        <para>Normal compression (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporter">
      <summary>
        <para>Texture importer lets you modify Texture2D import settings from editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.allowAlphaSplitting">
      <summary>
        <para>Allows alpha splitting on relevant platforms for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaIsTransparency">
      <summary>
        <para>If the provided alpha channel is transparency, enable this to prefilter the color to avoid filtering artifacts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaSource">
      <summary>
        <para>Select how the alpha of the imported texture is generated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaTestReferenceValue">
      <summary>
        <para>Returns or assigns the alpha test reference value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.androidETC2FallbackOverride">
      <summary>
        <para>ETC2 texture decompression fallback override on Android devices that don't support ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.anisoLevel">
      <summary>
        <para>Anisotropic filtering level of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.borderMipmap">
      <summary>
        <para>Keep texture borders the same when generating mipmaps?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.compressionQuality">
      <summary>
        <para>Quality of Texture Compression in the range [0..100].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.convertToNormalmap">
      <summary>
        <para>Convert heightmap to normal map?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.crunchedCompression">
      <summary>
        <para>Use crunched compression when available.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.fadeout">
      <summary>
        <para>Fade out mip levels to gray color?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.generateCubemap">
      <summary>
        <para>Cubemap generation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.generateMipsInLinearSpace">
      <summary>
        <para>Should mip maps be generated with gamma correction?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.grayscaleToAlpha">
      <summary>
        <para>Generate alpha channel from intensity?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.heightmapScale">
      <summary>
        <para>Amount of bumpyness in the heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.ignorePngGamma">
      <summary>
        <para>Ignore the Gamma attribute in PNG files. This property does not effect other file formats.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.isReadable">
      <summary>
        <para>Set this to true if you want texture data to be readable from scripts. Set it to false to prevent scripts from reading texture data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.lightmap">
      <summary>
        <para>Is this texture a lightmap?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.linearTexture">
      <summary>
        <para>Is texture storing non-color data?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.maxTextureSize">
      <summary>
        <para>Maximum texture size.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipMapBias">
      <summary>
        <para>Mip map bias of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapEnabled">
      <summary>
        <para>Generate Mip Maps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceEnd">
      <summary>
        <para>Mip level where texture is faded out completely.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceStart">
      <summary>
        <para>Mip level where texture begins to fade out.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFilter">
      <summary>
        <para>Mipmap filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipMapsPreserveCoverage">
      <summary>
        <para>Enables or disables coverage-preserving alpha MIP mapping.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.normalmap">
      <summary>
        <para>Is this texture a normal map?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.normalmapFilter">
      <summary>
        <para>Normal map filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.npotScale">
      <summary>
        <para>Scaling mode for non power of two textures.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.qualifiesForSpritePacking">
      <summary>
        <para>Returns true if this TextureImporter is setup for Sprite packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.secondarySpriteTextures">
      <summary>
        <para>Secondary textures for the imported Sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spriteBorder">
      <summary>
        <para>Border sizes of the generated sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spriteImportMode">
      <summary>
        <para>Selects Single or Manual import mode for Sprite textures.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePackingTag">
      <summary>
        <para>Selects the Sprite packing tag.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePivot">
      <summary>
        <para>The point in the Sprite object's coordinate space where the graphic is located.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePixelsPerUnit">
      <summary>
        <para>The number of pixels in the sprite that correspond to one unit in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePixelsToUnits">
      <summary>
        <para>Scale factor for mapping pixels in the graphic to units in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritesheet">
      <summary>
        <para>Array representing the sections of the atlas corresponding to individual sprite graphics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.sRGBTexture">
      <summary>
        <para>Is texture storing color data?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.streamingMipmaps">
      <summary>
        <para>Enable mipmap streaming for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.streamingMipmapsPriority">
      <summary>
        <para>Relative priority for this texture when reducing memory size in order to hit the memory budget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureCompression">
      <summary>
        <para>Compression of imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureFormat">
      <summary>
        <para>Format of imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureShape">
      <summary>
        <para>The shape of the imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureType">
      <summary>
        <para>Which type of texture are we dealing with here.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.vtOnly">
      <summary>
        <para>When enabled, this texture can solely be used in combination with a Texture Stack for Virtual Texturing. When enabled the texture is not guaranteed to be available as a Texture2D in the Player (e.g., not accessible from a script). When disabled, the Player includes the texture both as a Texture2D (e.g., accessible from script) and as a streamable texture in a Texture Stack.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapMode">
      <summary>
        <para>Texture coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeU">
      <summary>
        <para>Texture U coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeV">
      <summary>
        <para>Texture V coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeW">
      <summary>
        <para>Texture W coordinate wrapping mode for Texture3D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.ClearPlatformTextureSettings(System.String)">
      <summary>
        <para>Clear specific target platform settings.</para>
      </summary>
      <param name="platform">The platform whose settings are to be cleared (see below).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveAlpha">
      <summary>
        <para>Does textures source image have alpha channel.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveColor">
      <summary>
        <para>Does textures source image have RGB channels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetAllowsAlphaSplitting">
      <summary>
        <para>Getter for the flag that allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
      <returns>
        <para>True if the importer allows alpha split on the imported texture, False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetAutomaticFormat(System.String)">
      <summary>
        <para>Returns the TextureImporterFormat that would be automatically chosen for this platform.</para>
      </summary>
      <param name="platform"></param>
      <returns>
        <para>Format chosen by the system for the provided platform, TextureImporterFormat.Automatic if the platform does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetDefaultPlatformTextureSettings">
      <summary>
        <para>Get the default platform specific texture settings.</para>
      </summary>
      <returns>
        <para>A TextureImporterPlatformSettings structure containing the default platform parameters.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;,System.Int32&amp;,System.Boolean&amp;)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform for which settings are required (see options below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Format of the texture for the given platform.</param>
      <param name="compressionQuality">Value from 0..100, equivalent to the standard JPEG quality setting.</param>
      <param name="etc1AlphaSplitEnabled">Status of the ETC1 and alpha split flag.</param>
      <returns>
        <para>True if the platform override was found, false if no override was found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;,System.Int32&amp;)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform whose settings are required (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Format of the texture.</param>
      <param name="compressionQuality">Value from 0..100, equivalent to the standard JPEG quality setting.</param>
      <returns>
        <para>True if the platform override was found, false if no override was found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform whose settings are required (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Format of the texture.</param>
      <returns>
        <para>True if the platform override was found, false if no override was found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform whose settings are required (see below).</param>
      <returns>
        <para>A TextureImporterPlatformSettings structure containing the platform parameters.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.IsDefaultPlatformTextureFormatValid(UnityEditor.TextureImporterType,UnityEditor.TextureImporterFormat)">
      <summary>
        <para>Validates ref::TextureImporterFormat:: based on the type of the current format (ref::TextureImporterType::) and the default platform.</para>
      </summary>
      <param name="currentFormat">The TextureImporterType that the importer uses.</param>
      <param name="textureType">The TextureImporterFormat to validate.</param>
      <returns>
        <para>Returns true if ref::TextureImporterFormat:: is valid and can be set. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.IsPlatformTextureFormatValid(UnityEditor.TextureImporterType,UnityEditor.BuildTarget,UnityEditor.TextureImporterFormat)">
      <summary>
        <para>Validates ref::TextureImporterFormat:: based on a specified import type (ref::TextureImporterType::) and a specified build target (ref::BuildTarget::.).</para>
      </summary>
      <param name="textureType">The TextureImporterType that the importer uses.</param>
      <param name="target">The platform that the setting targets, referred to as the ref::BuilTarget::.</param>
      <param name="currentFormat">The TextureImporterFormat to validate.</param>
      <returns>
        <para>Returns true if ref::TextureImporterFormat:: is valid and can be set. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.ReadTextureImportInstructions">
      <summary>
        <para>Reads the active texture output instructions of this TextureImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.ReadTextureSettings(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Read texture settings into TextureImporterSettings class.</para>
      </summary>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetAllowsAlphaSplitting(System.Boolean)">
      <summary>
        <para>Setter for the flag that allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
      <param name="flag"></param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Boolean)">
      <summary>
        <para>Set specific target platform settings.</para>
      </summary>
      <param name="platform">The platforms whose settings are to be changed (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Data format for the texture.</param>
      <param name="compressionQuality">Value from 0..100, with 0, 50 and 100 being respectively Fast, Normal, Best quality options in the texture importer UI. For Crunch texture formats, this roughly corresponds to JPEG quality levels.</param>
      <param name="allowsAlphaSplit">Allows splitting of imported texture into RGB+A so that ETC1 compression can be applied (Android only, and works only on textures that are a part of some atlas).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Int32,System.Boolean)">
      <summary>
        <para>Set specific target platform settings.</para>
      </summary>
      <param name="platform">The platforms whose settings are to be changed (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Data format for the texture.</param>
      <param name="compressionQuality">Value from 0..100, with 0, 50 and 100 being respectively Fast, Normal, Best quality options in the texture importer UI. For Crunch texture formats, this roughly corresponds to JPEG quality levels.</param>
      <param name="allowsAlphaSplit">Allows splitting of imported texture into RGB+A so that ETC1 compression can be applied (Android only, and works only on textures that are a part of some atlas).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Set specific target platform settings.</para>
      </summary>
      <param name="platformSettings">Structure containing the platform settings.</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetTextureSettings(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Set texture importers settings from TextureImporterSettings class.</para>
      </summary>
      <param name="src"></param>
    </member>
    <member name="T:UnityEditor.TextureImporterAlphaSource">
      <summary>
        <para>Select how the alpha of the imported texture is generated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.FromGrayScale">
      <summary>
        <para>Generate Alpha from image gray scale.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.FromInput">
      <summary>
        <para>Use Alpha from the input texture if one is provided.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.None">
      <summary>
        <para>No Alpha will be used.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterCompression">
      <summary>
        <para>Select the kind of compression you want for your texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.Compressed">
      <summary>
        <para>Texture will be compressed using a standard format depending on the platform (DXT, ASTC, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.CompressedHQ">
      <summary>
        <para>Texture will be compressed using a high quality format depending on the platform and availability (BC7, ASTC4x4, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.CompressedLQ">
      <summary>
        <para>Texture will be compressed using a low quality but high performance, high compression format depending on the platform and availability (2bpp PVRTC, ASTC8x8, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.Uncompressed">
      <summary>
        <para>Texture will not be compressed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterCubemapConvolution">
      <summary>
        <para>Defines Cubemap convolution mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.Diffuse">
      <summary>
        <para>Diffuse convolution (aka irradiance Cubemap).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.None">
      <summary>
        <para>No convolution needed. This Cubemap texture represents mirror reflection or Skybox.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.Specular">
      <summary>
        <para>Specular convolution (aka Prefiltered Environment Map).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterFormat">
      <summary>
        <para>Imported texture format for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Alpha8">
      <summary>
        <para>TextureFormat.Alpha8 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ARGB16">
      <summary>
        <para>TextureFormat.ARGB4444 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ARGB32">
      <summary>
        <para>TextureFormat.ARGB32 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_10x10">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_12x12">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_4x4">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_5x5">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_6x6">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_8x8">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_10x10">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_12x12">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_4x4">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_5x5">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_6x6">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_8x8">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_10x10">
      <summary>
        <para>ASTC compressed RGB texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_12x12">
      <summary>
        <para>ASTC compressed RGB texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_4x4">
      <summary>
        <para>ASTC compressed RGB texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_5x5">
      <summary>
        <para>ASTC compressed RGB texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_6x6">
      <summary>
        <para>ASTC compressed RGB texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_8x8">
      <summary>
        <para>ASTC compressed RGB texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_10x10">
      <summary>
        <para>ASTC compressed RGBA texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_12x12">
      <summary>
        <para>ASTC compressed RGBA texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_4x4">
      <summary>
        <para>ASTC compressed RGBA texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_5x5">
      <summary>
        <para>ASTC compressed RGBA texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_6x6">
      <summary>
        <para>ASTC compressed RGBA texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_8x8">
      <summary>
        <para>ASTC compressed RGBA texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Automatic">
      <summary>
        <para>Choose texture format automatically based on the texture parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Automatic16bit">
      <summary>
        <para>Choose a 16 bit format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCompressed">
      <summary>
        <para>Choose a compressed format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCompressedHDR">
      <summary>
        <para>Choose a compressed HDR format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCrunched">
      <summary>
        <para>Choose a crunched format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticHDR">
      <summary>
        <para>Choose an HDR format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticTruecolor">
      <summary>
        <para>Choose a Truecolor format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC4">
      <summary>
        <para>TextureFormat.BC4 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC5">
      <summary>
        <para>TextureFormat.BC5 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC6H">
      <summary>
        <para>TextureFormat.BC6H compressed HDR texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC7">
      <summary>
        <para>TextureFormat.BC7 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT1">
      <summary>
        <para>TextureFormat.DXT1 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT1Crunched">
      <summary>
        <para>DXT1 compressed texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT5">
      <summary>
        <para>TextureFormat.DXT5 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT5Crunched">
      <summary>
        <para>DXT5 compressed texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_R">
      <summary>
        <para>ETC2EAC compressed 4 bits  pixel unsigned R texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_R_SIGNED">
      <summary>
        <para>ETC2EAC compressed 4 bits  pixel signed R texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_RG">
      <summary>
        <para>ETC2EAC compressed 8 bits  pixel unsigned RG texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_RG_SIGNED">
      <summary>
        <para>ETC2EAC compressed 4 bits  pixel signed RG texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4">
      <summary>
        <para>ETC (GLES2.0) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4_3DS">
      <summary>
        <para>ETC (Nintendo 3DS) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4Crunched">
      <summary>
        <para>ETC_RGB4 compressed texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGBA8_3DS">
      <summary>
        <para>ETC (Nintendo 3DS) 8 bits/pixel compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGB4">
      <summary>
        <para>ETC2 compressed 4 bits / pixel RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGB4_PUNCHTHROUGH_ALPHA">
      <summary>
        <para>ETC2 compressed 4 bits / pixel RGB + 1-bit alpha texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGBA8">
      <summary>
        <para>ETC2 compressed 8 bits / pixel RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGBA8Crunched">
      <summary>
        <para>ETC2_RGBA8 compressed color with alpha channel texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGB2">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGB2 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGB4">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGB4 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGBA2">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGBA2 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGBA4">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGBA4 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.R16">
      <summary>
        <para>TextureFormat.R16 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.R8">
      <summary>
        <para>TextureFormat.R8 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RFloat">
      <summary>
        <para>TextureFormat.RFloat floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RG16">
      <summary>
        <para>TextureFormat.RG16 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RG32">
      <summary>
        <para>TextureFormat.RG32 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB16">
      <summary>
        <para>TextureFormat.RGB565 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB24">
      <summary>
        <para>TextureFormat.RGB24 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB48">
      <summary>
        <para>TextureFormat.RGB48 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB9E5">
      <summary>
        <para>TextureFormat.RGB9e5Float packed unsigned floating point texture format with shared exponent.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA16">
      <summary>
        <para>TextureFormat.RGBA4444 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA32">
      <summary>
        <para>TextureFormat.RGBA32 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA64">
      <summary>
        <para>TextureFormat.RGBA64 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBAFloat">
      <summary>
        <para>TextureFormat.RGBAFloat floating point RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBAHalf">
      <summary>
        <para>TextureFormat.RGBAHalf half-precision floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGFloat">
      <summary>
        <para>TextureFormat.RGFloat floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGHalf">
      <summary>
        <para>TextureFormat.RGHalf half-precision floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RHalf">
      <summary>
        <para>TextureFormat.RHalf half-precision floating point texture format.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterGenerateCubemap">
      <summary>
        <para>Cubemap generation mode for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.AutoCubemap">
      <summary>
        <para>Automatically determine type of cubemap generation from the source image.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.Cylindrical">
      <summary>
        <para>Generate cubemap from cylindrical texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.FullCubemap">
      <summary>
        <para>Generate cubemap from vertical or horizontal cross texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.None">
      <summary>
        <para>Do not generate cubemap (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.Spheremap">
      <summary>
        <para>Generate cubemap from spheremap texture.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterMipFilter">
      <summary>
        <para>Mip map filter for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterMipFilter.BoxFilter">
      <summary>
        <para>Box mipmap filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterMipFilter.KaiserFilter">
      <summary>
        <para>Kaiser mipmap filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterNormalFilter">
      <summary>
        <para>Normal map filtering mode for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNormalFilter.Sobel">
      <summary>
        <para>Sobel normal map filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNormalFilter.Standard">
      <summary>
        <para>Standard normal map filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterNPOTScale">
      <summary>
        <para>Scaling mode for non power of two textures in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.None">
      <summary>
        <para>Keep non power of two textures as is.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToLarger">
      <summary>
        <para>Scale to larger power of two.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToNearest">
      <summary>
        <para>Scale to nearest power of two.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToSmaller">
      <summary>
        <para>Scale to smaller power of two.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterPlatformSettings">
      <summary>
        <para>Stores platform specifics settings of a TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.allowsAlphaSplitting">
      <summary>
        <para>Allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.androidETC2FallbackOverride">
      <summary>
        <para>Override for ETC2 decompression fallback on Android devices that don't support ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.compressionQuality">
      <summary>
        <para>Quality of texture compression in the range [0..100].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.crunchedCompression">
      <summary>
        <para>Use crunch compression when available.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.format">
      <summary>
        <para>Format of imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.maxTextureSize">
      <summary>
        <para>Maximum texture size.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.name">
      <summary>
        <para>Name of the build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.overridden">
      <summary>
        <para>Set to true in order to override the Default platform parameters by those provided in the TextureImporterPlatformSettings structure.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.resizeAlgorithm">
      <summary>
        <para>For Texture to be scaled down choose resize algorithm. ( Applyed only when Texture dimension is bigger than Max Size ).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.textureCompression">
      <summary>
        <para>Compression of imported texture.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporterPlatformSettings.CopyTo(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Copy parameters into another TextureImporterPlatformSettings object.</para>
      </summary>
      <param name="target">TextureImporterPlatformSettings object to copy settings to.</param>
    </member>
    <member name="T:UnityEditor.TextureImporterRGBMMode">
      <summary>
        <para>RGBM encoding mode for HDR textures in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Auto">
      <summary>
        <para>Do RGBM encoding when source data is HDR in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Encoded">
      <summary>
        <para>Source texture is already RGBM encoded in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Off">
      <summary>
        <para>Do not perform RGBM encoding in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.On">
      <summary>
        <para>Do RGBM encoding in TextureImporter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterSettings">
      <summary>
        <para>Stores settings of a TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaIsTransparency">
      <summary>
        <para>If the provided alpha channel is transparency, enable this to dilate the color to avoid filtering artifacts on the edges.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaSource">
      <summary>
        <para>Select how the alpha of the imported texture is generated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaTestReferenceValue">
      <summary>
        <para>Returns or assigns the alpha test reference value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.aniso">
      <summary>
        <para>Anisotropic filtering level of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.borderMipmap">
      <summary>
        <para>Enable this to avoid colors seeping out to the edge of the lower Mip levels. Used for light cookies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.convertToNormalMap">
      <summary>
        <para>Convert heightmap to normal map?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolution">
      <summary>
        <para>Convolution mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionExponent">
      <summary>
        <para>Defines how fast Phong exponent wears off in mip maps. Higher value will apply less blur to high resolution mip maps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionSteps">
      <summary>
        <para>Defines how many different Phong exponents to store in mip maps. Higher value will give better transition between glossy and rough reflections, but will need higher texture resolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.fadeOut">
      <summary>
        <para>Fade out mip levels to gray color?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.flipbookColumns">
      <summary>
        <para>The number of columns in the source image for a Texture2DArray or Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.flipbookRows">
      <summary>
        <para>The number of rows in the source image for a Texture2DArray or Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.generateCubemap">
      <summary>
        <para>Cubemap generation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.grayscaleToAlpha">
      <summary>
        <para>Generate alpha channel from intensity?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.heightmapScale">
      <summary>
        <para>Amount of bumpyness in the heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.ignorePngGamma">
      <summary>
        <para>Ignore the Gamma attribute in PNG files. This property does not effect other file formats.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapBias">
      <summary>
        <para>Mip map bias of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapEnabled">
      <summary>
        <para>Generate mip maps for the texture?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceEnd">
      <summary>
        <para>Mip level where texture is faded out to gray completely.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceStart">
      <summary>
        <para>Mip level where texture begins to fade out to gray.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFilter">
      <summary>
        <para>Mipmap filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipMapsPreserveCoverage">
      <summary>
        <para>Enables or disables coverage-preserving alpha MIP mapping.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.normalMapFilter">
      <summary>
        <para>Normal map filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.npotScale">
      <summary>
        <para>Scaling mode for non power of two textures.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.readable">
      <summary>
        <para>Is texture data readable from scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.rgbm">
      <summary>
        <para>RGBM encoding mode for HDR textures in TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.singleChannelComponent">
      <summary>
        <para>Color or Alpha component TextureImporterType|Single Channel Textures uses.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteAlignment">
      <summary>
        <para>Edge-relative alignment of the sprite graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteBorder">
      <summary>
        <para>Border sizes of the generated sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteExtrude">
      <summary>
        <para>The number of blank pixels to leave between the edge of the graphic and the mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteGenerateFallbackPhysicsShape">
      <summary>
        <para>Generates a default physics shape for a Sprite if a physics shape has not been set by the user.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteMeshType">
      <summary>
        <para>SpriteMeshType defines the type of Mesh that TextureImporter generates for a Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteMode">
      <summary>
        <para>Sprite texture import mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePivot">
      <summary>
        <para>Pivot point of the Sprite relative to its graphic's rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePixelsPerUnit">
      <summary>
        <para>The number of pixels in the sprite that correspond to one unit in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePixelsToUnits">
      <summary>
        <para>Scale factor between pixels in the sprite graphic and world space units.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteTessellationDetail">
      <summary>
        <para>The tessellation detail to be used for generating the mesh for the associated sprite if the SpriteMode is set to Single. For Multiple sprites, use the SpriteEditor to specify the value per sprite.
Valid values are in the range [0-1], with higher values generating a tighter mesh. A default of -1 will allow Unity to determine the value automatically.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.sRGBTexture">
      <summary>
        <para>Is texture storing color data?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.streamingMipmaps">
      <summary>
        <para>Enable mipmap streaming for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.streamingMipmapsPriority">
      <summary>
        <para>Relative priority for this texture when reducing memory size in order to hit the memory budget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.textureShape">
      <summary>
        <para>The shape of the imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.textureType">
      <summary>
        <para>Which type of texture are we dealing with here.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.vtOnly">
      <summary>
        <para>Enable if the texture is purposed solely for use with a Texture Stack for Virtual Texturing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapMode">
      <summary>
        <para>Texture coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeU">
      <summary>
        <para>Texture U coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeV">
      <summary>
        <para>Texture V coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeW">
      <summary>
        <para>Texture W coordinate wrapping mode for Texture3D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.ApplyTextureType(UnityEditor.TextureImporterType,System.Boolean)">
      <summary>
        <para>Configure parameters to import a texture for a purpose of type, as described TextureImporterType|here.</para>
      </summary>
      <param name="type">Texture type. See TextureImporterType.</param>
      <param name="applyAll">If false, change only specific properties. Exactly which, depends on type.</param>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.CopyTo(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Copy parameters into another TextureImporterSettings object.</para>
      </summary>
      <param name="target">TextureImporterSettings object to copy settings to.</param>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.Equal(UnityEditor.TextureImporterSettings,UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Test texture importer settings for equality.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="T:UnityEditor.TextureImporterShape">
      <summary>
        <para>The shape of the imported texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture2D">
      <summary>
        <para>Import the texture as a 2D texture (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture2DArray">
      <summary>
        <para>Import the texture as a 2D Array texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture3D">
      <summary>
        <para>Import the texture as a 3D texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.TextureCube">
      <summary>
        <para>Import the texture as a Cubemap.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterSingleChannelComponent">
      <summary>
        <para>Selects which Color/Alpha channel TextureImporterType|Single Channel Textures uses.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterSingleChannelComponent.Alpha">
      <summary>
        <para>Use the Alpha channel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterSingleChannelComponent.Red">
      <summary>
        <para>Use the red Color channel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterType">
      <summary>
        <para>Select this to set basic parameters depending on the purpose of your texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Cookie">
      <summary>
        <para>This sets up your texture with the basic parameters used for the Cookies of your lights.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Cursor">
      <summary>
        <para>Use this if your texture is going to be used as a cursor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Default">
      <summary>
        <para>This is the most common setting used for all the textures in general.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.DirectionalLightmap">
      <summary>
        <para>Use this for textures that contain directional lightmap data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.GUI">
      <summary>
        <para>Use this if your texture is going to be used on any HUD/GUI Controls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Image">
      <summary>
        <para>This is the most common setting used for all the textures in general.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Lightmap">
      <summary>
        <para>This sets up your texture with the parameters used by the lightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.NormalMap">
      <summary>
        <para>Select this to turn the color channels into a format suitable for real-time normal mapping.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Shadowmask">
      <summary>
        <para>Use this for textures that contain shadowmask data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.SingleChannel">
      <summary>
        <para>Use this for texture containing a single channel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Sprite">
      <summary>
        <para>Select this if you will be using your texture for Sprite graphics.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureResizeAlgorithm">
      <summary>
        <para>For Texture to be scaled down choose resize algorithm. ( Applyed only when Texture dimension is bigger than Max Size ).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureResizeAlgorithm.Bilinear">
      <summary>
        <para>Might provide better result than Mitchell for some noise textures preserving more sharp details.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureResizeAlgorithm.Mitchell">
      <summary>
        <para>Default high quality resize algorithm.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Tool">
      <summary>
        <para>Which tool is active in the editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Custom">
      <summary>
        <para>Any tool that is not one of the built-in tools.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Move">
      <summary>
        <para>The move tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.None">
      <summary>
        <para>No tool is active. Set this to implement your own in-inspector toolbar (like the terrain editor does).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Rect">
      <summary>
        <para>The rect tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Rotate">
      <summary>
        <para>The rotate tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Scale">
      <summary>
        <para>The scale tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Transform">
      <summary>
        <para>The transform tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.View">
      <summary>
        <para>The view tool is active - Use Tools.viewTool to find out which view tool we're talking about.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Tools">
      <summary>
        <para>Class used to manipulate the tools used in Unity's Scene View.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.current">
      <summary>
        <para>The tool that is currently selected for the Scene View.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handlePosition">
      <summary>
        <para>The position of the tool handle in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRect">
      <summary>
        <para>The rectangle used for the rect tool.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRectRotation">
      <summary>
        <para>The rotation of the rect tool handle in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRotation">
      <summary>
        <para>The rotation of the tool handle in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.hidden">
      <summary>
        <para>Hides the Tools(Move, Rotate, Resize) on the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.pivotMode">
      <summary>
        <para>Are we in Center or Pivot mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.pivotRotation">
      <summary>
        <para>What's the rotation of the tool handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.rectBlueprintMode">
      <summary>
        <para>Is the rect handle in blueprint mode?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.viewTool">
      <summary>
        <para>The option that is currently active for the View tool in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.viewToolActive">
      <summary>
        <para>Returns true if the active tool is a view or navigation tool.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.visibleLayers">
      <summary>
        <para>Which layers are visible in the Scene view.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TransformUtils">
      <summary>
        <para>Editor Transform Utility Class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TransformUtils.GetInspectorRotation(UnityEngine.Transform)">
      <summary>
        <para>Returns the rotation of a transform as it is shown in the Transform Inspector window.</para>
      </summary>
      <param name="t">Transform to get the rotation from.</param>
      <returns>
        <para>Rotation as it is shown in the Transform Inspector window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TransformUtils.SetInspectorRotation(UnityEngine.Transform,UnityEngine.Vector3)">
      <summary>
        <para>Sets the rotation of a transform as it would be set by the Transform Inspector window.</para>
      </summary>
      <param name="t">Transform to set the rotation on.</param>
      <param name="r">Rotation as it would be set by the Transform Inspector window.</param>
    </member>
    <member name="T:UnityEditor.TrueTypeFontImporter">
      <summary>
        <para>AssetImporter for importing Fonts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.ascentCalculationMode">
      <summary>
        <para>Calculation mode for determining font's ascent.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.characterPadding">
      <summary>
        <para>Border pixels added to character images for padding. This is useful if you want to render text using a shader which needs to render outside of the character area (like an outline shader).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.characterSpacing">
      <summary>
        <para>Spacing between character images in the generated texture in pixels. This is useful if you want to render text using a shader which samples pixels outside of the character area (like an outline shader).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.customCharacters">
      <summary>
        <para>A custom set of characters to be included in the Font Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontNames">
      <summary>
        <para>An array of font names, to be used when includeFontData is set to false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontReferences">
      <summary>
        <para>References to other fonts to be used looking for fallbacks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontRenderingMode">
      <summary>
        <para>Font rendering mode to use for this font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontSize">
      <summary>
        <para>Font size to use for importing the characters.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontTextureCase">
      <summary>
        <para>Use this to adjust which characters should be imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontTTFName">
      <summary>
        <para>The internal font name of the TTF file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.includeFontData">
      <summary>
        <para>If this is enabled, the actual font will be embedded into the asset for Dynamic fonts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.shouldRoundAdvanceValue">
      <summary>
        <para>Set this property to true if you want to round the internal advance width of the font to the nearest integer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TrueTypeFontImporter.GenerateEditableFont(System.String)">
      <summary>
        <para>Create an editable copy of the font asset at path.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="T:UnityEditor.tvOSSdkVersion">
      <summary>
        <para>Supported tvOS SDK versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSSdkVersion.Device">
      <summary>
        <para>Device SDK.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSSdkVersion.Simulator">
      <summary>
        <para>Simulator SDK.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.tvOSTargetOSVersion">
      <summary>
        <para>Supported tvOS deployment versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_0">
      <summary>
        <para>Target tvOS 9.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_1">
      <summary>
        <para>Target tvOS 9.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.Unknown">
      <summary>
        <para>Unknown tvOS version, managed by user.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache">
      <summary>
        <para>Provides methods for fast type extraction from asssemblies loaded into the Unity Domain.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.FieldInfoCollection">
      <summary>
        <para>Represents a read-only collection of FieldInfo and implements an IList interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Contains(System.Reflection.FieldInfo)">
      <summary>
        <para>Determines whether an element is in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether an element is in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.CopyTo(System.Reflection.FieldInfo[],System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination array that the elements from FieldInfoCollection are copied to.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination array.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination array that the elements from FieldInfoCollection are copied to.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination array.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.Count">
      <summary>
        <para>The number of elements in FieldInfoCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.FieldInfoCollection.Enumerator">
      <summary>
        <para>Enumerates the elements of a FieldInfoCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.Current">
      <summary>
        <para>Gets the element at the current position of the enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.Dispose">
      <summary>
        <para>Releases all resources used by the Enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.GetEnumerator">
      <summary>
        <para>Gets an enumerator that iterates through a FieldInfoCollection.</para>
      </summary>
      <returns>
        <para>Returns a FieldInfoCollection.Enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.IndexOf(System.Reflection.FieldInfo)">
      <summary>
        <para>Gets the first occurrence of an item in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the first occurrence of an item in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsFixedSize">
      <summary>
        <para>Whether the FieldInfoCollection is of a fixed size. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsReadOnly">
      <summary>
        <para>Whether the FieldInfoCollection is read-only. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsSynchronized">
      <summary>
        <para>Whether the FieldInfoCollection is synchronized. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.this">
      <summary>
        <para>Gets the element at the specified index.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.GetFieldsWithAttribute(System.Type)">
      <summary>
        <para>Retrieves a collection of fields marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a FieldInfo collection of fields marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetFieldsWithAttribute">
      <summary>
        <para>Retrieves a collection of fields marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a FieldInfo collection of fields marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetMethodsWithAttribute">
      <summary>
        <para>Retrieves a collection of methods marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a MethodInfo collection of methods marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetMethodsWithAttribute(System.Type)">
      <summary>
        <para>Retrieves a collection of methods marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a MethodInfo collection of methods marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesDerivedFrom">
      <summary>
        <para>Retrieves a collection of types derived from the T type.</para>
      </summary>
      <param name="parentType">Type of a class or interface.</param>
      <returns>
        <para>Returns a collection of derived types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesDerivedFrom(System.Type)">
      <summary>
        <para>Retrieves a collection of types derived from the T type.</para>
      </summary>
      <param name="parentType">Type of a class or interface.</param>
      <returns>
        <para>Returns a collection of derived types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesWithAttribute">
      <summary>
        <para>Retrieves a collection of types marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a collection of types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesWithAttribute(System.Type)">
      <summary>
        <para>Retrieves a collection of types marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a collection of types.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.TypeCache.MethodCollection">
      <summary>
        <para>Represents a read-only collection of MethodInfo and implements an IList interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Contains(System.Reflection.MethodInfo)">
      <summary>
        <para>Determines whether an element is in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether an element is in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.CopyTo(System.Reflection.MethodInfo[],System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from MethodCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from MethodCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.Count">
      <summary>
        <para>The number of elements in MethodCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.MethodCollection.Enumerator">
      <summary>
        <para>Enumerates the elements of a MethodCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.Enumerator.Current">
      <summary>
        <para>Gets the element at the current position of the enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Enumerator.Dispose">
      <summary>
        <para>Releases all resources used by the Enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Enumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
      <returns>
        <para>Returns true if the enumerator is successfully advanced to the next element. Returns false if the enumerator reaches the end of the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.GetEnumerator">
      <summary>
        <para>Gets an enumerator that iterates through a MethodCollection.</para>
      </summary>
      <returns>
        <para>Returns a MethodCollection.Enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.IndexOf(System.Reflection.MethodInfo)">
      <summary>
        <para>Gets the first occurrence of an item in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the first occurrence of an item in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsFixedSize">
      <summary>
        <para>Whether the MethodCollection is of a fixed size. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsReadOnly">
      <summary>
        <para>Whether the MethodCollection is read-only. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsSynchronized">
      <summary>
        <para>Whether the MethodCollection is synchronized. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.this">
      <summary>
        <para>Gets the element at the specified index.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.TypeCollection">
      <summary>
        <para>Represents a read-only collection of Type and implements an IList interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Contains(System.Type)">
      <summary>
        <para>Determines whether an element is in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the TypeCollection. Returnsfalse otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether an element is in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the TypeCollection. Returnsfalse otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.CopyTo(System.Type[],System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from TypeCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from TypeCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.Count">
      <summary>
        <para>The number of elements in TypeCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.TypeCollection.Enumerator">
      <summary>
        <para>Enumerates the elements of a TypeCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.Enumerator.Current">
      <summary>
        <para>Gets the element at the current position of the enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Enumerator.Dispose">
      <summary>
        <para>Releases all resources used by the Enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Enumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
      <returns>
        <para>Returns true if the enumerator is successfully advanced to the next element. Returns false if the enumerator reaches the end of the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.GetEnumerator">
      <summary>
        <para>Gets an enumerator that iterates through the TypeCollection.</para>
      </summary>
      <returns>
        <para>Returns a TypeCollection.Enumerator for the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.IndexOf(System.Type)">
      <summary>
        <para>Gets the first occurrence of an item in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the TypeCollection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the first occurrence of an item in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the TypeCollection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsFixedSize">
      <summary>
        <para>Whether the TypeCollection is of a fixed size. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsReadOnly">
      <summary>
        <para>Whether the TypeCollection is read-only. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsSynchronized">
      <summary>
        <para>Whether the TypeCollection is synchronized. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.this">
      <summary>
        <para>Gets the element at the specified index.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasAsset">
      <summary>
        <para>SpriteAtlasAsset stores inputs for generating SpriteAtlas and generates atlas textures on Import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasAsset.isVariant">
      <summary>
        <para>Checks whether the Sprite Atlas Importer set the Sprite Atlas as a Variant.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Add(UnityEngine.Object[])">
      <summary>
        <para>Add an array of Assets to the packable objects list.</para>
      </summary>
      <param name="objects"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetPackingSettings">
      <summary>
        <para>Gets the current SpriteAtlasPackingSettings to use when packing SpriteAtlas.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetPlatformSettings(System.String)">
      <summary>
        <para>Gets the platform settings of the build target specified.</para>
      </summary>
      <param name="buildTarget">The name of the build target.</param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetTextureSettings">
      <summary>
        <para>Gets the SpriteAtlasTextureSettings of packed Textures generated by this SpriteAtlasAsset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Remove(UnityEngine.Object[])">
      <summary>
        <para>Removes objects from the Atlas's packable objects list.</para>
      </summary>
      <param name="objects"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetIncludeInBuild(System.Boolean)">
      <summary>
        <para>Defines if the SpriteAtlas's packed Textures that the Importer generates are included in the build with the Sprite after packing is done.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetIsVariant(System.Boolean)">
      <summary>
        <para>Sets whether this Sprite Atlas is a Variant or not.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetMasterAtlas(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Sets an Atlas to be the Master Atlas.</para>
      </summary>
      <param name="atlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetPackingSettings(UnityEditor.U2D.SpriteAtlasPackingSettings)">
      <summary>
        <para>Sets the SpriteAtlasPackingSettings to use when packing this SpriteAtlas.</para>
      </summary>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetPlatformSettings(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Set the platform specific settings.</para>
      </summary>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetTextureSettings(UnityEditor.U2D.SpriteAtlasTextureSettings)">
      <summary>
        <para>Sets the SpriteAtlasTextureSettings for the packed Texture generated by this SpriteAtlas.</para>
      </summary>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetVariantScale(System.Single)">
      <summary>
        <para>Sets the value used to downscale the Master's Texture.</para>
      </summary>
      <param name="value">The multiplier to downscale the Master Atlas's Texture by, the recommended range  is from [0.1 ~ 0.99].</param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasExtensions">
      <summary>
        <para>Method extensions for SpriteAtlas in Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.Add(UnityEngine.U2D.SpriteAtlas,UnityEngine.Object[])">
      <summary>
        <para>Add an array of Assets to the packable objects list.</para>
      </summary>
      <param name="objects">Array of Object to be packed into the atlas.</param>
      <param name="spriteAtlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPackables(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Return all the current packed packables in the atlas.</para>
      </summary>
      <param name="spriteAtlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPackingSettings(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Current SpriteAtlasPackingSettings to use when packing this SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPlatformSettings(UnityEngine.U2D.SpriteAtlas,System.String)">
      <summary>
        <para>Returns the platform settings of the build target you specify.</para>
      </summary>
      <param name="buildTarget">The name of the build target.</param>
      <param name="spriteAtlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetTextureSettings(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Current SpriteAtlasTextureSettings of the packed texture generated by this SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.Remove(UnityEngine.U2D.SpriteAtlas,UnityEngine.Object[])">
      <summary>
        <para>Remove objects from the atlas's packable objects list.</para>
      </summary>
      <param name="objects">Object in the array you wish to remove.</param>
      <param name="spriteAtlas"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetIncludeInBuild(UnityEngine.U2D.SpriteAtlas,System.Boolean)">
      <summary>
        <para>Define if this sprite atlas's packed texture is included in the build with the Sprite after packing is done.</para>
      </summary>
      <param name="spriteAtlas"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetIsVariant(UnityEngine.U2D.SpriteAtlas,System.Boolean)">
      <summary>
        <para>Sets whether this Sprite Atlas is a variant or not.</para>
      </summary>
      <param name="spriteAtlas"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetMasterAtlas(UnityEngine.U2D.SpriteAtlas,UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Set an atlas to be the master atlas.</para>
      </summary>
      <param name="spriteAtlas"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetPackingSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.U2D.SpriteAtlasPackingSettings)">
      <summary>
        <para>Set the SpriteAtlasPackingSettings to use when packing this SpriteAtlas</para>
      </summary>
      <param name="spriteAtlas"></param>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetPlatformSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Set the platform specific settings.</para>
      </summary>
      <param name="spriteAtlas"></param>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetTextureSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.U2D.SpriteAtlasTextureSettings)">
      <summary>
        <para>Set the SpriteAtlasTextureSettings for the packed texture generated by this SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas"></param>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetVariantScale(UnityEngine.U2D.SpriteAtlas,System.Single)">
      <summary>
        <para>Set the value used to downscale the master's texture.</para>
      </summary>
      <param name="value">Recommended value is [0.1 ~ 0.99].</param>
      <param name="spriteAtlas"></param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasImporter">
      <summary>
        <para>SpriteAtlasImporter imports SpriteAtlasAsset and generates SpriteAtlas.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasPackingSettings">
      <summary>
        <para>Settings to use during the packing process for this SpriteAtlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.blockOffset">
      <summary>
        <para>Block offset to use while packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableRotation">
      <summary>
        <para>Determines if rotating a sprite is possible during packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableTightPacking">
      <summary>
        <para>Determines if sprites should be packed tightly during packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.padding">
      <summary>
        <para>Value to add boundary (padding) to sprites when packing into the atlas.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasTextureSettings">
      <summary>
        <para>Texture settings for the packed texture generated by SpriteAtlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.anisoLevel">
      <summary>
        <para>Packed texture's Anisotropic filtering level.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.filterMode">
      <summary>
        <para>Filter mode of the packed texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.generateMipMaps">
      <summary>
        <para>Set whether mipmaps should be generated for the packed texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.readable">
      <summary>
        <para>Readable state of the packed texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.sRGB">
      <summary>
        <para>Checks if the packed texture uses sRGB read/write conversions (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasUtility">
      <summary>
        <para>Utility methods to pack atlases in the Project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasUtility.PackAllAtlases(UnityEditor.BuildTarget)">
      <summary>
        <para>Pack all the SpriteAtlas Assets in the Project for the particular BuildTarget.</para>
      </summary>
      <param name="target"></param>
      <param name="canCancel"></param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasUtility.PackAtlases(UnityEngine.U2D.SpriteAtlas[],UnityEditor.BuildTarget)">
      <summary>
        <para>Pack all the provided SpriteAtlas for the particular BuildTarget.</para>
      </summary>
      <param name="atlases"></param>
      <param name="target"></param>
      <param name="canCancel"></param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteEditorExtension">
      <summary>
        <para>Sprite extension methods that are accessible in Editor only.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteEditorExtension.GetSpriteID(UnityEngine.Sprite)">
      <summary>
        <para>Gets the Sprite's GUID.</para>
      </summary>
      <param name="sprite">The Sprite to query.</param>
      <returns>
        <para>GUID stored in the Sprite.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteEditorExtension.SetSpriteID(UnityEngine.Sprite,UnityEditor.GUID)">
      <summary>
        <para>Sets a Sprite's Global Unique Identifier (GUID) for easy identification later.</para>
      </summary>
      <param name="sprite">The Sprite to set.</param>
      <param name="guid">The GUID to set for the Sprite.</param>
    </member>
    <member name="T:UnityEditor.UIElements.SerializedPropertyChangeEvent">
      <summary>
        <para>An event sent when a value in a PropertyField changes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UIElements.SerializedPropertyChangeEvent.changedProperty">
      <summary>
        <para>The SerializedProperty whose value changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UIElements.SerializedPropertyChangeEvent.#ctor">
      <summary>
        <para>Constructor. Use GetPooled instead.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UIElements.SerializedPropertyChangeEvent.GetPooled">
      <summary>
        <para>Gets an event from the event pool and initializes it with the values provided. Use this function instead of creating new events. Events obtained using this method need to be released back to the pool. You can use `Dispose()` to release them.</para>
      </summary>
      <param name="value">The serializedProperty that changed.</param>
      <returns>
        <para>An initialized event.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.UIElements.SerializedPropertyChangeEvent.Init">
      <summary>
        <para>Sets the event to its initial state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.UIOrientation">
      <summary>
        <para>Default mobile device orientation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.AutoRotation">
      <summary>
        <para>Auto Rotation Enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.LandscapeLeft">
      <summary>
        <para>Landscape : counter-clockwise from Portrait.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.LandscapeRight">
      <summary>
        <para>Landscape: clockwise from Portrait.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.Portrait">
      <summary>
        <para>Portrait.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.PortraitUpsideDown">
      <summary>
        <para>Portrait upside down.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo">
      <summary>
        <para>Lets you register undo operations on specific objects you are about to perform changes on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.postprocessModifications">
      <summary>
        <para>Callback that is triggered whenever a new set of property modifications is created.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.undoRedoPerformed">
      <summary>
        <para>Callback that is triggered after an undo or redo was executed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.willFlushUndoRecord">
      <summary>
        <para>Invoked before the Undo system performs a flush.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject,System.Type)">
      <summary>
        <para>Adds a component to the game object and registers an undo operation for this action.</para>
      </summary>
      <param name="gameObject">The game object you want to add the component to.</param>
      <param name="type">The type of component you want to add.</param>
      <returns>
        <para>The newly added component.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject)">
      <summary>
        <para>Generic version.</para>
      </summary>
      <param name="gameObject">The game object you want to add the component to.</param>
      <returns>
        <para>The newly added component.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.ClearAll">
      <summary>
        <para>Removes all undo and redo operations from  respectively the undo and redo stacks.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.ClearUndo(UnityEngine.Object)">
      <summary>
        <para>Removes all Undo operation for the identifier object registered using Undo.RegisterCompleteObjectUndo from the undo stack.</para>
      </summary>
      <param name="identifier"></param>
    </member>
    <member name="M:UnityEditor.Undo.CollapseUndoOperations(System.Int32)">
      <summary>
        <para>Collapses all undo operation up to group index together into one step.</para>
      </summary>
      <param name="groupIndex"></param>
    </member>
    <member name="M:UnityEditor.Undo.DestroyObjectImmediate(UnityEngine.Object)">
      <summary>
        <para>Destroys the object and records an undo operation so that it can be recreated.</para>
      </summary>
      <param name="objectToUndo">The object that will be destroyed.</param>
    </member>
    <member name="M:UnityEditor.Undo.FlushUndoRecordObjects">
      <summary>
        <para>Ensure objects recorded using RecordObject or ::ref:RecordObjects are registered as an undoable action. In most cases there is no reason to invoke FlushUndoRecordObjects since it's automatically done right after mouse-up and certain other events that conventionally marks the end of an action.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.GetCurrentGroup">
      <summary>
        <para>Unity automatically groups undo operations by the current group index.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.GetCurrentGroupName">
      <summary>
        <para>Get the name that will be shown in the UI for the current undo group.</para>
      </summary>
      <returns>
        <para>Name of the current group or an empty string if the current group is empty.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.IncrementCurrentGroup">
      <summary>
        <para>Unity automatically groups undo operations by the current group index.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.MoveGameObjectToScene(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene,System.String)">
      <summary>
        <para>Move a GameObject from its current Scene to a new Scene.
It is required that the GameObject is at the root of its current Scene.</para>
      </summary>
      <param name="go">GameObject to move.</param>
      <param name="scene">Scene to move the GameObject into.</param>
      <param name="name">Name of the undo action.</param>
    </member>
    <member name="M:UnityEditor.Undo.PerformRedo">
      <summary>
        <para>Perform an Redo operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.PerformUndo">
      <summary>
        <para>Perform an Undo operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo.PostprocessModifications">
      <summary>
        <para>Delegate used for postprocessModifications.</para>
      </summary>
      <param name="modifications">The set of property modifications to process.</param>
    </member>
    <member name="M:UnityEditor.Undo.RecordObject(UnityEngine.Object,System.String)">
      <summary>
        <para>Records any changes done on the object after the RecordObject function.</para>
      </summary>
      <param name="objectToUndo">The reference to the object that you will be modifying.</param>
      <param name="name">The title of the action to appear in the undo history (i.e. visible in the undo menu).</param>
    </member>
    <member name="M:UnityEditor.Undo.RecordObjects(UnityEngine.Object[],System.String)">
      <summary>
        <para>Records multiple undoable objects in a single call. This is the same as calling Undo.RecordObject multiple times.</para>
      </summary>
      <param name="objectsToUndo"></param>
      <param name="name"></param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Stores a copy of the object states on the undo stack.</para>
      </summary>
      <param name="objectToUndo">The object whose state changes need to be undone.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object[],System.String)">
      <summary>
        <para>This is equivalent to calling the first overload mutiple times, save for the fact that only one undo operation will be generated for this one.</para>
      </summary>
      <param name="objectsToUndo">An array of objects whose state changes need to be undone.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCreatedObjectUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Register an undo operations for a newly created object.</para>
      </summary>
      <param name="objectToUndo">The object that was created.</param>
      <param name="name">The name of the action to undo. Think "Undo ...." in the main menu.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Copy the states of a hierarchy of objects onto the undo stack.</para>
      </summary>
      <param name="objectToUndo">The object used to determine a hierarchy of objects whose state changes need to be undone.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object)">
      <summary>
        <para>This overload is deprecated. Use Undo.RegisterFullObjectHierarchyUndo(Object, string) instead.</para>
      </summary>
      <param name="objectToUndo"></param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterImporterUndo(System.String,System.String)">
      <summary>
        <para>Copies the state of the importer for the given asset path.</para>
      </summary>
      <param name="path">Path of the asset importer to register for Undo.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RevertAllDownToGroup(System.Int32)">
      <summary>
        <para>Performs all undo operations up to the group index without storing a redo operation in the process.</para>
      </summary>
      <param name="group"></param>
    </member>
    <member name="M:UnityEditor.Undo.RevertAllInCurrentGroup">
      <summary>
        <para>Performs the last undo operation but does not record a redo operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.SetCurrentGroupName(System.String)">
      <summary>
        <para>Set the name of the current undo group.</para>
      </summary>
      <param name="name">New name of the current undo group.</param>
    </member>
    <member name="M:UnityEditor.Undo.SetTransformParent(UnityEngine.Transform,UnityEngine.Transform,System.String)">
      <summary>
        <para>Sets the parent of transform to the new parent and records an undo operation.</para>
      </summary>
      <param name="transform">The Transform component whose parent is to be changed.</param>
      <param name="newParent">The parent Transform to be assigned.</param>
      <param name="name">The name of this action, to be stored in the Undo history buffer.</param>
    </member>
    <member name="T:UnityEditor.Undo.UndoRedoCallback">
      <summary>
        <para>Delegate used for undoRedoPerformed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo.WillFlushUndoRecord">
      <summary>
        <para>Delegate used for willFlushUndoRecord.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.UndoPropertyModification">
      <summary>
        <para>See Also: Undo.postprocessModifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UndoPropertyModification.currentValue">
      <summary>
        <para>
                  The current value of the modified property.
                  See Also: PropertyModification.
                </para>
      </summary>
    </member>
    <member name="P:UnityEditor.UndoPropertyModification.keepPrefabOverride">
      <summary>
        <para>Indicates whether to retain modifications when the targeted object is an instance of a Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UndoPropertyModification.previousValue">
      <summary>
        <para>
                  The previous value of the modified property.
                  See Also: PropertyModification .
                </para>
      </summary>
    </member>
    <member name="T:Unity.CodeEditor.CodeEditor">
      <summary>
        <para>Handles interaction with the code editor.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentEditor">
      <summary>
        <para>Returns the current IExternalCodeEditor instance for the chosen code editor.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentEditorInstallation">
      <summary>
        <para>The path to the current code editor installation being used to open script assets.</para>
      </summary>
    </member>
    <member name="T:Unity.CodeEditor.CodeEditor.Installation">
      <summary>
        <para>Data class for code editor installation.</para>
      </summary>
    </member>
    <member name="F:Unity.CodeEditor.CodeEditor.Installation.Name">
      <summary>
        <para>The name of the code editor.</para>
      </summary>
    </member>
    <member name="F:Unity.CodeEditor.CodeEditor.Installation.Path">
      <summary>
        <para>The path for the code editor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.OSOpenFile(System.String,System.String)">
      <summary>
        <para>Open an application with a quoted string of arguments.</para>
      </summary>
      <param name="appPath">The absolute path of the application to open.</param>
      <param name="arguments">The arguments to be passed to the application. You must make sure any paths are quoted correctly for the current platform.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.ParseArgument(System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Parse a string using the rules defined under.</para>
      </summary>
      <param name="arguments">The string that contains the template arguments to parse.</param>
      <param name="path">The file path to open.</param>
      <param name="line">The Line number to place the cursor.</param>
      <param name="column">The column number that represents where on the line to place the cursor.</param>
      <returns>
        <para>Returns the arguments parameter with replacements based on the values passed in to the method.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.Register(Unity.CodeEditor.IExternalCodeEditor)">
      <summary>
        <para>Register an instance of IExternalCodeEditor to use when populating Preferences/External Tools menu. Calls ref::Initialize if you select the instance.</para>
      </summary>
      <param name="externalCodeEditor">The instance of IExternalCodeEditor to register and use to communicate with script Assets.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.SetExternalScriptEditor(System.String)">
      <summary>
        <para>Sets the path of the code editor to use for opening script Assets.</para>
      </summary>
      <param name="path">The absolute path to the code editor executable. Unity uses this to open files you request.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.Unregister(Unity.CodeEditor.IExternalCodeEditor)">
      <summary>
        <para>Remove an instance of IExternalCodeEditor from the list of registered code editors. Calls ref::Initialize if you select the instance.</para>
      </summary>
      <param name="externalCodeEditor">The instance of IExternalCodeEditor to remove.</param>
    </member>
    <member name="?:Unity.CodeEditor.IExternalCodeEditor">
      <summary>
        <para>Defines the responsibilities of handling external script editor integration into UnityEditor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.Initialize(System.String)">
      <summary>
        <para>Callback to the IExternalCodeEditor when it has been chosen from the PreferenceWindow.</para>
      </summary>
      <param name="editorInstallationPath">Path of the chosen code editor.</param>
    </member>
    <member name="P:Unity.CodeEditor.IExternalCodeEditor.Installations">
      <summary>
        <para>Provide the editor with a list of known and supported editors that this instance supports.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.OnGUI">
      <summary>
        <para>Unity calls this methodf when it populates "Preferences/External Tools" in order to allow the code editor to generate necessary GUI. For example, when creating an an argument field for modifying the arguments sent to the code editor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.OpenProject(System.String,System.Int32,System.Int32)">
      <summary>
        <para>The external code editor needs to handle the request to open a file.</para>
      </summary>
      <param name="line">Line number to open the file on.</param>
      <param name="column">Column to move cursor to on the specific line.</param>
      <param name="filePath"></param>
      <returns>
        <para>Whether the request went successfully.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.SyncAll">
      <summary>
        <para>Unity calls this function during initialization in order to sync the Project. This is different from SyncIfNeeded in that it does not get a list of changes.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.SyncIfNeeded(System.String[],System.String[],System.String[],System.String[],System.String[])">
      <summary>
        <para>When you change Assets in Unity, this method for the current chosen instance of IExternalCodeEditor parses the new and changed Assets.</para>
      </summary>
      <param name="addedFiles">Added files through Unity's UI.</param>
      <param name="movedFiles">Files that was added but has been moved.</param>
      <param name="movedFromFiles">Same list as movedFiles, but contains the location of where these was moved from.</param>
      <param name="importedFiles">Imported files, which were not added through Unity's UI.</param>
      <param name="deletedFiles"></param>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.TryGetInstallationForPath(System.String,Unity.CodeEditor.CodeEditor/Installation&amp;)">
      <summary>
        <para>Unity stores the path of the chosen editor. An instance of IExternalCodeEditor can take responsibility for this path, by returning true when this method is being called. The out variable installation need to be constructed with the path and the name that should be shown in the "External Tools" code editor list.</para>
      </summary>
      <param name="editorPath">The absolute path of the chosen code editor.</param>
      <param name="installation">To store the resulting Installation. If return value is false, this result is ignored.</param>
      <returns>
        <para>Whether this IExternalCodeEditor can support the editorPath implementation.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData">
      <summary>
        <para>Contains information for various IUnityLinkerProcessor callbacks.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.inputDirectory">
      <summary>
        <para>The directory containing the assemblies that UnityLinker will process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.target">
      <summary>
        <para>The build target.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.#ctor(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Creates a new instance of an UnityLinkerBuildPipelineData.</para>
      </summary>
      <param name="target"></param>
      <param name="inputDirectory"></param>
    </member>
    <member name="T:UnityEditor.UnwrapParam">
      <summary>
        <para>Unwrapping settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.angleError">
      <summary>
        <para>Maximum allowed angle distortion (0..1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.areaError">
      <summary>
        <para>Maximum allowed area distortion (0..1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.hardAngle">
      <summary>
        <para>This angle (in degrees) or greater between triangles will cause seam to be created.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.packMargin">
      <summary>
        <para>How much uv-islands will be padded.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UnwrapParam.SetDefaults(UnityEditor.UnwrapParam&amp;)">
      <summary>
        <para>Will set default values for params.</para>
      </summary>
      <param name="param"></param>
    </member>
    <member name="T:UnityEditor.Unwrapping">
      <summary>
        <para>This class holds everything you may need in regard to uv-unwrapping.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh)">
      <summary>
        <para>Will generate per-triangle uv (3 UVs for each triangle) with default settings.</para>
      </summary>
      <param name="src">The source mesh to generate UVs for.</param>
      <returns>
        <para>The list of UVs generated.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
      <summary>
        <para>Will generate per-triangle uv (3 UVs for each triangle) with provided settings.</para>
      </summary>
      <param name="src">The source mesh to generate UVs for.</param>
      <param name="settings">Allows you to specify custom parameters to control the unwrapping.</param>
      <returns>
        <para>The list of UVs generated.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh)">
      <summary>
        <para>Will auto generate uv2 with default settings for provided mesh, and fill them in.</para>
      </summary>
      <param name="src"></param>
    </member>
    <member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
      <summary>
        <para>Will auto generate uv2 with provided settings for provided mesh, and fill them in.</para>
      </summary>
      <param name="src"></param>
      <param name="settings"></param>
    </member>
    <member name="T:UnityEditor.UpdatePrefabInstancesEventArgs">
      <summary>
        <para>A change of this type indicates that prefab instances in an open scene have been updated due to a change to the source prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UpdatePrefabInstancesEventArgs.instanceIds">
      <summary>
        <para>The instance ID for each root GameObject of the prefab instances that have been updated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UpdatePrefabInstancesEventArgs.scene">
      <summary>
        <para>The scene containing all of the prefab instances that have been updated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UpdatePrefabInstancesEventArgs.#ctor(UnityEngine.SceneManagement.Scene,Unity.Collections.NativeArray`1/ReadOnly&lt;System.Int32&gt;)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="scene">The scene containing all of the prefab instances that have been updated.</param>
      <param name="instanceIds">The instance ID for each root GameObject of the prefab instances that have been updated.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Asset">
      <summary>
        <para>This class containes information about the version control state of an asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.assetPath">
      <summary>
        <para>Gets the path of the Asset relative to the project root. If the Asset is a meta file, the path to the meta file is returned.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.fullName">
      <summary>
        <para>Gets the full name of the asset including extension.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isFolder">
      <summary>
        <para>Returns true if the asset is a folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isInCurrentProject">
      <summary>
        <para>Returns true if the asset file exists and is in the current project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isMeta">
      <summary>
        <para>Returns true if the instance of the Asset class actually refers to a .meta file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.locked">
      <summary>
        <para>Returns true if the asset is locked by the version control system.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.metaPath">
      <summary>
        <para>Gets the path of the meta file for this Asset relative to the project root. If the Asset is a meta file, the path to the meta file is returned.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.name">
      <summary>
        <para>Get the name of the asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.path">
      <summary>
        <para>Gets the path of the asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.readOnly">
      <summary>
        <para>Returns true is the asset is read only.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.state">
      <summary>
        <para>Gets the version control state of the asset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.Edit">
      <summary>
        <para>Opens the assets in an associated editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.IsOneOfStates(UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Returns true if the version control state of the assets is one of the input states.</para>
      </summary>
      <param name="states">Array of states to test for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.IsState(UnityEditor.VersionControl.Asset/States)">
      <summary>
        <para>Returns true if the version control state of the asset exactly matches the input state.</para>
      </summary>
      <param name="state">State to check for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.Load">
      <summary>
        <para>Loads the asset to memory.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Asset.States">
      <summary>
        <para>Describes the various version control states an asset can have.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.AddedLocal">
      <summary>
        <para>The asset was locally added to version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.AddedRemote">
      <summary>
        <para>Remotely this asset was added to version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.CheckedOutLocal">
      <summary>
        <para>The asset has been checked out on the local machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.CheckedOutRemote">
      <summary>
        <para>The asset has been checked out on a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Conflicted">
      <summary>
        <para>There is a conflict with the asset that needs to be resolved.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.DeletedLocal">
      <summary>
        <para>The asset has been deleted locally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.DeletedRemote">
      <summary>
        <para>The asset has been deleted on a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Exclusive">
      <summary>
        <para>Only a single user can checkout this asset</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Local">
      <summary>
        <para>The asset is not under version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.LockedLocal">
      <summary>
        <para>The asset is locked by the local machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.LockedRemote">
      <summary>
        <para>The asset is locked by a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MetaFile">
      <summary>
        <para>This instance of the class actaully refers to a .meta file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Missing">
      <summary>
        <para>The asset exists in version control but is missing on the local machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MovedLocal">
      <summary>
        <para>The asset has been moved locally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MovedRemote">
      <summary>
        <para>The asset has been moved on a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.None">
      <summary>
        <para>The version control state is unknown.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.OutOfSync">
      <summary>
        <para>A newer version of the asset is available on the version control server.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.ReadOnly">
      <summary>
        <para>The asset is read only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Synced">
      <summary>
        <para>The asset is up to date.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Unversioned">
      <summary>
        <para>This asset is either ignored or doesn't exist in version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Updating">
      <summary>
        <para>The state of the asset is currently being queried from the version control server.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.AssetList">
      <summary>
        <para>A list of version control information about assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.Filter(System.Boolean,UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Based on the current list and the states a new list is returned which only contains the assets with the requested states.</para>
      </summary>
      <param name="includeFolder">Whether or not folders should be included.</param>
      <param name="states">Which states to filter by.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.FilterChildren">
      <summary>
        <para>Create an optimised list of assets by removing children of folders in the same list.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.FilterCount(System.Boolean,UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Count the list of assets by given a set of states.</para>
      </summary>
      <param name="includeFolder">Whether or not to include folders.</param>
      <param name="states">Which states to include in the count.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.ChangeSet">
      <summary>
        <para>Wrapper around a changeset description and ID.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ChangeSet.defaultID">
      <summary>
        <para>The ID of  the default changeset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ChangeSet.description">
      <summary>
        <para>Description of a changeset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ChangeSet.id">
      <summary>
        <para>Version control specific ID of a changeset.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ChangeSets">
      <summary>
        <para>A list of the ChangeSet class.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.CheckoutMode">
      <summary>
        <para>What to checkout when starting the Checkout task through the version control Provider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Asset">
      <summary>
        <para>Checkout the asset only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Both">
      <summary>
        <para>Checkout both asset and .meta file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Exact">
      <summary>
        <para>Checkout only those assets provided in the asset list.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Meta">
      <summary>
        <para>Checkout .meta file only.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.CompletionAction">
      <summary>
        <para>Different actions a version control task can do upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnAddedChangeWindow">
      <summary>
        <para>Refresh windows upon task completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnChangeContentsPendingWindow">
      <summary>
        <para>Update the content of a pending changeset with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnChangeSetsPendingWindow">
      <summary>
        <para>Update the pending changesets with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnCheckoutCompleted">
      <summary>
        <para>Show or update the checkout failure window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnGotLatestPendingWindow">
      <summary>
        <para>Refreshes the incoming and pensing changes window upon task completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnIncomingPendingWindow">
      <summary>
        <para>Update incoming changes window with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnSubmittedChangeWindow">
      <summary>
        <para>Refresh the submit window with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.UpdatePendingWindow">
      <summary>
        <para>Update the list of pending changes when a task completes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ConfigField">
      <summary>
        <para>Describes the configuration fields of the version control that the user has selected in the Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.description">
      <summary>
        <para>Descrition of the configuration field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.isPassword">
      <summary>
        <para>This is true if the configuration field is a password field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.isRequired">
      <summary>
        <para>This is true if the configuration field is required for the version control plugin to function correctly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.label">
      <summary>
        <para>Label that is displayed next to the configuration field in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.name">
      <summary>
        <para>Name of the configuration field.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.FileMode">
      <summary>
        <para>Mode of the file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.Binary">
      <summary>
        <para>Binary file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.None">
      <summary>
        <para>No mode set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.Text">
      <summary>
        <para>Text file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.MergeMethod">
      <summary>
        <para>Which method to use when merging.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeAll">
      <summary>
        <para>Merge all changes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeNonConflicting">
      <summary>
        <para>Merge non-conflicting changes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeNone">
      <summary>
        <para>Don't merge any changes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Message">
      <summary>
        <para>Messages from the version control system.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Message.message">
      <summary>
        <para>The message text.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Message.severity">
      <summary>
        <para>The severity of the message.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Message.Severity">
      <summary>
        <para>Severity of a version control message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Error">
      <summary>
        <para>Error message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Info">
      <summary>
        <para>Informational message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Verbose">
      <summary>
        <para>Verbose message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Warning">
      <summary>
        <para>Warning message.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Message.Show">
      <summary>
        <para>Write the message to the console.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.OnlineState">
      <summary>
        <para>Represent the connection state of the version control provider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Offline">
      <summary>
        <para>Connection to the version control server could not be established.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Online">
      <summary>
        <para>Connection to the version control server has been established.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Updating">
      <summary>
        <para>The version control provider is currently trying to connect to the version control server.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Plugin">
      <summary>
        <para>The plug-in class describes the currently active version control plug-in and its configuration options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Plugin.configFields">
      <summary>
        <para>Configuration fields of the plugin.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Plugin.name">
      <summary>
        <para>The name of the currently active version control.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider">
      <summary>
        <para>This class provides access to the version control API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.activeTask">
      <summary>
        <para>Gets the currently executing task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.enabled">
      <summary>
        <para>Returns true if the version control provider is enabled and a valid Unity Pro License was found.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.hasCheckoutSupport">
      <summary>
        <para>This is true if the currently selected version control plugin supports the Checkout method.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.hasLockingSupport">
      <summary>
        <para>This is true if the currently selected version control plugin supports the Lock and Unlock methods.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.isActive">
      <summary>
        <para>Returns true if a version control plugin has been selected and configured correctly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.offlineReason">
      <summary>
        <para>Returns the reason for the version control provider being offline (if it is offline).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.onlineState">
      <summary>
        <para>Returns the OnlineState of the version control provider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Provider.preCheckoutCallback">
      <summary>
        <para>User-supplied callback to be called before Version Control check out operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Provider.preSubmitCallback">
      <summary>
        <para>User-supplied callback to be called before Version Control Submit operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.requiresNetwork">
      <summary>
        <para>This is true if a network connection is required by the currently selected version control plugin to perform any action.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Add(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Allows you to add files to via script.</para>
      </summary>
      <param name="assets">List of assets to add to version control system.</param>
      <param name="asset">Single asset to add to version control system.</param>
      <param name="recursive">Set this to true if adding should be done recursively into subfolders.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Add(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Allows you to add files to via script.</para>
      </summary>
      <param name="assets">List of assets to add to version control system.</param>
      <param name="asset">Single asset to add to version control system.</param>
      <param name="recursive">Set this to true if adding should be done recursively into subfolders.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.AddIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Given a list of assets this function returns true if Provider.Add is a valid task to perform on at least one of the assets in the list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetDescription(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Given a changeset only containing the changeset ID, this will start a task for quering the description of the changeset.</para>
      </summary>
      <param name="changeset">Changeset to query description of.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.AssetList,System.String)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.Asset,System.String)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSets">
      <summary>
        <para>Gets a list of pending changesets owned by the current user.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetStatus(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Retrieves a list of assets belonging to a changeset.</para>
      </summary>
      <param name="changeset">Changeset to query for assets.</param>
      <param name="changesetID">ChangesetID to query for assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetStatus(System.String)">
      <summary>
        <para>Retrieves a list of assets belonging to a changeset.</para>
      </summary>
      <param name="changeset">Changeset to query for assets.</param>
      <param name="changesetID">ChangesetID to query for assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String[],UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String[],UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object[],UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object[],UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ClearCache">
      <summary>
        <para>This will invalidate the cached state information for all assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(System.String)">
      <summary>
        <para>Starts a task to delete an Asset or a list of Assets from the disk and from the version control system.</para>
      </summary>
      <param name="assetProjectPath">The path to the asset that is to be deleted.</param>
      <param name="assets">List of assets to delete.</param>
      <param name="asset">Asset to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Starts a task to delete an Asset or a list of Assets from the disk and from the version control system.</para>
      </summary>
      <param name="assetProjectPath">The path to the asset that is to be deleted.</param>
      <param name="assets">List of assets to delete.</param>
      <param name="asset">Asset to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Starts a task to delete an Asset or a list of Assets from the disk and from the version control system.</para>
      </summary>
      <param name="assetProjectPath">The path to the asset that is to be deleted.</param>
      <param name="assets">List of assets to delete.</param>
      <param name="asset">Asset to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DeleteChangeSets(UnityEditor.VersionControl.ChangeSets)">
      <summary>
        <para>Starts a task that will attempt to delete the given changesets.</para>
      </summary>
      <param name="changesets">List of changetsets to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DeleteChangeSetsIsValid(UnityEditor.VersionControl.ChangeSets)">
      <summary>
        <para>Tests if deleting the given changesets is a valid task to perform.</para>
      </summary>
      <param name="changesets">Changesets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DiffHead(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Starts a task for showing a diff of the given assest versus their head revision.</para>
      </summary>
      <param name="assets">List of assets to diff.</param>
      <param name="includingMetaFiles">Whether or not to include the .meta file.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DiffIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if starting a Diff task is a valid operation for at least one asset in the given AssetList.</para>
      </summary>
      <param name="assets">List of assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetActiveConfigFields">
      <summary>
        <para>Returns the configuration fields for the currently active version control plugin.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetActivePlugin">
      <summary>
        <para>Gets the current, user selected verson control Plugin.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetByGUID(System.String)">
      <summary>
        <para>Returns version control information about an asset from a given GUID.</para>
      </summary>
      <param name="guid">GUID of asset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetByPath(System.String)">
      <summary>
        <para>Returns the version control information about an asset. Can be used with "AssetList.Add" to add assets to a list for further version control actions.</para>
      </summary>
      <param name="unityPath">Path to asset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetListFromSelection">
      <summary>
        <para>Returns the version control information about the currently selected Assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatest(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Start a task for getting the latest version of an out of sync asset from the version control server.</para>
      </summary>
      <param name="assets">List of assets to update.</param>
      <param name="asset">Asset to update.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatest(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Start a task for getting the latest version of an out of sync asset from the version control server.</para>
      </summary>
      <param name="assets">List of assets to update.</param>
      <param name="asset">Asset to update.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatestIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>The task tests the given asset list and returns true if Provider.GetLatest is valid operation for one or more assets.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatestIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="asset"></param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Incoming">
      <summary>
        <para>Starts a task that queries the version control server for incoming changes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IncomingChangeSetAssets(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Given an incoming changeset this will start a task to query the version control server for which assets are part of the changeset.</para>
      </summary>
      <param name="changeset">Incoming changeset.</param>
      <param name="changesetID">Incoming changesetid.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IncomingChangeSetAssets(System.String)">
      <summary>
        <para>Given an incoming changeset this will start a task to query the version control server for which assets are part of the changeset.</para>
      </summary>
      <param name="changeset">Incoming changeset.</param>
      <param name="changesetID">Incoming changesetid.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IsOpenForEdit(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Returns true if an asset can be edited.</para>
      </summary>
      <param name="asset">Asset to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Lock(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Attempt to lock an asset for exclusive editing.</para>
      </summary>
      <param name="asset">Asset to lock/unlock.</param>
      <param name="assets">List of assets to lock/unlock.</param>
      <param name="locked">True to lock assets, false to unlock assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Lock(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Attempt to lock an asset for exclusive editing.</para>
      </summary>
      <param name="asset">Asset to lock/unlock.</param>
      <param name="assets">List of assets to lock/unlock.</param>
      <param name="locked">True to lock assets, false to unlock assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.LockIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if the Provider.Lock task can be executed on one or more assets from the given asset list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.LockIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="asset"></param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Merge(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Initiates a merge task to handle the merging of conflicting Assets. This invokes a merge tool, which you can set in the External Tools section of the Preferences window, on the conflicting Assets. When the merge task finishes, the AssetList only contains the Assets that the tool could merge.</para>
      </summary>
      <param name="assets">The list of conflicting assets to be merged.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Move(System.String,System.String)">
      <summary>
        <para>Uses the version control plugin to move an asset from one path to another.</para>
      </summary>
      <param name="from">Path to the source asset.</param>
      <param name="to">Path to the destination.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider.PreCheckoutCallback">
      <summary>
        <para>Delegate for a user-supplied callback to be called before Version Control Checkout.</para>
      </summary>
      <param name="list">The list of Assets that will be passed on to the Checkout command. Assets can be removed from or added to this list in the callback.</param>
      <param name="changesetID">Set this to the ID of an existing changeset to check out the listed Assets in that changeset. If no changeset matching the specified ID is found, the checkout will be blocked and an error message raised. Do not set both this and the changesetDescription parameter - this is not supported and an error will be raised.</param>
      <param name="changesetDescription">To check the Assets out in a new changeset, set this description string. This action creates a new changeset, where the Assets open. Do not set both this description string and the changesetID parameter. Setting both causes an error.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider.PreSubmitCallback">
      <summary>
        <para>Delegate for a user-supplied callback to be called before Version Control Submit.</para>
      </summary>
      <param name="list">The list of Assets that will be passed on to the Checkout command. Assets can be removed from or added to this list in the callback.</param>
      <param name="changesetID">Set this to the ID of an existing changeset to submit the listed Assets in that changeset. If no changeset matching the specified ID is found, the submission will be blocked and an error message raised.</param>
      <param name="changesetDescription">If you wish to submit the Assets out in a new changeset, set this description string and a new changeset will be created and the Assets submitted there.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Resolve(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.ResolveMethod)">
      <summary>
        <para>Starts a task that will resolve the conflicting assets in version control.</para>
      </summary>
      <param name="assets">List of assets to resolve.</param>
      <param name="resolveMethod">How the assets should be resolved.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ResolveIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Tests if any of the assets in the list have the conflicted state and can be resolved.</para>
      </summary>
      <param name="assets">The list of asset to be resolved.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Revert(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Reverts the specified assets by undoing any changes done since the last time you synced.</para>
      </summary>
      <param name="assets">The list of assets to be reverted.</param>
      <param name="asset">The asset to be reverted.</param>
      <param name="mode">How to revert the assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Revert(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Reverts the specified assets by undoing any changes done since the last time you synced.</para>
      </summary>
      <param name="assets">The list of assets to be reverted.</param>
      <param name="asset">The asset to be reverted.</param>
      <param name="mode">How to revert the assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.RevertIsValid(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Returns true if Provider.Revert is a valid task to perform on at least one of the given assets in the list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
      <param name="asset">Asset to test.</param>
      <param name="mode">Revert mode to test for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.RevertIsValid(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Returns true if Provider.Revert is a valid task to perform on at least one of the given assets in the list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
      <param name="asset">Asset to test.</param>
      <param name="mode">Revert mode to test for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String[])">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String[],System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String,System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Submit(UnityEditor.VersionControl.ChangeSet,UnityEditor.VersionControl.AssetList,System.String,System.Boolean)">
      <summary>
        <para>Starts a task that submits the assets to version control.</para>
      </summary>
      <param name="changeset">The changeset to submit.</param>
      <param name="list">The list of assets to submit.</param>
      <param name="description">The description of the changeset.</param>
      <param name="saveOnly">If true then only save the changeset to be submitted later.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.SubmitIsValid(UnityEditor.VersionControl.ChangeSet,UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if submitting the assets is a valid operation.</para>
      </summary>
      <param name="changeset">The changeset to submit.</param>
      <param name="assets">The asset to submit.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UnlockIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if unlocking the assets is a valid operation.</para>
      </summary>
      <param name="assets">The asset list to test.</param>
      <param name="asset">The asset to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UnlockIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Returns true if unlocking the assets is a valid operation.</para>
      </summary>
      <param name="assets">The asset list to test.</param>
      <param name="asset">The asset to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UpdateSettings">
      <summary>
        <para>Starts a task that sends the version control settings to the version control system.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ResolveMethod">
      <summary>
        <para>How assets should be resolved.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseMerged">
      <summary>
        <para>Use merged version.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseMine">
      <summary>
        <para>Use "mine" (local version).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseTheirs">
      <summary>
        <para>Use "theirs" (other/remote version).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.RevertMode">
      <summary>
        <para>Defines the behaviour of the version control revert methods.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.KeepModifications">
      <summary>
        <para>Revert files but keep locally changed ones.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.Normal">
      <summary>
        <para>Use the version control regular revert approach.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.Unchanged">
      <summary>
        <para>Revert only unchanged files.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.SubmitResult">
      <summary>
        <para>The status of an operation returned by the VCS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.ConflictingFiles">
      <summary>
        <para>Files conflicted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.Error">
      <summary>
        <para>An error was returned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.OK">
      <summary>
        <para>Submission worked.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.UnaddedFiles">
      <summary>
        <para>Files were unable to be added.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Task">
      <summary>
        <para>A Task describes an instance of a version control operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.assetList">
      <summary>
        <para>The result of some types of tasks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.changeSets">
      <summary>
        <para>List of changesets returned by some tasks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.description">
      <summary>
        <para>A short description of the current task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.messages">
      <summary>
        <para>May contain messages from the version control plugins.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.progressPct">
      <summary>
        <para>A progress percentage for the current task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.resultCode">
      <summary>
        <para>Some task return result codes, these are stored here.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.secondsSpent">
      <summary>
        <para>Total time spent in task since the task was started.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.success">
      <summary>
        <para>Get whether or not the task was completed succesfully.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.text">
      <summary>
        <para>Will contain the result of the Provider.ChangeSetDescription task.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Task.SetCompletionAction(UnityEditor.VersionControl.CompletionAction)">
      <summary>
        <para>Upon completion of a task a completion task will be performed if it is set.</para>
      </summary>
      <param name="action">Which completion action to perform.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Task.Wait">
      <summary>
        <para>A blocking wait for the task to complete.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VertexChannelCompressionFlags">
      <summary>
        <para>Use these enum flags to specify which elements of a vertex to compress.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Color">
      <summary>
        <para>Color compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.None">
      <summary>
        <para>Vertex compression disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Normal">
      <summary>
        <para>Normal compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Position">
      <summary>
        <para>Position compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Tangent">
      <summary>
        <para>Tangent compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord0">
      <summary>
        <para>Texture coordinate 0 compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord1">
      <summary>
        <para>Texture coordinate 1 compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord2">
      <summary>
        <para>Texture coordinate 2 compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord3">
      <summary>
        <para>Texture coordinate 3 compression enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoBitrateMode">
      <summary>
        <para>Bit rate after the clip is transcoded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.High">
      <summary>
        <para>High value, possibly exceeding typical internet connection capabilities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.Low">
      <summary>
        <para>Low value, safe for slower internet connections or clips where visual quality is not critical.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.Medium">
      <summary>
        <para>Typical bit rate supported by internet connections.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoClipImporter">
      <summary>
        <para>VideoClipImporter lets you modify Video.VideoClip import settings from Editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.defaultTargetSettings">
      <summary>
        <para>Default values for the platform-specific import settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.deinterlaceMode">
      <summary>
        <para>Images are deinterlaced during transcode.  This tells the importer how to interpret fields in the source, if any.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.flipHorizontal">
      <summary>
        <para>Apply a horizontal flip during import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.flipVertical">
      <summary>
        <para>Apply a vertical flip during import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.frameCount">
      <summary>
        <para>Number of frames in the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.frameRate">
      <summary>
        <para>Frame rate of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.importAudio">
      <summary>
        <para>Import audio tracks from source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.isPlayingPreview">
      <summary>
        <para>Whether the preview is currently playing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.keepAlpha">
      <summary>
        <para>Whether to keep the alpha from the source into the transcoded clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.outputFileSize">
      <summary>
        <para>Size in bytes of the file once imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioDenominator">
      <summary>
        <para>Denominator of the pixel aspect ratio (num:den).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioNumerator">
      <summary>
        <para>Numerator of the pixel aspect ratio (num:den).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceAudioTrackCount">
      <summary>
        <para>Number of audio tracks in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceFileSize">
      <summary>
        <para>Size in bytes of the file before importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceHasAlpha">
      <summary>
        <para>True if the source file has a channel for per-pixel transparency.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sRGBClip">
      <summary>
        <para>Whether the imported clip contains sRGB color data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.transcodeSkipped">
      <summary>
        <para>Returns true if transcoding was skipped during import, false otherwise. (Read Only)

When VideoImporterTargetSettings.enableTranscoding is set to true, the resulting transcoding operation done at import time may be quite long, up to many hours depending on source resolution and content duration. An option to skip this process is offered in the asset import progress bar. When skipped, the transcoding instead provides a non-transcoded verision of the asset. However, the importer settings stay intact so this property can be inspected to detect the incoherence with the generated artifact.

Re-importing without stopping the transcode process, or with transcode turned off, causes this property to become false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.ClearTargetSettings(System.String)">
      <summary>
        <para>Clear the platform-specific import settings for the specified platform, causing them to go back to the default settings.</para>
      </summary>
      <param name="platform">Platform name.</param>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.Equals(UnityEditor.VideoClipImporter)">
      <summary>
        <para>Performs a value comparison with another VideoClipImporter.</para>
      </summary>
      <param name="rhs">The importer to compare with.</param>
      <returns>
        <para>Returns true if the settings for both VideoClipImporters match. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetPreviewTexture">
      <summary>
        <para>Returns a texture with the transcoded clip's current frame.
Returns frame 0 when not playing, and frame at current time when playing.</para>
      </summary>
      <returns>
        <para>Texture containing the current frame.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeHeight(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Get the resulting height of the resize operation for the specified resize mode.</para>
      </summary>
      <param name="mode">Mode for which the height is queried.</param>
      <returns>
        <para>Height for the specified resize mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeModeName(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Get the full name of the resize operation for the specified resize mode.</para>
      </summary>
      <param name="mode">Mode for which the width is queried.</param>
      <returns>
        <para>Name for the specified resize mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeWidth(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Get the resulting width of the resize operation for the specified resize mode.</para>
      </summary>
      <param name="mode">Mode for which the width is queried.</param>
      <returns>
        <para>Width for the specified resize mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetSourceAudioChannelCount(System.UInt16)">
      <summary>
        <para>Number of audio channels in the specified source track.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio track to query.</param>
      <returns>
        <para>Number of channels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetSourceAudioSampleRate(System.UInt16)">
      <summary>
        <para>Sample rate of the specified audio track.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio track to query.</param>
      <returns>
        <para>Sample rate in Hertz.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetTargetSettings(System.String)">
      <summary>
        <para>Returns the platform-specific import settings for the specified platform.</para>
      </summary>
      <param name="platform">Platform name.</param>
      <returns>
        <para>The platform-specific import settings. Throws an exception if the platform is unknown.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.PlayPreview">
      <summary>
        <para>Starts preview playback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.SetTargetSettings(System.String,UnityEditor.VideoImporterTargetSettings)">
      <summary>
        <para>Sets the platform-specific import settings for the specified platform.</para>
      </summary>
      <param name="platform">Platform name.</param>
      <param name="settings">The new platform-specific import settings. Throws an exception if the platform is unknown.</param>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.StopPreview">
      <summary>
        <para>Stops preview playback.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoCodec">
      <summary>
        <para>Video codec to use when importing video clips.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.Auto">
      <summary>
        <para>Choose the codec that supports hardware decoding on the target platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.H264">
      <summary>
        <para>Encode video with the H.264 codec.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.H265">
      <summary>
        <para>Encode video with the H.265 codec.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.VP8">
      <summary>
        <para>Encode video using the vp8 codec.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoDeinterlaceMode">
      <summary>
        <para>Describes how the fields in the image, if any, should be interpreted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Even">
      <summary>
        <para>First field is in the even lines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Odd">
      <summary>
        <para>First field is in the odd lines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Off">
      <summary>
        <para>Clip is not interlaced.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoEncodeAspectRatio">
      <summary>
        <para>Methods to compensate for aspect ratio discrepancies between the source resolution and the wanted encoding size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodeAspectRatio.NoScaling">
      <summary>
        <para>Perform no operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodeAspectRatio.Stretch">
      <summary>
        <para>Stretch the source to fill the target resolution without preserving the aspect ratio.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoImporterTargetSettings">
      <summary>
        <para>Importer settings that can have platform-specific values.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.aspectRatio">
      <summary>
        <para>How the aspect ratio discrepancies, if any, will be handled if the chosen import resolution has a different ratio than the source.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.bitrateMode">
      <summary>
        <para>Bit rate type for the transcoded clip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.codec">
      <summary>
        <para>Codec that the resulting VideoClip will use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.customHeight">
      <summary>
        <para>Height of the transcoded clip when the resizeMode is set to custom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.customWidth">
      <summary>
        <para>Width of the transcoded clip when the resizeMode is set to custom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.enableTranscoding">
      <summary>
        <para>Controls whether the movie file will be transcoded during import. When transcoding is not enabled, the file will be imported in its original format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.resizeMode">
      <summary>
        <para>How to resize the images when going into the imported clip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.spatialQuality">
      <summary>
        <para>Controls an internal image resize, resulting in blurrier images but smaller image dimensions and file size.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoImporterTargetSettings.#ctor">
      <summary>
        <para>Constructs an object with all members initialized with the default value inherent to their type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoResizeMode">
      <summary>
        <para>How the video clip's images will be resized during transcoding.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.CustomSize">
      <summary>
        <para>Resulting size will be driven by VideoClipImporter.customWidth and VideoClipImporter.customHeight.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.HalfRes">
      <summary>
        <para>Half width and height.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.OriginalSize">
      <summary>
        <para>Same width and height as the source.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.QuarterRes">
      <summary>
        <para>Quarter width and height.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square1024">
      <summary>
        <para>Fit source in a 1024x1024 rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square256">
      <summary>
        <para>Fit source in a 256x256 rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square512">
      <summary>
        <para>Fit source in a 512x512 rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.ThreeQuarterRes">
      <summary>
        <para>3/4 width and height.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoSpatialQuality">
      <summary>
        <para>Controls the imported clip's internal resize to save space at the cost of blurrier images.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.HighSpatialQuality">
      <summary>
        <para>No resize performed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.LowSpatialQuality">
      <summary>
        <para>Scales width and height by 1/2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.MediumSpatialQuality">
      <summary>
        <para>Scales width and height by 3/4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ViewTool">
      <summary>
        <para>Enum for Tools.viewTool.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.FPS">
      <summary>
        <para>The FPS tool is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.None">
      <summary>
        <para>View tool is not selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Orbit">
      <summary>
        <para>The orbit tool is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Pan">
      <summary>
        <para>The pan tool is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Zoom">
      <summary>
        <para>The zoom tool is selected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLCompressionFormat">
      <summary>
        <para>An enum containing different compression types.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Brotli">
      <summary>
        <para>WebGL resources are stored using Brotli compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Disabled">
      <summary>
        <para>WebGL resources are uncompressed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Gzip">
      <summary>
        <para>WebGL resources are stored using Gzip compression.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLExceptionSupport">
      <summary>
        <para>Options for Exception support in WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.ExplicitlyThrownExceptionsOnly">
      <summary>
        <para>Enable throw support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.FullWithoutStacktrace">
      <summary>
        <para>Enable exception support for all exceptions, without stack trace information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.FullWithStacktrace">
      <summary>
        <para>Enable exception support for all exceptions, including stack trace information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.None">
      <summary>
        <para>Disable exception support.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLLinkerTarget">
      <summary>
        <para>The build format options available when building to WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Asm">
      <summary>
        <para>Only asm.js output will be generated. This setting has been deprecated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Both">
      <summary>
        <para>Both asm.js and WebAssembly output will be generated. The WebAssembly version of the generated content will be used if supported by the browser, otherwise, the asm.js version will be used. This setting has been deprecated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Wasm">
      <summary>
        <para>Only WebAssembly output will be generated. This will require a browser with WebAssembly support to run the generated content.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLWasmArithmeticExceptions">
      <summary>
        <para>An enum containing different trapping modes for WebAssembly code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLWasmArithmeticExceptions.Ignore">
      <summary>
        <para>This mode avoids traps by clamping floating point value to a reasonable range when performing arithmetic operations.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLWasmArithmeticExceptions.Throw">
      <summary>
        <para>WebAssembly code will throw an exception on things like division by zero, rounding a very large float to an int, and so forth.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSABuildAndRunDeployTarget">
      <summary>
        <para>Specifies the Windows device to deploy and launch the UWP app on when using Build and Run from the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.DevicePortal">
      <summary>
        <para>Runs the app on a remote Windows device using the Windows DevicePortal (WDP) transport.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.LocalMachine">
      <summary>
        <para>Runs the app on the local Windows PC.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.WindowsPhone">
      <summary>
        <para>Runs the app on a Windows device connected to the local PC via USB, e.g. Windows Phone.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSABuildType">
      <summary>
        <para>Build configurations for Windows Store Visual Studio solutions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Debug">
      <summary>
        <para>Debug configuation.
No optimizations, profiler code enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Master">
      <summary>
        <para>Master configuation.
Optimizations enabled, profiler code disabled. This configuration is used when submitting the application to Windows Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Release">
      <summary>
        <para>Release configuration.
Optimization enabled, profiler code enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSASubtarget">
      <summary>
        <para>Target device type for a Windows Store application to run on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.AnyDevice">
      <summary>
        <para>The application targets all devices that run Windows Store applications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.HoloLens">
      <summary>
        <para>The application targets HoloLens.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.Mobile">
      <summary>
        <para>Application targets mobile devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.PC">
      <summary>
        <para>Application targets PCs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSAUWPBuildType">
      <summary>
        <para>Determines the output build type when building to Universal Windows Platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.D3D">
      <summary>
        <para>D3D Project</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.ExecutableOnly">
      <summary>
        <para>Executable Only</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.XAML">
      <summary>
        <para>XAML Project</para>
      </summary>
    </member>
    <member name="T:UnityEditor.XboxBuildSubtarget">
      <summary>
        <para>Target Xbox build type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Debug">
      <summary>
        <para>Debug player (for building with source code).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Development">
      <summary>
        <para>Development player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Master">
      <summary>
        <para>Master player (submission-proof).</para>
      </summary>
    </member>
  </members>
</doc>
