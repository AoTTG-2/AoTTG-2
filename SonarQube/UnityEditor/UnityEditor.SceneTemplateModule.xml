<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEditor.SceneTemplateModule</name>
    </assembly>
    <member name="T:UnityEditor.SceneTemplate.DependencyInfo">
      <summary>
        <para>A descriptor that stores one of a template Scene's dependency Assets, and specifies whether to clone or reference it when the template is instantiated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.DependencyInfo.dependency">
      <summary>
        <para>A dependency Asset of the template Scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.DependencyInfo.instantiationMode">
      <summary>
        <para>The action to take with the dependency when the template is instantiated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneTemplate.DependencyInfo.#ctor">
      <summary>
        <para>Constructor for a DependencyInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneTemplate.InstantiationResult">
      <summary>
        <para>A class that holds the data created when a SceneTemplateAsset is instantiated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneTemplate.InstantiationResult.scene">
      <summary>
        <para>The Scene that is created and loaded when a SceneTemplateAsset is instantiated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneTemplate.InstantiationResult.sceneAsset">
      <summary>
        <para>The SceneAsset that is created when a SceneTemplateAsset is instantiated.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneTemplate.ISceneTemplatePipeline">
      <summary>
        <para>Derive from this interface to package a custom code sequence when a Scene template is instantiated. ISceneTemplatePipeline is instantiated once when a template is instantiated, and is notified multiple times during the instantiation sequence.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneTemplate.ISceneTemplatePipeline.AfterTemplateInstantiation(UnityEditor.SceneTemplate.SceneTemplateAsset,UnityEngine.SceneManagement.Scene,System.Boolean,System.String)">
      <summary>
        <para>An event called after the Scene template is instantiated, and while the new scene is still loaded.</para>
      </summary>
      <param name="sceneTemplateAsset">The Scene template asset to instantiate.</param>
      <param name="scene">The newly created Scene.</param>
      <param name="isAdditive">When set to true, the new Scene is created in additive mode.</param>
      <param name="sceneName">The path to the newly created Scene. If the template you instantiated does not have any cloneable dependencies, this can be empty.</param>
    </member>
    <member name="M:UnityEditor.SceneTemplate.ISceneTemplatePipeline.BeforeTemplateInstantiation(UnityEditor.SceneTemplate.SceneTemplateAsset,System.Boolean,System.String)">
      <summary>
        <para>An event called before the Scene template is instantiated.</para>
      </summary>
      <param name="sceneTemplateAsset">The Scene template Asset to instantiate.</param>
      <param name="isAdditive">When set to true, the new Scene is created in additive mode.</param>
      <param name="sceneName">The path to the newly created Scene. If the temlate you instantiated does not have any cloneable dependencies, this can be empty.</param>
    </member>
    <member name="M:UnityEditor.SceneTemplate.ISceneTemplatePipeline.IsValidTemplateForInstantiation(UnityEditor.SceneTemplate.SceneTemplateAsset)">
      <summary>
        <para>An event called before the New Scene dialog is displayed to determine whether this template is available in the dialog.</para>
      </summary>
      <param name="sceneTemplateAsset">A Scene Template asset that is available in New Scene dialog.</param>
      <returns>
        <para>True if the Scene template can be instantiated. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneTemplate.SceneTemplateAsset">
      <summary>
        <para>An Asset that stores everything required to instantiate a new Scene from a templated Scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.addToDefaults">
      <summary>
        <para>Use this field to add this template to the list of default templates in the New scene dialog.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.dependencies">
      <summary>
        <para>Lists Scene dependencies, and specifies whether to clone or reference each one.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.description">
      <summary>
        <para>A description of the Scene template. This description can be long. In the Unity editor, it appears on multiple lines.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneTemplate.SceneTemplateAsset.isValid">
      <summary>
        <para>Specifies whether the Scene template is valid. Invalid templates do not appear in the New Scene dialog.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.preview">
      <summary>
        <para>The Scene template's preview image or icon.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.templateName">
      <summary>
        <para>A user-defined name for the Scene template Asset. By default, this is the template's file name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.templatePipeline">
      <summary>
        <para>A script that derives from ISceneTemplatePipeline. It allows you to execute custom code when a template is instantiated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.SceneTemplateAsset.templateScene">
      <summary>
        <para>The Scene that is copied when the Scene template is instantiated.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneTemplate.SceneTemplatePipelineAdapter">
      <summary>
        <para>An adapter that implements all the functions of ISceneTemplatePipeline for easier usage. Use it to partially override a ISceneTemplatePipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneTemplate.SceneTemplatePipelineAdapter.AfterTemplateInstantiation(UnityEditor.SceneTemplate.SceneTemplateAsset,UnityEngine.SceneManagement.Scene,System.Boolean,System.String)">
      <summary>
        <para>An event called after the Scene template is instantiated, and while the new Scene is still loaded.</para>
      </summary>
      <param name="sceneTemplateAsset">The Scene template Asset to instantiate.</param>
      <param name="scene">The newly created Scene.</param>
      <param name="isAdditive">When set to true, the new Scene is created in additive mode.</param>
      <param name="sceneName">The path to the newly created Scene. If the template you instantiated does not have any cloneable dependencies, this can be empty.</param>
    </member>
    <member name="M:UnityEditor.SceneTemplate.SceneTemplatePipelineAdapter.BeforeTemplateInstantiation(UnityEditor.SceneTemplate.SceneTemplateAsset,System.Boolean,System.String)">
      <summary>
        <para>An event called before the Scene template is instantiated.</para>
      </summary>
      <param name="sceneTemplateAsset">The Scene template Asset to instantiate.</param>
      <param name="isAdditive">When set to true, the new Scene is created in additive mode.</param>
      <param name="sceneName">The path to the newly created Scene. If the template you instantiated does not have any cloneable dependencies, this can be empty.</param>
    </member>
    <member name="M:UnityEditor.SceneTemplate.SceneTemplatePipelineAdapter.IsValidTemplateForInstantiation(UnityEditor.SceneTemplate.SceneTemplateAsset)">
      <summary>
        <para>An event called before the New Scene dialog is displayed to determine whether this template is available in the dialog.</para>
      </summary>
      <param name="sceneTemplateAsset">A Scene Template asset that is available in New Scene dialog.</param>
      <returns>
        <para>True if the Scene template can be instantiated. False otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneTemplate.SceneTemplateService">
      <summary>
        <para>A utility class that manages SceneTemplateAsset instantiation.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneTemplate.SceneTemplateService.newSceneTemplateInstantiated(UnityEditor.SceneTemplate.SceneTemplateService/NewTemplateInstantiated)">
      <summary>
        <para>Events fired after a Scene template is instantiated.</para>
      </summary>
      <param name="value">A user-defined handler that is called after a Scene template is instantiated.</param>
    </member>
    <member name="?:UnityEditor.SceneTemplate.SceneTemplateService.newSceneTemplateInstantiating(UnityEditor.SceneTemplate.SceneTemplateService/NewTemplateInstantiating)">
      <summary>
        <para>Events fired before a Scene template is instantiated.</para>
      </summary>
      <param name="value">A user-defined handler that is called before a Scene template is instantiated.</param>
    </member>
    <member name="M:UnityEditor.SceneTemplate.SceneTemplateService.CreateSceneTemplate(System.String)">
      <summary>
        <para>Creates a new Scene template at a specific path. The template is not bound to a Scene.</para>
      </summary>
      <param name="sceneTemplatePath">The path to the new Scene template asset.</param>
      <returns>
        <para>Returns a new Scene template Asset instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneTemplate.SceneTemplateService.CreateTemplateFromScene(UnityEditor.SceneAsset,System.String)">
      <summary>
        <para>Creates a new Scene template bound to a specific Scene. All of the template Scene's dependencies are extracted and set to be referenced.</para>
      </summary>
      <param name="sourceSceneAsset">The Scene Asset that serves as the template.</param>
      <param name="sceneTemplatePath">The path to the new Scene template asset.</param>
      <returns>
        <para>A new Scene template Asset instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneTemplate.SceneTemplateService.Instantiate(UnityEditor.SceneTemplate.SceneTemplateAsset,System.Boolean,System.String)">
      <summary>
        <para>Instantiates a new Scene from a template.</para>
      </summary>
      <param name="sceneTemplate">A Scene template Asset that contains the information required to instantiate the Scene.</param>
      <param name="loadAdditively">Specifies whether the new Scene is created additively in the currently loaded Scene.</param>
      <param name="newSceneOutputPath">The path to the new Scene created from the template. This is set only when the SceneTemplateAsset has cloneable dependencies, because in that case, the new Scene must be be saved on disk.</param>
      <returns>
        <para>The new Scene and its SceneTemplateAsset counterpart.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneTemplate.SceneTemplateService.NewTemplateInstantiated">
      <summary>
        <para>An event called after a Scene template is instantiated.</para>
      </summary>
      <param name="sceneTemplateAsset">The Scene template that was instantiated.</param>
      <param name="scene">The template Scene that was instantiated.</param>
      <param name="sceneAsset">The new Scene Asset created by instantiating the Scene template.</param>
      <param name="additiveLoad">Specifies whether the template was instantiated in additive mode.</param>
    </member>
    <member name="T:UnityEditor.SceneTemplate.SceneTemplateService.NewTemplateInstantiating">
      <summary>
        <para>An event called before a Scene template is instantiated.</para>
      </summary>
      <param name="sceneTemplateAsset">The Scene template to instantiate.</param>
      <param name="newSceneOutputPath">The output path for the new Scene. This can be empty if the scene is created in memory.</param>
      <param name="additiveLoad">Specifies whether to instantiate the Scene template in additive mode.</param>
    </member>
    <member name="T:UnityEditor.SceneTemplate.TemplateInstantiationMode">
      <summary>
        <para>An enumeration of options for handling a Scene dependency Asset when you instantiate a SceneTemplateAsset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.TemplateInstantiationMode.Clone">
      <summary>
        <para>Specifies that the dependency Asset is cloned when the SceneTemplateAsset is instantiated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneTemplate.TemplateInstantiationMode.Reference">
      <summary>
        <para>Specifies that the dependency Asset is kept as a reference when the SceneTemplateAsset is instantiated.</para>
      </summary>
    </member>
  </members>
</doc>
